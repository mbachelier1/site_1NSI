{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Premi\u00e8re NSI au lyc\u00e9e Henri Avril \u2693\ufe0e Voici les diff\u00e9rentes parties du programme Rep\u00e9senter les donn\u00e9es \u2693\ufe0e Repr\u00e9senter les entiers Repr\u00e9senter les reels et flottants Repr\u00e9senter le texte Table de donn\u00e9es \u2693\ufe0e Traitement de donn\u00e9es en table R\u00e9seaux et internet \u2693\ufe0e R\u00e9seau Protocole TCP IP S\u00e9curisation Mod\u00e8le d'architecture et syst\u00e8me d'exploitation \u2693\ufe0e Architecture \u2693\ufe0e Mod\u00e8le de von Neumann Les syst\u00e8mes d'exploitation Echanger avec la machine \u2693\ufe0e Logique combinatoire Assembleur Linux Assembleur Programmation \u2693\ufe0e Bien d\u00e9marrer en programmation Conditions et boucles Fonctions Types construits Tkinter IHM \u2693\ufe0e html et CSS \u2693\ufe0e HTML CSS javascript \u2693\ufe0e D\u00e9couverte de javascript Programmation \u00e9v\u00e8nementielle Les formulaires Algorithmie \u2693\ufe0e Introduction \u00e0 l'algorithmie Complexit\u00e9 Algorithmes de tris Algorithmes glouton K plus proches voisins Robotique \u2693\ufe0e Robotique Projets Robotique Php \u2693\ufe0e protocole HTTP PHP","title":"Accueil"},{"location":"index.html#premiere-nsi-au-lycee-henri-avril","text":"Voici les diff\u00e9rentes parties du programme","title":"Premi\u00e8re NSI au lyc\u00e9e Henri Avril"},{"location":"index.html#repesenter-les-donnees","text":"Repr\u00e9senter les entiers Repr\u00e9senter les reels et flottants Repr\u00e9senter le texte","title":"Rep\u00e9senter les donn\u00e9es"},{"location":"index.html#table-de-donnees","text":"Traitement de donn\u00e9es en table","title":"Table de donn\u00e9es"},{"location":"index.html#reseaux-et-internet","text":"R\u00e9seau Protocole TCP IP S\u00e9curisation","title":"R\u00e9seaux et internet"},{"location":"index.html#modele-darchitecture-et-systeme-dexploitation","text":"","title":"Mod\u00e8le d'architecture et syst\u00e8me d'exploitation"},{"location":"index.html#architecture","text":"Mod\u00e8le de von Neumann Les syst\u00e8mes d'exploitation","title":"Architecture"},{"location":"index.html#echanger-avec-la-machine","text":"Logique combinatoire Assembleur Linux Assembleur","title":"Echanger avec la machine"},{"location":"index.html#programmation","text":"Bien d\u00e9marrer en programmation Conditions et boucles Fonctions Types construits Tkinter","title":"Programmation"},{"location":"index.html#ihm","text":"","title":"IHM"},{"location":"index.html#html-et-css","text":"HTML CSS","title":"html et CSS"},{"location":"index.html#javascript","text":"D\u00e9couverte de javascript Programmation \u00e9v\u00e8nementielle Les formulaires","title":"javascript"},{"location":"index.html#algorithmie","text":"Introduction \u00e0 l'algorithmie Complexit\u00e9 Algorithmes de tris Algorithmes glouton K plus proches voisins","title":"Algorithmie"},{"location":"index.html#robotique","text":"Robotique Projets Robotique","title":"Robotique"},{"location":"index.html#php","text":"protocole HTTP PHP","title":"Php"},{"location":"allure.html","text":"a# Terminale NSI au lyc\u00e9e Henri Avril Les th\u00e8mes du programme \u2693\ufe0e Le programme est d\u00e9coup\u00e9 en 5 parties : Structures de donn\u00e9es Bases de donn\u00e9es R\u00e9seaux et syst\u00e8me d'exploitation Programmation Algorithmie . Administration de la base via formulaire php \u2693\ufe0e 1 2 for i in range ( 10 ): print ( \"Salut \u00e0 tous !\" ) 1 < h1 > ldmfkhsmudfj </ h1 > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 html , body { margin : 0 ; padding : 0 ; } body { background-color : white ; font-family : Verdana , sans-serif ; font-size : 100 % ; } h1 { font-size : 200 % ; color : navy ; text-align : center ; } 1 2 3 4 5 6 7 var year = 2016 ; // des chiffres var president = \"Fran\u00e7ois H\" ; // des mots var candidats = [ \"Pierre\" , \"Paul\" , \"Jacques\" ]; // une liste de noms candidats [ 0 ]; // \"Pierre\" candidats [ 1 ]; // \"Paul\" var notes = [ 12 , 18 , 20 ]; // une liste de notes notes [ 0 ]; // 12 1 2 3 4 5 6 7 8 #include <stdio.h> int main (){ int i ; for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"Salut \u00e0 tous ! \\n \" ); } return 0 ; } 1 SELECT * FROM client ; definiton toutes les lignes commencent par un chevron note une note summary summary example example important Important info info fail fail attention attention danger danger bug bug faq et pourquoi pas done done cite cite un bouton creux Un bouton pleins lien This... That... ...and The Other <!-- function checkCheckBoxes(theForm) { if ( theForm.CHECKBOX_1.checked == false && theForm.CHECKBOX_2.checked == false && theForm.CHECKBOX_3.checked == false) { alert ('You didn\\'t choose any of the checkboxes!'); return false; } else { return true; } } //--> QCM \u00e0 cocher On souhaite proposer un QCM, auto corrig\u00e9. Exemple 1 Pour cet exercice sur Python, on ne regarde que si l'identifiant est valide , il pourrait \u00eatre mal choisi. Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _ test Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u2705 _ \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _","title":"Allure"},{"location":"allure.html#les-themes-du-programme","text":"Le programme est d\u00e9coup\u00e9 en 5 parties : Structures de donn\u00e9es Bases de donn\u00e9es R\u00e9seaux et syst\u00e8me d'exploitation Programmation Algorithmie .","title":"Les th\u00e8mes du programme"},{"location":"allure.html#administration-de-la-base-via-formulaire-php","text":"1 2 for i in range ( 10 ): print ( \"Salut \u00e0 tous !\" ) 1 < h1 > ldmfkhsmudfj </ h1 > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 html , body { margin : 0 ; padding : 0 ; } body { background-color : white ; font-family : Verdana , sans-serif ; font-size : 100 % ; } h1 { font-size : 200 % ; color : navy ; text-align : center ; } 1 2 3 4 5 6 7 var year = 2016 ; // des chiffres var president = \"Fran\u00e7ois H\" ; // des mots var candidats = [ \"Pierre\" , \"Paul\" , \"Jacques\" ]; // une liste de noms candidats [ 0 ]; // \"Pierre\" candidats [ 1 ]; // \"Paul\" var notes = [ 12 , 18 , 20 ]; // une liste de notes notes [ 0 ]; // 12 1 2 3 4 5 6 7 8 #include <stdio.h> int main (){ int i ; for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"Salut \u00e0 tous ! \\n \" ); } return 0 ; } 1 SELECT * FROM client ; definiton toutes les lignes commencent par un chevron note une note summary summary example example important Important info info fail fail attention attention danger danger bug bug faq et pourquoi pas done done cite cite un bouton creux Un bouton pleins lien This... That... ...and The Other <!-- function checkCheckBoxes(theForm) { if ( theForm.CHECKBOX_1.checked == false && theForm.CHECKBOX_2.checked == false && theForm.CHECKBOX_3.checked == false) { alert ('You didn\\'t choose any of the checkboxes!'); return false; } else { return true; } } //--> QCM \u00e0 cocher On souhaite proposer un QCM, auto corrig\u00e9. Exemple 1 Pour cet exercice sur Python, on ne regarde que si l'identifiant est valide , il pourrait \u00eatre mal choisi. Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _ test Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u2705 _ \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _","title":"Administration de la base via formulaire php"},{"location":"IHM/html/css.html","text":"Feuille de style CSS \u2693\ufe0e Introduction \u2693\ufe0e Nous avons appris les principales balises du HTML, ce qui nous permet de cr\u00e9er une page web \"brute\" avec des liens mais d\u00e9pouill\u00e9e, sans aucune d\u00e9coration.v La mise en forme du texte se fait \u00e0 l'aide des \"feuilles de style\" et du langage css . (Cascade Style Sheets). Il y a deux fa\u00e7ons de proc\u00e9der : \u00e9crire les instructions de style dans la page html, avec la balise <style> ou traiter les styles dans un fichier s\u00e9par\u00e9, ce qui est de loin pr\u00e9f\u00e9rable, car avec un seul fichier on peut modifier la pr\u00e9sentation de centaines de pages html ! Voici un exemple de base: base1_style.html L'ouvrir dans un \u00e9diteur de texte, et le tester dans un navigateur. C'est \u00e9crit en noir sur fond blanc, \u00e0 par les liens qui sont en bleu et soulign\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < body > < h1 > LE LANGAGE CSS </ h1 > < h2 > G\u00e9rer les couleurs et les fonds </ h2 > < p > Le langage css permet de mettre en forme les textes html < br /> On peut agir sur les couleurs et la disposition des textes. </ p > < p > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > < p > Voici une liste de langages: < ul > < li > Python </ li > < li > PHP </ li > < li > Javascript </ li > < li > XHTML </ li > < li > C++ </ li > < ul > </ p > < h2 > Une liste de liens </ h2 > < p > < ol > < li >< a href = \"base1_style.html\" > Cliquer ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> </ ol > </ p > </ body > </ html > Couleurs et fonds \u2693\ufe0e On commence d'abord par ajouter le lien vers la feuille de style entre les balises <head> et </head> . 1 < link rel = \"stylesheet\" href = \"monstyle.css\" /> On cr\u00e9e un nouveau fichier dans l'\u00e9diteur: \"monstyle.css\" .(Choisissez Cascade Style Sheets File) et sauvegarder dans le m\u00eame dossier que la page html. On commence par changer la couleur du fond 1 2 3 body { background-color : yellow ; } Le style appliqu\u00e9 \u00e0 la balise est \u00e9crit entre accolades, avec un point-virgule \u00e0 la fin de chaque instruction. Il est plus lisible de pratiquer une indentation, et de passer \u00e0 la ligne apr\u00e8s chaque instruction. Enregistrer votre fichier, et actualisez la page dans le navigateur! Ainsi vous voyez rapidement l'effet de votre commande. Il existe des couleurs pr\u00e9d\u00e9finies (red, black, \u2026) et on peut aussi utiliser le code rgb . 1 background-color : rgb ( 250 , 250 , 0 ); On peut aussi utiliser une image de fond (en g\u00e9n\u00e9ral de taille petite, qui se r\u00e9p\u00e8te \u2026..) 1 2 background-image : url ( \"fond.jpg\" ); background-repeat : repeat ; L'image doit \u00eatre dans le m\u00eame dossier que le fichier css, ou dans un sous dossier auquel cas il faut indiquer le chemin (exemple : \"images/fond.jpg\") . La couleur des textes est donn\u00e9e par la propri\u00e9t\u00e9 color . 1 2 3 h1 { color : blue ; } Tous les titres h1 seront en bleu. On peut aussi agir sur la couleur d'arri\u00e8re plan : 1 2 3 4 h1 { color : blue ; background-color : white ; } Mise en forme des textes \u2693\ufe0e font-family permet d'indiquer, par ordre de pr\u00e9f\u00e9rence, la police d\u00e9sir\u00e9e. Puisque tous les utilisateurs n'ont pas forc\u00e9ment les m\u00eames polices que nous, il faut toujours que la liste contienne des polices classiques, et m\u00eame une police \"g\u00e9n\u00e9rique\" (serit ou sans-serif). Exemple de code css : 1 2 3 h1 { font-family : arial , verdana , sans-serif ; } Tous les titres h1 seront \u00e9crits en arial, sinon en verdana, \u2026. font-style poss\u00e8de 2 options : normal et italic font-weight poss\u00e8de 2 options : normal et bold (\u00e9criture en gras) font-size permet de pr\u00e9ciser la taille de la police. Cette taille peut \u00eatre exprim\u00e9e de plusieurs fa\u00e7ons : en px, pt, % et em. px et pt sont des mesures absolues, il vaut mieux choisir % ou em qui indiquent une taille relative \u00e0 la taille normale choisie par l'utilisateur. Exemple de code css : \" 1 2 3 4 5 6 p { font-size : 120 % ; } a { font-size : 2 em ; } Les caract\u00e8res des paragraphes ont une taille \u00e9gale \u00e0 120% de la taille normale, les caract\u00e8res des liens sont doubl\u00e9s. On peut regrouper plusieurs propri\u00e9t\u00e9s dans la commande unique font . 1 2 3 h1 { font : bold 30 px verdana , sans-serif ; } text-align permet de pr\u00e9ciser la position du texte, les valeurs \u00e9tant left, right, center, justify. text-decoration a 3 options : underline, overline et line-through exemple : 1 2 3 h2 { text-align : center ; text-decoration : underline ; } Les titres h2 seront centr\u00e9s et soulign\u00e9s. Les liens \u2693\ufe0e On peut modifier l'aspect des liens selon leurs \u00e9tats : inactifs, survol\u00e9s par la souris ou visit\u00e9s. Voici un code css qui \u00e9crit les liens en rouge, en bleu sur fond blanc lorsque la souris passe dessus, en noir lorsqu'ils ont \u00e9t\u00e9 visit\u00e9s. 1 2 3 a : { color : red ;} a : hover { color : blue ; background-color : white ;} a : visited { color : black ;} les identifiants \u2693\ufe0e Il existe 2 types d'identifiants pour appliquer un style \u00e0 une partie pr\u00e9cise d'un document : l'identifiant id, qui ne concerne qu'un \u00e9l\u00e9ment unique, l'identifiant class, qui peut s'appliquer \u00e0 plusieurs \u00e9l\u00e9ments. Exemple : on veut \u00e9crire en gras, plus gros et en bleu le paragraphe : 1 < p > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > Dans le code html, dans la balise ouvrante de paragraphe on ajoute id=\"equation\" , 1 < p id = \"equation\" > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > Dans le fichier css on ajoute 1 # equation { color : blue ; font-weight : bold ;} remarque dans le fichier css , devant le nom de l' id on ajoute un di\u00e8se devant le nom de la class on ajoute un point. Voici un code qui va mettre une partie des liens en vert sur fond blanc lorsqu'ils sont inactifs, en blanc sur fond vert lorsqu'ils sont survol\u00e9s par la souris, en noir sur fond blanc lorsqu'ils ont \u00e9t\u00e9 visit\u00e9s. Codes Html 1 < a class = \"beau_lien\" href = \"base1_style.html\" > Cliquer ici </ a > css 1 2 3 . beau_lien { color : green ; background-color : white ;} . beau_lien : hover { color : white ; background-color : green ;} . beau_lien : visited { color : black ; background-color : white ;} Partie 2 : construction d'un projet \u2693\ufe0e Document de travail \u2693\ufe0e Voici le document html de base pour ce chapitre (base2_style.html). Copiez le dans un \u00e9diteur de texte, et ouvrez le dans un navigateur. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <!DOCTYPE html > < head > < title > Travail sur les feuilles de style </ title > < meta charset = \"utf-8\" /> < link rel = \"stylesheet\" href = \"monstyle2.css\" /> </ head > < body > < div id = \"haut_de_page\" > PRESENTATION DES BLOCS EN CSS </ div > < div id = \"menu\" > < p > MENU < br /> < ul > < li > Entr\u00e9e </ li > < li > Plat </ li > < li > Dessert </ li > </ ul > </ p > </ div > < div id = \"contenu\" > < h2 > Un exemple de mise en page </ h2 > < p > Gr\u00e2ce aux instructions de positionnement absolu et relatif, on peut placer les blocs DIV o\u00f9 l'on veut! < br /> On peut appliquer des bordures, des fonds, des couleurs,...\u00e0 chaque DIV. </ p > < p > Si des informations sont plus importantes, on peut les faire ressortir. < br /> Pour faire de belles pages web, < span class = \"special\" > il faut absolument utiliser les 2 languages HTML et CSS. </ span > </ p > </ div > < div id = \"bas_de_page\" > < p > En bas de la page on peut mettre des informations diverses. < br /> < span class = \"special\" > T\u00e9l\u00e9phone: 3,14 et des poussi\u00e8res </ span > </ p > </ div > </ body > </ html > Il comporte 4 blocs DIV et 2 blocs SPAN . On va peu \u00e0 peu effectuer la mise en page en CSS et donc cr\u00e9er le fichier monstyle2.css, qui est d\u00e9clar\u00e9 entre les balises <head> . Les blocs \u2693\ufe0e Pour la mise en page, on dispose de deux balises html qui d\u00e9limitent des blocs qui peuvent \u00eatre g\u00e9r\u00e9s par la feuille de style : span et div. La balise span \u2693\ufe0e une balise de bloc en ligne, qui est surtout utilis\u00e9e pour modifier une partie d'un texte : couleur, police, fond, \u2026.. Exemple : on veut que des parties de texte ressortent (balises ). Dans le fichier base2_style.html il y en a 2 avec l'identifiant de \"class\" \"special\". On veut que le texte soit en rouge et en gras. On ajoute dans le fichier css: 1 2 3 . special { color : red ; font-weight : bold ; } Sauvegardez et actualisez la page dans le navigateur. La balise div \u2693\ufe0e <div> et </div> permettent de d\u00e9limiter des blocs contenant du texte, des images,... Ces blocs peuvent ensuite \u00eatre dispos\u00e9s comme on le d\u00e9sire dans la page. Bien s\u00fbr, pour ce faire, ils doivent disposer de l'un des 2 identifiants id ou class . Dans l'exemple il y en a 4. Commen\u00e7ons par mettre une bordure autour de chaque DIV, pour bien contr\u00f4ler par la suite les instructions de positionnement. 1 2 3 # haut_de_page { border : 4 px solid black ;} # menu { border : 4 px solid black ;} # contenu { border : 4 px solid black ;} # bas_de_page { border : 4 px solid black ;} Les dimensions \u2693\ufe0e On peut d\u00e9finir les dimensions des DIV ( valable aussi pour p, h1, h2, \u2026) avec width et height, qui peuvent \u00eatre d\u00e9finis en pixels ou en pourcentage (du conteneur parent). On va r\u00e9tr\u00e9cir le DIV \"menu\": 1 # menu { border : 4 px solid black ; width : 150 px ;} les marges \u2693\ufe0e Il y a 2 types de marges, les marges externes (margin) et les marges internes (padding). Code css: On peut choisir les 4 c\u00f4t\u00e9s par margin-left, top, bottom ou right. Ajoutons une marge interne de 10px aux DIV \"contenu\" et \"menu\": 1 # menu { border : 4 px solid black ; width : 150 px ; padding : 10 px ;} Et une marge externe sup\u00e9rieure de 20px au DIV \"bas_de_page\": 1 # bas_de_page { border : 4 px solid black ; margin-top : 20 px ;} Le positionnement absolu \u2693\ufe0e Agrandissons un peu le titre (hauteur du DIV 70px), augmentons la taille des caract\u00e8res: 50px, centrons le titre et ajoutons une marge interne de 10px. 1 # haut_de_page { border : 4 px solid black ; text-align : center ; font-size : 50 px ; height : 70 px ; padding : 10 px ;} Positionnons: le haut de page \u00e0 (10px,10px) par rapport au coin sup\u00e9rieur gauche de la page, le menu \u00e0 (10px,120px) du haut (on tient compte de la hauteur du titre). On ajoute dans #haut_de_page 1 position : absolute ; top : 10px ; left : 10px ; Et dans #menu 1 position : absolute ; top : 120px ; left : 10px ; Actualisez, et constater que le DIV contenu est superpos\u00e9 aux 2 pr\u00e9c\u00e9dents! ! Il faut lui aussi le positionner, en tenant compte de la largeur du menu: 1 position : absolute ; top : 120px ; left : 170px ; Et maintenant c'est le bas de page qui se m\u00e9lange! On ajoute par exemple, dans #bas_de_page : Ce mode de disposition est assez \"rigide\" et s'applique mal aux diverses r\u00e9solutions d'\u00e9cran. Le positionnement flottant \u2693\ufe0e C'est un mode de positionnement assez pratique, qui s'adapte bien \u00e0 toutes les tailles d'\u00e9cran, mais il est parfois d\u00e9licat \u00e0 ma\u00eetriser. voir tutoriels sur le Net. Le positionnement inline-block . \u2693\ufe0e Il existe deux types de balises, inline et block . Les balises inline, se placent les unes \u00e0 c\u00f4t\u00e9 des autres (en ligne) et les balises de type block se placent les unes en dessous des autres. Balises inline: a, strong, em, img,span ... Balises block: h1, p,div ,... On dispose d'une instruction de conversion: display qui peut prendre 4 valeurs: inline, block, inline-block et none. inline : \u00e9l\u00e9ments d'une m\u00eame ligne qui se placent les uns \u00e0 c\u00f4t\u00e9 des autres. block : se placent les uns en dessous des autres, dimensionnables. inline-block : blocs plac\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres et dimensionnables. none: pas d'affichage. Reprenez votre fichier monstyle2.css et effacez tous les positionnements absolus, il reste: 1 2 3 4 5 . special { color : red ; font-weight : bold ;} # haut_de_page { border : 4 px solid black ; text-align : center ; fontsize : 50 px ; height : 70 px ; padding : 10 px ;} # menu { border : 4 px solid black ; width : 150 px ; padding : 10 px ;} # contenu { border : 4 px solid black ; padding : 10 px ;} # bas_de_page { border : 4 px solid black ; margin-top : 20 px ;} On transforme les DIV \"menu\" et \"contenu\" en inline-block en ajoutant : 1 display : inline-block ; Observez le r\u00e9sultat. L'alignement se fait sur le bas des DIV. On peut le modifier avec : 1 vertical-align : top ; Vous pouvez ensuite ajouter des marges pour que les DIV soient plus espac\u00e9s, ajouter des couleurs de fond, et au final faire quelque chose de beau! Les images \u2693\ufe0e On rencontre 3 types de fichiers images dans les pages web: jpeg, gif et png. Le jpeg est bien adapt\u00e9 aux photos (bonne qualit\u00e9, faible poids). Le gif est r\u00e9serv\u00e9 aux icones (256 couleurs) et surtout aux gif anim\u00e9s. Il g\u00e8re la transparence Le png est donc destin\u00e9 aux autres images et g\u00e8re la transparence. La taille des images doit \u00eatre adapt\u00e9e \u00e0 ce que l'on d\u00e9sire et r\u00e9duite au maximum pour r\u00e9duire les temps de chargement. Evitez de mettre une image 4000*3000!!! Si vous voulez afficher une grande photo, cr\u00e9ez une vignette (200*150 par exemple) qui servira de lien vers la grande photo. (Fr\u00e9quent sur le Net avec les plans des pistes des stations par exemple) Il faut donc souvent travailler les photos avec un logiciel d'image. Sous Windows on peut utiliser \u00ab photofiltre \u00bb ou \"the gimp\" qui sont libres et gratuits. Au niveau html, la balise auto-fermante doit \u00eatre situ\u00e9e dans un paragraphe Ne pas oublier l'attribut \"alt\" qui affiche un texte alternatif, pour les non voyants, ou s'il y a un probl\u00e8me d'affichage. Voici un code correct`. 1 2 < p > Voici une belle photo de jambon de Bayonne: < br /> < img src = \"images/jambon64.jpg\" alt = \"jambon\" /></ p > On peut faire \"flotter\" une image dans un paragraphe. Le texte va alors \"entourer\" l'image qui peut \u00eatre plac\u00e9e en haut \u00e0 gauche ou \u00e0 droite. Le code CSS est alors img {float:left;} . (Ce code va alors s'appliquer \u00e0 toutes les images. Si on veut s\u00e9lectionner il faut ajouter un identifiant id ou class). Remarques \u2693\ufe0e Dans le fichier CSS on peut associer les identifiants. 1 # menu a { color : green ;} Cette coloration ne va affecter que les liens situ\u00e9s dans le DIV \"menu\". On peut aussi affecter une propri\u00e9t\u00e9 \u00e0 plusieurs identifiants : 1 # menu , # autrediv { color : red ;} Ici, les identifiants menu et autrediv seront color\u00e9s en rouge. Ces deux chapitres d'introduction au CSS omettent bien des notions! N\u2019y figurent pas la gestion des tableaux, des diff\u00e9rentes bordures, la vid\u00e9o, \u2026. Pour approfondir il vous faudra acheter un livre r\u00e9cent (tout bouge tr\u00e8s vite!) sur la cr\u00e9ation WEB avec HTML5 et CSS3, ou de consulter les tr\u00e8s nombreux tutoriels dont le c\u00e9l\u00e8bre \"SITE DU ZERO\". N\u2019oubliez pas de v\u00e9rifier votre code avant la mise en ligne. Ce n\u2019est pas obligatoire mais forteent conseill\u00e9. validation W3C","title":"CSS"},{"location":"IHM/html/css.html#feuille-de-style-css","text":"","title":"Feuille de style CSS"},{"location":"IHM/html/css.html#introduction","text":"Nous avons appris les principales balises du HTML, ce qui nous permet de cr\u00e9er une page web \"brute\" avec des liens mais d\u00e9pouill\u00e9e, sans aucune d\u00e9coration.v La mise en forme du texte se fait \u00e0 l'aide des \"feuilles de style\" et du langage css . (Cascade Style Sheets). Il y a deux fa\u00e7ons de proc\u00e9der : \u00e9crire les instructions de style dans la page html, avec la balise <style> ou traiter les styles dans un fichier s\u00e9par\u00e9, ce qui est de loin pr\u00e9f\u00e9rable, car avec un seul fichier on peut modifier la pr\u00e9sentation de centaines de pages html ! Voici un exemple de base: base1_style.html L'ouvrir dans un \u00e9diteur de texte, et le tester dans un navigateur. C'est \u00e9crit en noir sur fond blanc, \u00e0 par les liens qui sont en bleu et soulign\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < body > < h1 > LE LANGAGE CSS </ h1 > < h2 > G\u00e9rer les couleurs et les fonds </ h2 > < p > Le langage css permet de mettre en forme les textes html < br /> On peut agir sur les couleurs et la disposition des textes. </ p > < p > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > < p > Voici une liste de langages: < ul > < li > Python </ li > < li > PHP </ li > < li > Javascript </ li > < li > XHTML </ li > < li > C++ </ li > < ul > </ p > < h2 > Une liste de liens </ h2 > < p > < ol > < li >< a href = \"base1_style.html\" > Cliquer ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> < li >< a href = \"base1_style.html\" > Cliquez ici </ a ></ li >< br /> </ ol > </ p > </ body > </ html >","title":"Introduction"},{"location":"IHM/html/css.html#couleurs-et-fonds","text":"On commence d'abord par ajouter le lien vers la feuille de style entre les balises <head> et </head> . 1 < link rel = \"stylesheet\" href = \"monstyle.css\" /> On cr\u00e9e un nouveau fichier dans l'\u00e9diteur: \"monstyle.css\" .(Choisissez Cascade Style Sheets File) et sauvegarder dans le m\u00eame dossier que la page html. On commence par changer la couleur du fond 1 2 3 body { background-color : yellow ; } Le style appliqu\u00e9 \u00e0 la balise est \u00e9crit entre accolades, avec un point-virgule \u00e0 la fin de chaque instruction. Il est plus lisible de pratiquer une indentation, et de passer \u00e0 la ligne apr\u00e8s chaque instruction. Enregistrer votre fichier, et actualisez la page dans le navigateur! Ainsi vous voyez rapidement l'effet de votre commande. Il existe des couleurs pr\u00e9d\u00e9finies (red, black, \u2026) et on peut aussi utiliser le code rgb . 1 background-color : rgb ( 250 , 250 , 0 ); On peut aussi utiliser une image de fond (en g\u00e9n\u00e9ral de taille petite, qui se r\u00e9p\u00e8te \u2026..) 1 2 background-image : url ( \"fond.jpg\" ); background-repeat : repeat ; L'image doit \u00eatre dans le m\u00eame dossier que le fichier css, ou dans un sous dossier auquel cas il faut indiquer le chemin (exemple : \"images/fond.jpg\") . La couleur des textes est donn\u00e9e par la propri\u00e9t\u00e9 color . 1 2 3 h1 { color : blue ; } Tous les titres h1 seront en bleu. On peut aussi agir sur la couleur d'arri\u00e8re plan : 1 2 3 4 h1 { color : blue ; background-color : white ; }","title":"Couleurs et fonds"},{"location":"IHM/html/css.html#mise-en-forme-des-textes","text":"font-family permet d'indiquer, par ordre de pr\u00e9f\u00e9rence, la police d\u00e9sir\u00e9e. Puisque tous les utilisateurs n'ont pas forc\u00e9ment les m\u00eames polices que nous, il faut toujours que la liste contienne des polices classiques, et m\u00eame une police \"g\u00e9n\u00e9rique\" (serit ou sans-serif). Exemple de code css : 1 2 3 h1 { font-family : arial , verdana , sans-serif ; } Tous les titres h1 seront \u00e9crits en arial, sinon en verdana, \u2026. font-style poss\u00e8de 2 options : normal et italic font-weight poss\u00e8de 2 options : normal et bold (\u00e9criture en gras) font-size permet de pr\u00e9ciser la taille de la police. Cette taille peut \u00eatre exprim\u00e9e de plusieurs fa\u00e7ons : en px, pt, % et em. px et pt sont des mesures absolues, il vaut mieux choisir % ou em qui indiquent une taille relative \u00e0 la taille normale choisie par l'utilisateur. Exemple de code css : \" 1 2 3 4 5 6 p { font-size : 120 % ; } a { font-size : 2 em ; } Les caract\u00e8res des paragraphes ont une taille \u00e9gale \u00e0 120% de la taille normale, les caract\u00e8res des liens sont doubl\u00e9s. On peut regrouper plusieurs propri\u00e9t\u00e9s dans la commande unique font . 1 2 3 h1 { font : bold 30 px verdana , sans-serif ; } text-align permet de pr\u00e9ciser la position du texte, les valeurs \u00e9tant left, right, center, justify. text-decoration a 3 options : underline, overline et line-through exemple : 1 2 3 h2 { text-align : center ; text-decoration : underline ; } Les titres h2 seront centr\u00e9s et soulign\u00e9s.","title":"Mise en forme des textes"},{"location":"IHM/html/css.html#les-liens","text":"On peut modifier l'aspect des liens selon leurs \u00e9tats : inactifs, survol\u00e9s par la souris ou visit\u00e9s. Voici un code css qui \u00e9crit les liens en rouge, en bleu sur fond blanc lorsque la souris passe dessus, en noir lorsqu'ils ont \u00e9t\u00e9 visit\u00e9s. 1 2 3 a : { color : red ;} a : hover { color : blue ; background-color : white ;} a : visited { color : black ;}","title":"Les liens"},{"location":"IHM/html/css.html#les-identifiants","text":"Il existe 2 types d'identifiants pour appliquer un style \u00e0 une partie pr\u00e9cise d'un document : l'identifiant id, qui ne concerne qu'un \u00e9l\u00e9ment unique, l'identifiant class, qui peut s'appliquer \u00e0 plusieurs \u00e9l\u00e9ments. Exemple : on veut \u00e9crire en gras, plus gros et en bleu le paragraphe : 1 < p > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > Dans le code html, dans la balise ouvrante de paragraphe on ajoute id=\"equation\" , 1 < p id = \"equation\" > On peut faire ressortir une belle \u00e9quation: 2x + 5 = 9 </ p > Dans le fichier css on ajoute 1 # equation { color : blue ; font-weight : bold ;} remarque dans le fichier css , devant le nom de l' id on ajoute un di\u00e8se devant le nom de la class on ajoute un point. Voici un code qui va mettre une partie des liens en vert sur fond blanc lorsqu'ils sont inactifs, en blanc sur fond vert lorsqu'ils sont survol\u00e9s par la souris, en noir sur fond blanc lorsqu'ils ont \u00e9t\u00e9 visit\u00e9s. Codes Html 1 < a class = \"beau_lien\" href = \"base1_style.html\" > Cliquer ici </ a > css 1 2 3 . beau_lien { color : green ; background-color : white ;} . beau_lien : hover { color : white ; background-color : green ;} . beau_lien : visited { color : black ; background-color : white ;}","title":"les identifiants"},{"location":"IHM/html/css.html#partie-2-construction-dun-projet","text":"","title":"Partie 2 : construction d'un projet"},{"location":"IHM/html/css.html#document-de-travail","text":"Voici le document html de base pour ce chapitre (base2_style.html). Copiez le dans un \u00e9diteur de texte, et ouvrez le dans un navigateur. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <!DOCTYPE html > < head > < title > Travail sur les feuilles de style </ title > < meta charset = \"utf-8\" /> < link rel = \"stylesheet\" href = \"monstyle2.css\" /> </ head > < body > < div id = \"haut_de_page\" > PRESENTATION DES BLOCS EN CSS </ div > < div id = \"menu\" > < p > MENU < br /> < ul > < li > Entr\u00e9e </ li > < li > Plat </ li > < li > Dessert </ li > </ ul > </ p > </ div > < div id = \"contenu\" > < h2 > Un exemple de mise en page </ h2 > < p > Gr\u00e2ce aux instructions de positionnement absolu et relatif, on peut placer les blocs DIV o\u00f9 l'on veut! < br /> On peut appliquer des bordures, des fonds, des couleurs,...\u00e0 chaque DIV. </ p > < p > Si des informations sont plus importantes, on peut les faire ressortir. < br /> Pour faire de belles pages web, < span class = \"special\" > il faut absolument utiliser les 2 languages HTML et CSS. </ span > </ p > </ div > < div id = \"bas_de_page\" > < p > En bas de la page on peut mettre des informations diverses. < br /> < span class = \"special\" > T\u00e9l\u00e9phone: 3,14 et des poussi\u00e8res </ span > </ p > </ div > </ body > </ html > Il comporte 4 blocs DIV et 2 blocs SPAN . On va peu \u00e0 peu effectuer la mise en page en CSS et donc cr\u00e9er le fichier monstyle2.css, qui est d\u00e9clar\u00e9 entre les balises <head> .","title":"Document de travail"},{"location":"IHM/html/css.html#les-blocs","text":"Pour la mise en page, on dispose de deux balises html qui d\u00e9limitent des blocs qui peuvent \u00eatre g\u00e9r\u00e9s par la feuille de style : span et div.","title":"Les blocs"},{"location":"IHM/html/css.html#la-balise-span","text":"une balise de bloc en ligne, qui est surtout utilis\u00e9e pour modifier une partie d'un texte : couleur, police, fond, \u2026.. Exemple : on veut que des parties de texte ressortent (balises ). Dans le fichier base2_style.html il y en a 2 avec l'identifiant de \"class\" \"special\". On veut que le texte soit en rouge et en gras. On ajoute dans le fichier css: 1 2 3 . special { color : red ; font-weight : bold ; } Sauvegardez et actualisez la page dans le navigateur.","title":"La balise span"},{"location":"IHM/html/css.html#la-balise-div","text":"<div> et </div> permettent de d\u00e9limiter des blocs contenant du texte, des images,... Ces blocs peuvent ensuite \u00eatre dispos\u00e9s comme on le d\u00e9sire dans la page. Bien s\u00fbr, pour ce faire, ils doivent disposer de l'un des 2 identifiants id ou class . Dans l'exemple il y en a 4. Commen\u00e7ons par mettre une bordure autour de chaque DIV, pour bien contr\u00f4ler par la suite les instructions de positionnement. 1 2 3 # haut_de_page { border : 4 px solid black ;} # menu { border : 4 px solid black ;} # contenu { border : 4 px solid black ;} # bas_de_page { border : 4 px solid black ;}","title":"La balise div"},{"location":"IHM/html/css.html#les-dimensions","text":"On peut d\u00e9finir les dimensions des DIV ( valable aussi pour p, h1, h2, \u2026) avec width et height, qui peuvent \u00eatre d\u00e9finis en pixels ou en pourcentage (du conteneur parent). On va r\u00e9tr\u00e9cir le DIV \"menu\": 1 # menu { border : 4 px solid black ; width : 150 px ;}","title":"Les dimensions"},{"location":"IHM/html/css.html#les-marges","text":"Il y a 2 types de marges, les marges externes (margin) et les marges internes (padding). Code css: On peut choisir les 4 c\u00f4t\u00e9s par margin-left, top, bottom ou right. Ajoutons une marge interne de 10px aux DIV \"contenu\" et \"menu\": 1 # menu { border : 4 px solid black ; width : 150 px ; padding : 10 px ;} Et une marge externe sup\u00e9rieure de 20px au DIV \"bas_de_page\": 1 # bas_de_page { border : 4 px solid black ; margin-top : 20 px ;}","title":"les marges"},{"location":"IHM/html/css.html#le-positionnement-absolu","text":"Agrandissons un peu le titre (hauteur du DIV 70px), augmentons la taille des caract\u00e8res: 50px, centrons le titre et ajoutons une marge interne de 10px. 1 # haut_de_page { border : 4 px solid black ; text-align : center ; font-size : 50 px ; height : 70 px ; padding : 10 px ;} Positionnons: le haut de page \u00e0 (10px,10px) par rapport au coin sup\u00e9rieur gauche de la page, le menu \u00e0 (10px,120px) du haut (on tient compte de la hauteur du titre). On ajoute dans #haut_de_page 1 position : absolute ; top : 10px ; left : 10px ; Et dans #menu 1 position : absolute ; top : 120px ; left : 10px ; Actualisez, et constater que le DIV contenu est superpos\u00e9 aux 2 pr\u00e9c\u00e9dents! ! Il faut lui aussi le positionner, en tenant compte de la largeur du menu: 1 position : absolute ; top : 120px ; left : 170px ; Et maintenant c'est le bas de page qui se m\u00e9lange! On ajoute par exemple, dans #bas_de_page : Ce mode de disposition est assez \"rigide\" et s'applique mal aux diverses r\u00e9solutions d'\u00e9cran.","title":"Le positionnement absolu"},{"location":"IHM/html/css.html#le-positionnement-flottant","text":"C'est un mode de positionnement assez pratique, qui s'adapte bien \u00e0 toutes les tailles d'\u00e9cran, mais il est parfois d\u00e9licat \u00e0 ma\u00eetriser. voir tutoriels sur le Net.","title":"Le positionnement flottant"},{"location":"IHM/html/css.html#le-positionnementinline-block","text":"Il existe deux types de balises, inline et block . Les balises inline, se placent les unes \u00e0 c\u00f4t\u00e9 des autres (en ligne) et les balises de type block se placent les unes en dessous des autres. Balises inline: a, strong, em, img,span ... Balises block: h1, p,div ,... On dispose d'une instruction de conversion: display qui peut prendre 4 valeurs: inline, block, inline-block et none. inline : \u00e9l\u00e9ments d'une m\u00eame ligne qui se placent les uns \u00e0 c\u00f4t\u00e9 des autres. block : se placent les uns en dessous des autres, dimensionnables. inline-block : blocs plac\u00e9s les uns \u00e0 c\u00f4t\u00e9 des autres et dimensionnables. none: pas d'affichage. Reprenez votre fichier monstyle2.css et effacez tous les positionnements absolus, il reste: 1 2 3 4 5 . special { color : red ; font-weight : bold ;} # haut_de_page { border : 4 px solid black ; text-align : center ; fontsize : 50 px ; height : 70 px ; padding : 10 px ;} # menu { border : 4 px solid black ; width : 150 px ; padding : 10 px ;} # contenu { border : 4 px solid black ; padding : 10 px ;} # bas_de_page { border : 4 px solid black ; margin-top : 20 px ;} On transforme les DIV \"menu\" et \"contenu\" en inline-block en ajoutant : 1 display : inline-block ; Observez le r\u00e9sultat. L'alignement se fait sur le bas des DIV. On peut le modifier avec : 1 vertical-align : top ; Vous pouvez ensuite ajouter des marges pour que les DIV soient plus espac\u00e9s, ajouter des couleurs de fond, et au final faire quelque chose de beau!","title":"Le positionnementinline-block."},{"location":"IHM/html/css.html#les-images","text":"On rencontre 3 types de fichiers images dans les pages web: jpeg, gif et png. Le jpeg est bien adapt\u00e9 aux photos (bonne qualit\u00e9, faible poids). Le gif est r\u00e9serv\u00e9 aux icones (256 couleurs) et surtout aux gif anim\u00e9s. Il g\u00e8re la transparence Le png est donc destin\u00e9 aux autres images et g\u00e8re la transparence. La taille des images doit \u00eatre adapt\u00e9e \u00e0 ce que l'on d\u00e9sire et r\u00e9duite au maximum pour r\u00e9duire les temps de chargement. Evitez de mettre une image 4000*3000!!! Si vous voulez afficher une grande photo, cr\u00e9ez une vignette (200*150 par exemple) qui servira de lien vers la grande photo. (Fr\u00e9quent sur le Net avec les plans des pistes des stations par exemple) Il faut donc souvent travailler les photos avec un logiciel d'image. Sous Windows on peut utiliser \u00ab photofiltre \u00bb ou \"the gimp\" qui sont libres et gratuits. Au niveau html, la balise auto-fermante doit \u00eatre situ\u00e9e dans un paragraphe Ne pas oublier l'attribut \"alt\" qui affiche un texte alternatif, pour les non voyants, ou s'il y a un probl\u00e8me d'affichage. Voici un code correct`. 1 2 < p > Voici une belle photo de jambon de Bayonne: < br /> < img src = \"images/jambon64.jpg\" alt = \"jambon\" /></ p > On peut faire \"flotter\" une image dans un paragraphe. Le texte va alors \"entourer\" l'image qui peut \u00eatre plac\u00e9e en haut \u00e0 gauche ou \u00e0 droite. Le code CSS est alors img {float:left;} . (Ce code va alors s'appliquer \u00e0 toutes les images. Si on veut s\u00e9lectionner il faut ajouter un identifiant id ou class).","title":"Les images"},{"location":"IHM/html/css.html#remarques","text":"Dans le fichier CSS on peut associer les identifiants. 1 # menu a { color : green ;} Cette coloration ne va affecter que les liens situ\u00e9s dans le DIV \"menu\". On peut aussi affecter une propri\u00e9t\u00e9 \u00e0 plusieurs identifiants : 1 # menu , # autrediv { color : red ;} Ici, les identifiants menu et autrediv seront color\u00e9s en rouge. Ces deux chapitres d'introduction au CSS omettent bien des notions! N\u2019y figurent pas la gestion des tableaux, des diff\u00e9rentes bordures, la vid\u00e9o, \u2026. Pour approfondir il vous faudra acheter un livre r\u00e9cent (tout bouge tr\u00e8s vite!) sur la cr\u00e9ation WEB avec HTML5 et CSS3, ou de consulter les tr\u00e8s nombreux tutoriels dont le c\u00e9l\u00e8bre \"SITE DU ZERO\". N\u2019oubliez pas de v\u00e9rifier votre code avant la mise en ligne. Ce n\u2019est pas obligatoire mais forteent conseill\u00e9. validation W3C","title":"Remarques"},{"location":"IHM/html/html.html","text":"Bases du langage HTML \u2693\ufe0e Introduction \u2693\ufe0e Le langage html est interpr\u00e9t\u00e9 par les navigateurs internet. Il repose sur la norme W3C. C'est un langage qui utilise des balises pour la mise en forme d'un texte. Exemple pour \u00e9crire du texte en gras on utilise la balise \"strong\" Chaque balise est \u00e9crite ente les symboles < et >, et doit \u00eatre referm\u00e9e (symbole /). (Certaines sont auto-fermantes comme <br/> , <img/> , <meta/> ). Par exemple : 1 blablabla < strong > youpi </ strong > blablabla, va \u00e9crire\" youpi\" en gras. Toute page commence par <!DOCTYPE html > et finit par </html> . Ensuite il y a l'ent\u00eate qui contient divers renseignements importants : le titre de la page ,balise <title> , le nom de l'auteur, (facultatif) le mode d'encodage, (TRES IMPORTANT) le lien vers la feuille de style (voir chapitre suivant), \u2026..balises auto fermante <meta> les mots cl\u00e9s qui favorisent le r\u00e9f\u00e9rencement de votre site par les moteurs de recherche Elle est d\u00e9limit\u00e9e par les balises <head> et </head> Voici un exemple : 1 2 3 4 5 6 < head > < title > Page Web de la sp\u00e9cialit\u00e9 NSI </ title > < meta name = \"author\" content = \"Cligniez-Djebali\" /> < meta charset = \"utf-8\" /> < meta NAME = \"keywords\" CONTENT = \"mot1,mot2, mot3\" /> </ head > Important On a souvent des probl\u00e8mes d'accents avec les pages WEB, les bases de donn\u00e9es, \u2026 C'est pourquoi il faut prendre garde au mode d'encodage des caract\u00e8res. Je vous recommande d'utiliser le jeu de caract\u00e8res UTF-8. Mais attention, votre fichier doit lui aussi \u00eatre encod\u00e9 en UTF-8! Dans l\u2019\u00e9diteur de texte dans l'onglet \"encodage\", choisissez \"Encoder en UTF8 (sans BOM)\". Puis vient le corps de la page \" body \" entre les balises < body> et < /body> C'est entre ces balises que se trouvent les \u00e9l\u00e9ments de votre page. Premi\u00e8res balises HTML \u2693\ufe0e Il y a 6 balises de titres : h1, h2, h3, \u2026.(ordre d\u00e9croissant de taille) Les textes sont \u00e9crits entre les balises de paragraphes <p> et </p> Un saut \u00e0 la ligne est provoqu\u00e9 par la balise auto fermante . <strong> et </strong> permettent d'\u00e9crire en gras, <em> et </em> en italique, <sub> et </sub> en indice <sup> et < /sup> en exposant. Voici donc une premi\u00e8re page web : Pour l\u2019\u00e9crire on utilise un simple \u00e9diteur de texte (par exemple sublime text, ou notepad++ qui pratique une coloration syntaxique bien pratique.) Il est plus lisible pour la pr\u00e9sentation, d'utiliser l'indentation comme en python. Ainsi on risque moins de se tromper dans les balises imbriqu\u00e9es. Fichier \u00e0 cr\u00e9\u00e9r 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html > < head > < title > Page test de la sp\u00e9cialit\u00e9 NSI </ title > < meta charset = \"utf-8\" /> < meta NAME = \"keywords\" CONTENT = \"mot1,mot2, mot3\" > </ head > < body > < h1 > Voici un gros titre </ h1 > < p > Le langage xhtml permet d'\u00e9crire des textes < strong > en gras </ strong > ou < em > en italique </ em > . On peut passer \u00e0 la ligne, < br /> et \u00e9crire des exposants ou des indices : u < sub > n </ sub > =n < sup > 2 </ sup > +1. </ p > </ body > </ html > Enregistrer ce fichier sous le nom \" test.html \" et ouvrez avec un navigateur. La page est tr\u00e8s d\u00e9pouill\u00e9e ! On apprendra plus tard \u00e0 mettre des couleurs, des bordures, des logos avec les feuilles de style et le langage CSS . Les liens \u2693\ufe0e L\u2019int\u00e9r\u00eat essentiel des pages web est l'utilisation des liens. Les balises sont <a> et </a> . Un lien peut \u00eatre absolu : 1 < a href = \"http://www.google.fr\" > Moteur de recherche </ a > affiche \" Moteur de recherche \" et lorsqu'on clique dessus, envoie sur www.google.fr ; Un lien peut \u00eatre relatif : 1 < a href = \"python.html\" > Ma page de programmation </ a > affiche \" Ma page de programmation \" et lorsqu'on clique dessus envoie sur la page python.html qui doit \u00eatre dans le m\u00eame dossier que la page qui contient le lien. On peut changer de dossier en \u00e9crivant par exemple: exemple 1 < a href = \"documents/python.html\" > On peut aussi faire un lien vers un autre endroit de la m\u00eame page (utile pour un lexique par exemple). Il faut d'abord cr\u00e9er une \"ancre\" \u00e0 l'endroit que l'on veut atteindre par le lien, avec: creer une ancre Cr\u00e9er une ancre 1 < a name = \"toto\" > On veut aller ici </ a > Puis cr\u00e9er le lien avec : 1 < a href = \"ma_page.html#toto\" > Les listes \u2693\ufe0e On dispose de 2 types de listes. Les listes \u00e0 puces d\u00e9limit\u00e9es par les balises <ul> et </ul> et les listes num\u00e9rot\u00e9es d\u00e9limit\u00e9es par <ol> et </ol> . Chaque \u00e9l\u00e9ment de la liste est alors d\u00e9limit\u00e9 par <li> et </li> : Cr\u00e9er une liste 1 2 3 4 5 < ul > Voici une liste de choses : < li > 1er \u00e9l\u00e9ment </ li > < li > 2eme \u00e9l\u00e9ment </ li > < li > 3eme \u00e9l\u00e9ment </ li > </ ul > les images \u2693\ufe0e On ins\u00e8re une image par la balise auto-fermante : exemple 1 < img src = \"images/mon_image.jpg\" /> ce qui affiche l'image \"mon_image.jpg\" situ\u00e9 dans le dossier \"images\" qu\u2019il faut cr\u00e9er. ou si l'image est ailleurs, avec son adresse absolue : exemple 1 < img src = \" https://i2.wp.com/beebom.com/wp-content/uploads/2016/01/Reverse-Image-Search-Engines-Apps-And-Its-Uses-2016.jpg?w=640&ssl=1 \" /> Il est souhaitable (indispensable pour respecter W3C) d'ajouter un texte alternatif, en cas de probl\u00e8me de chargement, pour les non-voyants, \u2026 !!! example \"exemple\" 1 < img src = \"robot.jpg\" alt = \"photo du robot Thymio 2\" /> Les tableaux \u2693\ufe0e On peut ins\u00e9rer un tableau par les balises. <tr> est la balise de ligne, <td> est la balise de cellule. Cr\u00e9er un tableau 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 < table > < thead > < tr > < th > 1ere colone </ th > < th > 2eme colonne </ th > < th > 3eme colonne </ th > </ tr > </ thead > < tbody > < tr > < td > case 1 </ td > < td > case 2 </ td > < td > case 3 </ td > </ tr > < tr > < td > case 4 </ td > < td > case 5 </ td > < td > case 6 </ td ></ tr > </ tbody > </ table > important on peut fusionner des cellules notamment dans le header : 1 2 3 4 5 6 < table > < thead > < tr > < th colspan = \"3\" > The table header </ th > </ tr > ... Exercice \u2693\ufe0e Cr\u00e9er au moins 3 pages html (pour exploiter les liens!!) La premi\u00e8re sera nomm\u00e9e \"index.html\", page de base de votre site. Elle comportera un titre h1, au moins un paragraphe, des mots en gras, en italique. Elle comportera aussi un lien vers une deuxi\u00e8me page nomm\u00e9e \"page1.html\" qui aura aussi un titre un paragraphe et un lien de retour vers votre page \"index\". Compl\u00e9ter avec une troisi\u00e8me page, accessible par lien depuis la page \"index\", qui comportera une liste ( <ul> )de liens absolus vers des sites de votre choix. Votre site doit contenir au moins un \u00e9l\u00e9ment de chaque type vus pr\u00e9c\u00e9dememnt (listes, tableausx, images, ...). Commencez une fiche de r\u00e9f\u00e9rence des balises html essentielles. Vous rajouterez toutes celles rencontr\u00e9es au cours du travail \u00e0 r\u00e9aliser dans les prochaines semaines. R\u00e9servez le dos de la fiche pour le m\u00e9mo CSS . Compl\u00e9ments \u2693\ufe0e Le web fournit une tr\u00e8s grande quantit\u00e9 de tutoriel sur le HTML. N'h\u00e9sitez pas \u00e0 aller voir toutes les balises existantes, notamment pour int\u00e9grer des vid\u00e9os ou d'autres istes web \u00e0 votre site. En naviguant sur Internet, lorsque vous trouvez une belle pr\u00e9sentation, faites un clic droit sur la page et choisissez \"afficher la source\", et vous obtenez le code xhtml. Attention, c'est parfois du lourd car il y a des codes javascript , du style css, m\u00e9lang\u00e9s au html. Mais \u00e7a donne des id\u00e9es\u2026.. Une fois que votre site est test\u00e9 en local sur votre PC, vous pouvez passer \u00e0 l'\u00e9tape suivante et le mettre en ligne en jetant un oeil par ici .","title":"HTML"},{"location":"IHM/html/html.html#bases-du-langage-html","text":"","title":"Bases du langage HTML"},{"location":"IHM/html/html.html#introduction","text":"Le langage html est interpr\u00e9t\u00e9 par les navigateurs internet. Il repose sur la norme W3C. C'est un langage qui utilise des balises pour la mise en forme d'un texte. Exemple pour \u00e9crire du texte en gras on utilise la balise \"strong\" Chaque balise est \u00e9crite ente les symboles < et >, et doit \u00eatre referm\u00e9e (symbole /). (Certaines sont auto-fermantes comme <br/> , <img/> , <meta/> ). Par exemple : 1 blablabla < strong > youpi </ strong > blablabla, va \u00e9crire\" youpi\" en gras. Toute page commence par <!DOCTYPE html > et finit par </html> . Ensuite il y a l'ent\u00eate qui contient divers renseignements importants : le titre de la page ,balise <title> , le nom de l'auteur, (facultatif) le mode d'encodage, (TRES IMPORTANT) le lien vers la feuille de style (voir chapitre suivant), \u2026..balises auto fermante <meta> les mots cl\u00e9s qui favorisent le r\u00e9f\u00e9rencement de votre site par les moteurs de recherche Elle est d\u00e9limit\u00e9e par les balises <head> et </head> Voici un exemple : 1 2 3 4 5 6 < head > < title > Page Web de la sp\u00e9cialit\u00e9 NSI </ title > < meta name = \"author\" content = \"Cligniez-Djebali\" /> < meta charset = \"utf-8\" /> < meta NAME = \"keywords\" CONTENT = \"mot1,mot2, mot3\" /> </ head > Important On a souvent des probl\u00e8mes d'accents avec les pages WEB, les bases de donn\u00e9es, \u2026 C'est pourquoi il faut prendre garde au mode d'encodage des caract\u00e8res. Je vous recommande d'utiliser le jeu de caract\u00e8res UTF-8. Mais attention, votre fichier doit lui aussi \u00eatre encod\u00e9 en UTF-8! Dans l\u2019\u00e9diteur de texte dans l'onglet \"encodage\", choisissez \"Encoder en UTF8 (sans BOM)\". Puis vient le corps de la page \" body \" entre les balises < body> et < /body> C'est entre ces balises que se trouvent les \u00e9l\u00e9ments de votre page.","title":"Introduction"},{"location":"IHM/html/html.html#premieres-balises-html","text":"Il y a 6 balises de titres : h1, h2, h3, \u2026.(ordre d\u00e9croissant de taille) Les textes sont \u00e9crits entre les balises de paragraphes <p> et </p> Un saut \u00e0 la ligne est provoqu\u00e9 par la balise auto fermante . <strong> et </strong> permettent d'\u00e9crire en gras, <em> et </em> en italique, <sub> et </sub> en indice <sup> et < /sup> en exposant. Voici donc une premi\u00e8re page web : Pour l\u2019\u00e9crire on utilise un simple \u00e9diteur de texte (par exemple sublime text, ou notepad++ qui pratique une coloration syntaxique bien pratique.) Il est plus lisible pour la pr\u00e9sentation, d'utiliser l'indentation comme en python. Ainsi on risque moins de se tromper dans les balises imbriqu\u00e9es. Fichier \u00e0 cr\u00e9\u00e9r 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html > < head > < title > Page test de la sp\u00e9cialit\u00e9 NSI </ title > < meta charset = \"utf-8\" /> < meta NAME = \"keywords\" CONTENT = \"mot1,mot2, mot3\" > </ head > < body > < h1 > Voici un gros titre </ h1 > < p > Le langage xhtml permet d'\u00e9crire des textes < strong > en gras </ strong > ou < em > en italique </ em > . On peut passer \u00e0 la ligne, < br /> et \u00e9crire des exposants ou des indices : u < sub > n </ sub > =n < sup > 2 </ sup > +1. </ p > </ body > </ html > Enregistrer ce fichier sous le nom \" test.html \" et ouvrez avec un navigateur. La page est tr\u00e8s d\u00e9pouill\u00e9e ! On apprendra plus tard \u00e0 mettre des couleurs, des bordures, des logos avec les feuilles de style et le langage CSS .","title":"Premi\u00e8res balises HTML"},{"location":"IHM/html/html.html#les-liens","text":"L\u2019int\u00e9r\u00eat essentiel des pages web est l'utilisation des liens. Les balises sont <a> et </a> . Un lien peut \u00eatre absolu : 1 < a href = \"http://www.google.fr\" > Moteur de recherche </ a > affiche \" Moteur de recherche \" et lorsqu'on clique dessus, envoie sur www.google.fr ; Un lien peut \u00eatre relatif : 1 < a href = \"python.html\" > Ma page de programmation </ a > affiche \" Ma page de programmation \" et lorsqu'on clique dessus envoie sur la page python.html qui doit \u00eatre dans le m\u00eame dossier que la page qui contient le lien. On peut changer de dossier en \u00e9crivant par exemple: exemple 1 < a href = \"documents/python.html\" > On peut aussi faire un lien vers un autre endroit de la m\u00eame page (utile pour un lexique par exemple). Il faut d'abord cr\u00e9er une \"ancre\" \u00e0 l'endroit que l'on veut atteindre par le lien, avec: creer une ancre Cr\u00e9er une ancre 1 < a name = \"toto\" > On veut aller ici </ a > Puis cr\u00e9er le lien avec : 1 < a href = \"ma_page.html#toto\" >","title":"Les liens"},{"location":"IHM/html/html.html#les-listes","text":"On dispose de 2 types de listes. Les listes \u00e0 puces d\u00e9limit\u00e9es par les balises <ul> et </ul> et les listes num\u00e9rot\u00e9es d\u00e9limit\u00e9es par <ol> et </ol> . Chaque \u00e9l\u00e9ment de la liste est alors d\u00e9limit\u00e9 par <li> et </li> : Cr\u00e9er une liste 1 2 3 4 5 < ul > Voici une liste de choses : < li > 1er \u00e9l\u00e9ment </ li > < li > 2eme \u00e9l\u00e9ment </ li > < li > 3eme \u00e9l\u00e9ment </ li > </ ul >","title":"Les listes"},{"location":"IHM/html/html.html#les-images","text":"On ins\u00e8re une image par la balise auto-fermante : exemple 1 < img src = \"images/mon_image.jpg\" /> ce qui affiche l'image \"mon_image.jpg\" situ\u00e9 dans le dossier \"images\" qu\u2019il faut cr\u00e9er. ou si l'image est ailleurs, avec son adresse absolue : exemple 1 < img src = \" https://i2.wp.com/beebom.com/wp-content/uploads/2016/01/Reverse-Image-Search-Engines-Apps-And-Its-Uses-2016.jpg?w=640&ssl=1 \" /> Il est souhaitable (indispensable pour respecter W3C) d'ajouter un texte alternatif, en cas de probl\u00e8me de chargement, pour les non-voyants, \u2026 !!! example \"exemple\" 1 < img src = \"robot.jpg\" alt = \"photo du robot Thymio 2\" />","title":"les images"},{"location":"IHM/html/html.html#les-tableaux","text":"On peut ins\u00e9rer un tableau par les balises. <tr> est la balise de ligne, <td> est la balise de cellule. Cr\u00e9er un tableau 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 < table > < thead > < tr > < th > 1ere colone </ th > < th > 2eme colonne </ th > < th > 3eme colonne </ th > </ tr > </ thead > < tbody > < tr > < td > case 1 </ td > < td > case 2 </ td > < td > case 3 </ td > </ tr > < tr > < td > case 4 </ td > < td > case 5 </ td > < td > case 6 </ td ></ tr > </ tbody > </ table > important on peut fusionner des cellules notamment dans le header : 1 2 3 4 5 6 < table > < thead > < tr > < th colspan = \"3\" > The table header </ th > </ tr > ...","title":"Les tableaux"},{"location":"IHM/html/html.html#exercice","text":"Cr\u00e9er au moins 3 pages html (pour exploiter les liens!!) La premi\u00e8re sera nomm\u00e9e \"index.html\", page de base de votre site. Elle comportera un titre h1, au moins un paragraphe, des mots en gras, en italique. Elle comportera aussi un lien vers une deuxi\u00e8me page nomm\u00e9e \"page1.html\" qui aura aussi un titre un paragraphe et un lien de retour vers votre page \"index\". Compl\u00e9ter avec une troisi\u00e8me page, accessible par lien depuis la page \"index\", qui comportera une liste ( <ul> )de liens absolus vers des sites de votre choix. Votre site doit contenir au moins un \u00e9l\u00e9ment de chaque type vus pr\u00e9c\u00e9dememnt (listes, tableausx, images, ...). Commencez une fiche de r\u00e9f\u00e9rence des balises html essentielles. Vous rajouterez toutes celles rencontr\u00e9es au cours du travail \u00e0 r\u00e9aliser dans les prochaines semaines. R\u00e9servez le dos de la fiche pour le m\u00e9mo CSS .","title":"Exercice"},{"location":"IHM/html/html.html#complements","text":"Le web fournit une tr\u00e8s grande quantit\u00e9 de tutoriel sur le HTML. N'h\u00e9sitez pas \u00e0 aller voir toutes les balises existantes, notamment pour int\u00e9grer des vid\u00e9os ou d'autres istes web \u00e0 votre site. En naviguant sur Internet, lorsque vous trouvez une belle pr\u00e9sentation, faites un clic droit sur la page et choisissez \"afficher la source\", et vous obtenez le code xhtml. Attention, c'est parfois du lourd car il y a des codes javascript , du style css, m\u00e9lang\u00e9s au html. Mais \u00e7a donne des id\u00e9es\u2026.. Une fois que votre site est test\u00e9 en local sur votre PC, vous pouvez passer \u00e0 l'\u00e9tape suivante et le mettre en ligne en jetant un oeil par ici .","title":"Compl\u00e9ments"},{"location":"IHM/javascript/exo_js.html","text":"Exercices d'application de Javascript \u2693\ufe0e Bac \u00e0 sable \u2693\ufe0e Pour faire des tests rapides sans enregistrer, on peut utiliser un \"Bac \u00e0 sable\". Bac \u00e0 sable Utilisation de la console \u2693\ufe0e Voici un code html contenant du javascript . 1 2 3 4 5 6 7 8 9 10 11 < html > < head > < title > Ma Page avec un JS inclus </ title > < script language = \"JavaScript\" > alert ( \"JavaScript est maintenant inclus dans mon fichier et ce message s'affiche dans une fen\u00eatre d'alerte\" ); </ script > </ head > < body > < p > Page avec JavaScript inclus dans mon code HTML </ p > </ body > </ html > A faire 1. Copier et tester ce code dans une page html que vous ouvrirez dans un navigateur. 2. Que fait la fonction alert ? Pour faire afficher les messages dans la console (F12 puis console), on utilise la fonction console.log(a) pour afficher la valeur de a par exmple. Cela evite la fen\u00eatre popUp pour des v\u00e9rifications en cours de code. A faire 3. Modifier le code pour que le message s'affiche dans la console. Variables et interaction utilisateur \u2693\ufe0e Syntaxe du Javascript \u2693\ufe0e Les variables doivent \u00eatre d\u00e9clar\u00e9es gr\u00e2ce au mot cl\u00e9 var. Tout comme en python, les cha\u00eenes de caract\u00e8res sont entour\u00e9es de guillemets. Les instructions simples sont termin\u00e9es par un point-virgule: ; Les blocs d'instructions sont entour\u00e9s d'accolades {} Les commentaires sont not\u00e9s pr\u00e9c\u00e9d\u00e9s de deux barres obliques: //. Les variables et fonctions sont \u00e9crites en camelCase(L'espace est remplac\u00e9 par -une majuscule). L'indentation des blocs d'instruction n'est pas obligatoire comme en Python, mais souhaitable pour plus de lisibilit\u00e9 du code. Exemple \u2693\ufe0e Tester ceci : 1 2 3 4 var tonNom = 'Nom' ; var tonPrenom = 'Prenom' ; var toi = tonNom + ' ' + tonPrenom ; alert ( toi ); Puis ceci : 1 2 3 4 5 6 7 var tonNom = prompt ( 'quel est ton nom?' ); var tonPrenom = prompt ( 'quel est ton pr\u00e9nom?' ); var toi = tonNom + ' ' + tonPrenom ; if ( tonNom == 'Einstein' ){ alert ( toi + ':tu es un g\u00e9nie!' );} else { alert ( toi + ':tu es juste un \u00eatre humain' );} Fonctions et calcul : \u2693\ufe0e Pour cr\u00e9er une fonction, on utilise la syntaxe ci-dessous : 1 2 3 function carre ( nombre ){ return nombre * nombre }; Pour ex\u00e9cuter la fonction : 1 2 3 var c ; c = carre ( 4 ); console . log ( c ); Remarque La notion de port\u00e9 de variable est valable aussi en Javascript. Pour d\u00e9clarer une variable qui ne sera valable que dans un bloc ou une fonction on peut utiliser le mot-cl\u00e9 let au lieu de var . A faire 4. Ecrire une fonction qui calcule l'aire du disque dont le rayon est donn\u00e9 par l'utilisateur. Une petite aide? Il faudra commener par utiliser une fonction permettant de rentrer une valeur par l'utilisateur. Puis cr\u00e9er la fonction qui renvoie le calcul et enfin un affichage du r\u00e9sultat. (note : Math.PI permet d'obtenir la valeur de pi. ). Les boucles et les conditions \u2693\ufe0e Pour chacune des syntaxes donn\u00e9es ci-dessous, tester l'exemple donn\u00e9 et cr\u00e9er quelques lignes pour vous entrainer. Vous pouvez si vous \u00eates \u00e0 l'aise tester les instructions propos\u00e9es en dessous. Syntaxe des conditions \u2693\ufe0e 1 2 3 4 5 6 var result ; var a =- 5 ; if ( a > 0 ) { result = 'positive' ; } else { result = 'Not positive' ;} console . log ( result ); Plus d'exemples par ici Il existe aussi la fonction SWITCH dans le cas o\u00f9 il y a plusieurs conditions. Aller voir par ici . Syntaxe de la for \u2693\ufe0e 1 2 3 4 5 var str = '' ; for ( var i = 0 ; i < 9 ; i ++ ){ str = str + i } console . log ( str ); for ... in et for...of peuvent \u00eatre \u00e9galement utiles. Syntaxe de la boucle while \u2693\ufe0e 1 2 3 4 5 var n = 0 ; while ( n < 3 ){ n ++ ; } console . log ( n ); Voir aussi do...while . D'autres instructions ici . Applications \u2693\ufe0e A faire 5. Ecrire un script en utilisant une boucle for qui demande \u00e0 l'utilisateur le nombre de fr\u00e8res et soeurs qu'il poss\u00e8de. Puis le programme demande les pr\u00e9noms de chacun. 6. Ecrire un script qui calcule l'altitude de chute d'un parachutiste \u00e0 chaque seconde. On estime qu'il descend \u00e0 une vitesse de 15m/s en partant de l'altitude de 1000m. On supposera qu'il s'arrete au sol. 7. R\u00e9aliser le script qui demande l'age de l'utilisateur et lui renvoie le commentaire correspondant. Tranche d'\u00e2ge Commentaires de 1 \u00e0 17 ans Vous n'\u00eates pas encore majeur de 18 \u00e0 49 ans Vous \u00eates majeur mais pas s\u00e9nior de 50 \u00e0 59 ans Vous \u00eates s\u00e9nior mais pas encore retrait\u00e9 De 60 \u00e0 120 ans vous etes retrait\u00e9 profites de votre temps libre O\u00f9 ins\u00e9rer le code Javascript ? \u2693\ufe0e Cela d\u00e9pend de ce dont vous avez besoin. Pour une ou quelques lignes de code Dans le code html entour\u00e9 des balises <script> et </script> . 1 2 3 4 5 6 7 8 9 10 < html > < body > < h1 > Ceci est ma super page </ h1 > < p > et voici un petit paragraphe pour occuper l'espace. </ p > < script > alert ( \"Bonjour tout le monde\" ); </ script > < p > et voici un autre paragraphe pour occuper l'espace. </ p > </ body > </ html > ou 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < body > < h1 > Ceci est une page de test de javascript </ h1 > < p > et voici un petit paragraphe pour occuper l'espace. </ p > < script type = \"text/javascript\" > var a = 1 ; if ( a == 1 ) { alert ( \"ceci est n'importe quoi\" ); } else { alert ( \"c'est mieux\" ); } </ script > </ body > Pour un code plus long On cr\u00e9e un fichier .js s\u00e9par\u00e9 et on y fait r\u00e9f\u00e9rence dans le code html . 1 < script type = \"text/javascript\" src = \"monfichier.js\" ></ script > Il peut m\u00eame y avoir plusieurs fichiers .js attach\u00e9 \u00e0 une page html . Mise en place du code PROPREMENT \u2693\ufe0e Cr\u00e9er trois fichier dans votre \u00e9diteur de texte et s\u00e9parer les codes html , css et javascript du premier exercice puis v\u00e9rifier que tout fonctionne.","title":"Exercices d'application Javascript"},{"location":"IHM/javascript/exo_js.html#exercices-dapplication-de-javascript","text":"","title":"Exercices d'application de Javascript"},{"location":"IHM/javascript/exo_js.html#bac-a-sable","text":"Pour faire des tests rapides sans enregistrer, on peut utiliser un \"Bac \u00e0 sable\". Bac \u00e0 sable","title":"Bac \u00e0 sable"},{"location":"IHM/javascript/exo_js.html#utilisation-de-la-console","text":"Voici un code html contenant du javascript . 1 2 3 4 5 6 7 8 9 10 11 < html > < head > < title > Ma Page avec un JS inclus </ title > < script language = \"JavaScript\" > alert ( \"JavaScript est maintenant inclus dans mon fichier et ce message s'affiche dans une fen\u00eatre d'alerte\" ); </ script > </ head > < body > < p > Page avec JavaScript inclus dans mon code HTML </ p > </ body > </ html > A faire 1. Copier et tester ce code dans une page html que vous ouvrirez dans un navigateur. 2. Que fait la fonction alert ? Pour faire afficher les messages dans la console (F12 puis console), on utilise la fonction console.log(a) pour afficher la valeur de a par exmple. Cela evite la fen\u00eatre popUp pour des v\u00e9rifications en cours de code. A faire 3. Modifier le code pour que le message s'affiche dans la console.","title":"Utilisation de la console"},{"location":"IHM/javascript/exo_js.html#variables-et-interaction-utilisateur","text":"","title":"Variables et interaction utilisateur"},{"location":"IHM/javascript/exo_js.html#syntaxe-du-javascript","text":"Les variables doivent \u00eatre d\u00e9clar\u00e9es gr\u00e2ce au mot cl\u00e9 var. Tout comme en python, les cha\u00eenes de caract\u00e8res sont entour\u00e9es de guillemets. Les instructions simples sont termin\u00e9es par un point-virgule: ; Les blocs d'instructions sont entour\u00e9s d'accolades {} Les commentaires sont not\u00e9s pr\u00e9c\u00e9d\u00e9s de deux barres obliques: //. Les variables et fonctions sont \u00e9crites en camelCase(L'espace est remplac\u00e9 par -une majuscule). L'indentation des blocs d'instruction n'est pas obligatoire comme en Python, mais souhaitable pour plus de lisibilit\u00e9 du code.","title":"Syntaxe du Javascript"},{"location":"IHM/javascript/exo_js.html#exemple","text":"Tester ceci : 1 2 3 4 var tonNom = 'Nom' ; var tonPrenom = 'Prenom' ; var toi = tonNom + ' ' + tonPrenom ; alert ( toi ); Puis ceci : 1 2 3 4 5 6 7 var tonNom = prompt ( 'quel est ton nom?' ); var tonPrenom = prompt ( 'quel est ton pr\u00e9nom?' ); var toi = tonNom + ' ' + tonPrenom ; if ( tonNom == 'Einstein' ){ alert ( toi + ':tu es un g\u00e9nie!' );} else { alert ( toi + ':tu es juste un \u00eatre humain' );}","title":"Exemple"},{"location":"IHM/javascript/exo_js.html#fonctions-et-calcul","text":"Pour cr\u00e9er une fonction, on utilise la syntaxe ci-dessous : 1 2 3 function carre ( nombre ){ return nombre * nombre }; Pour ex\u00e9cuter la fonction : 1 2 3 var c ; c = carre ( 4 ); console . log ( c ); Remarque La notion de port\u00e9 de variable est valable aussi en Javascript. Pour d\u00e9clarer une variable qui ne sera valable que dans un bloc ou une fonction on peut utiliser le mot-cl\u00e9 let au lieu de var . A faire 4. Ecrire une fonction qui calcule l'aire du disque dont le rayon est donn\u00e9 par l'utilisateur. Une petite aide? Il faudra commener par utiliser une fonction permettant de rentrer une valeur par l'utilisateur. Puis cr\u00e9er la fonction qui renvoie le calcul et enfin un affichage du r\u00e9sultat. (note : Math.PI permet d'obtenir la valeur de pi. ).","title":"Fonctions et calcul :"},{"location":"IHM/javascript/exo_js.html#les-boucles-et-les-conditions","text":"Pour chacune des syntaxes donn\u00e9es ci-dessous, tester l'exemple donn\u00e9 et cr\u00e9er quelques lignes pour vous entrainer. Vous pouvez si vous \u00eates \u00e0 l'aise tester les instructions propos\u00e9es en dessous.","title":"Les boucles et les conditions"},{"location":"IHM/javascript/exo_js.html#syntaxe-des-conditions","text":"1 2 3 4 5 6 var result ; var a =- 5 ; if ( a > 0 ) { result = 'positive' ; } else { result = 'Not positive' ;} console . log ( result ); Plus d'exemples par ici Il existe aussi la fonction SWITCH dans le cas o\u00f9 il y a plusieurs conditions. Aller voir par ici .","title":"Syntaxe des conditions"},{"location":"IHM/javascript/exo_js.html#syntaxe-de-la-for","text":"1 2 3 4 5 var str = '' ; for ( var i = 0 ; i < 9 ; i ++ ){ str = str + i } console . log ( str ); for ... in et for...of peuvent \u00eatre \u00e9galement utiles.","title":"Syntaxe de la for"},{"location":"IHM/javascript/exo_js.html#syntaxe-de-la-boucle-while","text":"1 2 3 4 5 var n = 0 ; while ( n < 3 ){ n ++ ; } console . log ( n ); Voir aussi do...while . D'autres instructions ici .","title":"Syntaxe de la boucle while"},{"location":"IHM/javascript/exo_js.html#applications","text":"A faire 5. Ecrire un script en utilisant une boucle for qui demande \u00e0 l'utilisateur le nombre de fr\u00e8res et soeurs qu'il poss\u00e8de. Puis le programme demande les pr\u00e9noms de chacun. 6. Ecrire un script qui calcule l'altitude de chute d'un parachutiste \u00e0 chaque seconde. On estime qu'il descend \u00e0 une vitesse de 15m/s en partant de l'altitude de 1000m. On supposera qu'il s'arrete au sol. 7. R\u00e9aliser le script qui demande l'age de l'utilisateur et lui renvoie le commentaire correspondant. Tranche d'\u00e2ge Commentaires de 1 \u00e0 17 ans Vous n'\u00eates pas encore majeur de 18 \u00e0 49 ans Vous \u00eates majeur mais pas s\u00e9nior de 50 \u00e0 59 ans Vous \u00eates s\u00e9nior mais pas encore retrait\u00e9 De 60 \u00e0 120 ans vous etes retrait\u00e9 profites de votre temps libre","title":"Applications"},{"location":"IHM/javascript/exo_js.html#ou-inserer-le-code-javascript","text":"Cela d\u00e9pend de ce dont vous avez besoin. Pour une ou quelques lignes de code Dans le code html entour\u00e9 des balises <script> et </script> . 1 2 3 4 5 6 7 8 9 10 < html > < body > < h1 > Ceci est ma super page </ h1 > < p > et voici un petit paragraphe pour occuper l'espace. </ p > < script > alert ( \"Bonjour tout le monde\" ); </ script > < p > et voici un autre paragraphe pour occuper l'espace. </ p > </ body > </ html > ou 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < body > < h1 > Ceci est une page de test de javascript </ h1 > < p > et voici un petit paragraphe pour occuper l'espace. </ p > < script type = \"text/javascript\" > var a = 1 ; if ( a == 1 ) { alert ( \"ceci est n'importe quoi\" ); } else { alert ( \"c'est mieux\" ); } </ script > </ body > Pour un code plus long On cr\u00e9e un fichier .js s\u00e9par\u00e9 et on y fait r\u00e9f\u00e9rence dans le code html . 1 < script type = \"text/javascript\" src = \"monfichier.js\" ></ script > Il peut m\u00eame y avoir plusieurs fichiers .js attach\u00e9 \u00e0 une page html .","title":"O\u00f9 ins\u00e9rer le code Javascript?"},{"location":"IHM/javascript/exo_js.html#mise-en-place-du-code-proprement","text":"Cr\u00e9er trois fichier dans votre \u00e9diteur de texte et s\u00e9parer les codes html , css et javascript du premier exercice puis v\u00e9rifier que tout fonctionne.","title":"Mise en place du code PROPREMENT"},{"location":"IHM/javascript/formulaire.html","text":"Les Formulaires \u2693\ufe0e Quelques \u00e9l\u00e9ments de formulaires \u2693\ufe0e Le bouton \u2693\ufe0e Exemple Un \u00e9l\u00e9ment de formulaire fondamental : le bouton Code html 1 2 3 4 < form > < input type = \"button\" value = \"tester\" onclick = \"testBidon()\" > </ form > < div id = \"casecouleur\" > Texte \u00e0 colorer </ div > javascript 1 2 3 function testBidon (){ document . getElementById ( \"casecouleur\" ). style . backgroundColor = 'aqua' ; } Boutons radio \u2693\ufe0e Il faut donner le m\u00eame nom aux boutons radios mais des id diff\u00e9rents Exemple 1 2 3 4 Code html 1 2 3 4 5 6 7 < form > 1 < input type = \"radio\" name = \"testRad\" value = \"1\" id = \"radio1\" > 2 < input type = \"radio\" name = \"testRad\" value = \"2\" id = \"radio2\" > ... < div id = \"texteRadio\" ></ div > < input type = \"button\" value = \"tester\" onclick = \"testRadio()\" > </ form > javascript 1 2 3 4 5 6 7 8 function testRadio (){ var aecrire = \"Le bouton radio s\u00e9lectionn\u00e9 est le \" ; if ( document . getElementById ( 'radio1' ). checked ) aecrire += 1 ; if ( document . getElementById ( 'radio2' ). checked ) aecrire += 2 ; if ( document . getElementById ( 'radio3' ). checked ) aecrire += 3 ; if ( document . getElementById ( 'radio4' ). checked ) aecrire += 4 ; document . getElementById ( 'texteRadio' ). innerHTML = aecrire ; } Le contenu de la variable contenu est \u00e9crit dans une balise dont l' id est texteRadio initialement vide. A faire Compl\u00e9ter et tester le code pour ajouter les deux boutons radio manquant. Cases \u00e0 cocher \u2693\ufe0e Exemple Case 1 Case 2 Case 3 Code html 1 2 3 4 5 6 7 < form > < div id = \"casesACocher\" > < input type = \"checkbox\" name = \"testCase\" value = \"Case 1\" id = \"case1\" > Case 1 < br > < input type = \"button\" value = \"tester\" onclick = \"...\" > < div ></ div > </ div > </ form > javascript 1 2 3 4 5 6 7 function testCases (){ var aecrire = \"vous avez coch\u00e9 \" ; if ( document . getElementById ( 'case1' ). checked ) aecrire += \" la case 1, \" ; if ( document . getElementById ( 'case2' ). checked ) aecrire += \" la case 2, \" ; if ( document . getElementById ( 'case3' ). checked ) aecrire += \" la case 3, \" ; document . getElementById ( 'texteCases' ). innerHTML = aecrire ; } A faire Compl\u00e9ter le code HTML pour ajouter les deux cases manquantes, le bouton de validation et le bloc pour r\u00e9cup\u00e9rer le r\u00e9sultat. Remarque 1 : ici le choix a \u00e9t\u00e9 de faire appara\u00eetre la l\u00e9gende (Case 1) apr\u00e8s le bouton donc apr\u00e8s la balise. Remarque 2 : il faut donner le m\u00eame nom aux cases \u00e0 cocher mais des id diff\u00e9rents. s S\u00e9lection \u2693\ufe0e Exemple .... mot 1 mot 2 Code html 1 2 3 4 5 6 7 < form > < select > < option name = \"selection\" value = \"...\" id = \"rien\" > .... </ option > < option name = \"selection\" value = \"mot 1\" id = \"mot1\" > mot 1 </ option > < option name = \"selection\" value = \"mot 2\" id = \"mot2\" > mot 2 </ option > </ select > </ form > javascript 1 2 3 4 5 6 function testMenu (){ var aecrire = \"vous avez s\u00e9lectionn\u00e9 \" ; if ( document . getElementById ( 'mot1' ). selected ) aecrire += \"le mot 1\" ; if ( document . getElementById ( 'mot2' ). selected ) aecrire += \"le mot 2\" ; document . getElementById ( 'texteMenu' ). innerHTML = aecrire ; } A faire R\u00e9cup\u00e9rer et modifier le code pour cr\u00e9er votre propre liste d\u00e9roulante et r\u00e9cup\u00e9rer le r\u00e9sultat. Remarque 1 : ici le choix a \u00e9t\u00e9 de faire appara\u00eetre une premi\u00e8re l\u00e9gende vide (\u2026) pour l'affichage par d\u00e9faut (qui est la premi\u00e8re balise option ). Remarque 2 : il faut donner le m\u00eame nom aux balises option mais des id diff\u00e9rents. exemple : on teste quel mot a \u00e9t\u00e9 s\u00e9lectionn\u00e9 selected ; on rajoute alors ce mot dans le texte (aecrire) \u00e0 afficher dans le bloc d'identifiant \"texteMenu\". R\u00e9cup\u00e9ration de texte \u2693\ufe0e Exemple Entrez votre texte : Code html 1 2 3 < form > Entrez votre texte : < input type = \"text\" value = \"\" id = \"saisie\" > </ form > javascript 1 2 3 4 5 function testSaisie (){ var aecrire = \"vous avez \u00e9crit \" ; aecrire += document . getElementById ( 'saisie' ). value ; document . getElementById ( 'texteSaisie' ). innerHTML = aecrire ; } Remarque : il existe d'autres balises permettant de r\u00e9cup\u00e9rer un texte plus long. exemple : on r\u00e9cup\u00e8re le texte entr\u00e9 value ; on rajoute alors ce texte dans le texte (aecrire) \u00e0 afficher dans le bloc d'identifiant \"texteSaisie\". Remarques \u2693\ufe0e Le choix a \u00e9t\u00e9 fait ici de focaliser sur la construction du formulaire pour r\u00e9cup\u00e9rer des donn\u00e9es et non pas sur la transmission de ces donn\u00e9es. La transmission des donn\u00e9es fera l'objet d'un cours ult\u00e9rieur. Seuls quelques \u00e9l\u00e9ments de formulaires et leur utilisation basique ont \u00e9t\u00e9 pr\u00e9sent\u00e9s dans ce cours. Pour approfondir, il existe de nombreuses ressources en ligne. En voici quelques unes les \u00e9l\u00e9ments de base pour bien concevoir son formulaire sur developer.mozilla.org (ne pas tenir compte de l'attribut method de la balise < form > : cet attribut sera vu ult\u00e9rieurement avec la notion de client-serveur) un memento des \u00e9l\u00e9ments de formulaire et de leurs attributs sur toutjavascript.com fonctionnalit\u00e9s avanc\u00e9es sur Openclassroom Application \u2693\ufe0e Vous \u00eates en charge du site de commande pour la commercialisation d'un mini-drone. A vous de construire le formulaire sur la page de commande et de compl\u00e9ter la page d'accus\u00e9 de r\u00e9ception accessible apr\u00e8s validation du formulaire. Les donn\u00e9es entr\u00e9es dans le formulaire devront \u00eatre r\u00e9capituler en dessous lors de la validation de celui-ci. Pour plus de claret\u00e9 vous essayerez de faire \"disparaitre\" le formulaire gr\u00e2ce \u00e0 la proprit\u00e9t\u00e9 css \"hidden\". Vous cr\u00e9erez un formulaire de commande et en cliquant sur un bouton VALIDER, le script doit r\u00e9cuprer les donn\u00e9es entr\u00e9es par l'utilisateur puis \u00e9crire un paragraphe r\u00e9capitulif en dessous du formulaire. Faites preuve de cr\u00e9ativit\u00e9. commande.html feuille de style En bonus On pourra am\u00e9liorer le programme en chargeant la validation du formulaire das une autre page accuse.html . pour cela il va falloir stocker les donn\u00e9es et les r\u00e9cup\u00e9rer dans l'autre page. On donne en exemple le passage d'une page \u00e0 l'autre avec un \u00e9l\u00e9ment de formulaire. Au clic sur le bouton ENREGISTRER, le r\u00e9capitulatif est donn\u00e9 dans uen autre page. Visuel formulaire Formulaire \u00e0 remplir Ton nom page1.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html > < head > < meta charset = 'utf-8' > < title > page 1 </ title > < link rel = 'stylesheet' type = 'text/css' media = 'screen' href = 'style.css' > < script src = \"js.js\" ></ script > </ head > < body > < h1 > Formulaire \u00e0 remplir </ h1 > < form > Ton nom < input type = \"text\" value = \"\" id = \"nom\" > < input type = \"button\" value = \"enregistrer\" onclick = \"enregistrer()\" > </ form > </ body > </ html > page2.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html > < head > < meta charset = 'utf-8' > < title > page 2 </ title > < link rel = 'stylesheet' type = 'text/css' media = 'screen' href = 'style.css' > < script src = \"js.js\" ></ script > </ head > < body onload = \"recuperer()\" > <! -- chage la fonction recuperer() avant le corps du site--> < h1 > Validation du formulaire </ h1 > < p > Voici les \u00e9l\u00e9ments du formulaire: < br > < span id = \"validation\" ></ span > </ p > </ body > </ html > js.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var texte = \"\" ; // la fonction d'enregistrement du formulaire, \u00e0 compl\u00e9ter function enregistrer () { var phraseNom = \"vous vous appelez\" ; phraseNom += document . getElementById ( 'nom' ). value ; texte += phraseNom ; texte += \"\" ; // r\u00e9cup\u00e9ration des donn\u00e9es des \u00e9l\u00e9ments du formulaire \u00e0 compl\u00e9ter // stockage en local des donn\u00e9es dans la variable texte sessionStorage . setItem ( 'monObjet' , JSON . stringify ( texte )); // changement automatique de page vers la page 2 document . location . href = \"page2.html\" ; } function recuperer () { var obj = JSON . parse ( sessionStorage . getItem ( 'monObjet' )); document . getElementById ( \"validation\" ). innerHTML = obj ; } navigation openclassrooms.com developer.mozilla.org Pierre Giraud alsacreations.com // pour enregistrer en local var contenu=\"\"; function enregistrer() { localStorage.setItem('monTexte', JSON.stringify(contenu)); } // la fonction du bouton de la premi\u00e8re ligne du tableau function testBidon() { document.getElementById(\"casecouleur\").style.backgroundColor='aqua'; } // la fonction qui \u00e9crit quel bouton radio a \u00e9t\u00e9 s\u00e9lectionn\u00e9 function testRadio() { var aecrire=\"Le bouton radio s\u00e9lectionn\u00e9 est le \"; if (document.getElementById('radio1').checked) aecrire+=1; if (document.getElementById('radio2').checked) aecrire+=2; if (document.getElementById('radio3').checked) aecrire+=3; if (document.getElementById('radio4').checked) aecrire+=4; document.getElementById('texteRadio').innerHTML=aecrire; } // la fonction qui \u00e9crit quelle(s) case(s) a (ont) \u00e9t\u00e9 s\u00e9lectionn\u00e9e(s) function testCases() { var aecrire=\"vous avez coch\u00e9 \"; if (document.getElementById('case1').checked) aecrire+=\" la case 1, \"; if (document.getElementById('case2').checked) aecrire+=\" la case 2, \"; if (document.getElementById('case3').checked) aecrire+=\" la case 3, \"; document.getElementById('texteCases').innerHTML=aecrire; } // la fonction qui \u00e9crit quel mot a \u00e9t\u00e9 s\u00e9lectionn\u00e9 function testMenu() { var aecrire=\"vous avez s\u00e9lectionn\u00e9 \"; if (document.getElementById('mot1').selected) aecrire+=\"le mot 1\"; if (document.getElementById('mot2').selected) aecrire+=\"le mot 2\"; document.getElementById('texteMenu').innerHTML=aecrire; } // la fonction qui r\u00e9\u00e9crit le texte saisi function testSaisie() { var aecrire=\"vous avez \u00e9crit \"; aecrire+=document.getElementById('saisie').value; document.getElementById('texteSaisie').innerHTML=aecrire; }","title":"Les formulaires"},{"location":"IHM/javascript/formulaire.html#les-formulaires","text":"","title":"Les Formulaires"},{"location":"IHM/javascript/formulaire.html#quelques-elements-de-formulaires","text":"","title":"Quelques \u00e9l\u00e9ments de formulaires"},{"location":"IHM/javascript/formulaire.html#le-bouton","text":"Exemple Un \u00e9l\u00e9ment de formulaire fondamental : le bouton Code html 1 2 3 4 < form > < input type = \"button\" value = \"tester\" onclick = \"testBidon()\" > </ form > < div id = \"casecouleur\" > Texte \u00e0 colorer </ div > javascript 1 2 3 function testBidon (){ document . getElementById ( \"casecouleur\" ). style . backgroundColor = 'aqua' ; }","title":"Le bouton"},{"location":"IHM/javascript/formulaire.html#boutons-radio","text":"Il faut donner le m\u00eame nom aux boutons radios mais des id diff\u00e9rents Exemple 1 2 3 4 Code html 1 2 3 4 5 6 7 < form > 1 < input type = \"radio\" name = \"testRad\" value = \"1\" id = \"radio1\" > 2 < input type = \"radio\" name = \"testRad\" value = \"2\" id = \"radio2\" > ... < div id = \"texteRadio\" ></ div > < input type = \"button\" value = \"tester\" onclick = \"testRadio()\" > </ form > javascript 1 2 3 4 5 6 7 8 function testRadio (){ var aecrire = \"Le bouton radio s\u00e9lectionn\u00e9 est le \" ; if ( document . getElementById ( 'radio1' ). checked ) aecrire += 1 ; if ( document . getElementById ( 'radio2' ). checked ) aecrire += 2 ; if ( document . getElementById ( 'radio3' ). checked ) aecrire += 3 ; if ( document . getElementById ( 'radio4' ). checked ) aecrire += 4 ; document . getElementById ( 'texteRadio' ). innerHTML = aecrire ; } Le contenu de la variable contenu est \u00e9crit dans une balise dont l' id est texteRadio initialement vide. A faire Compl\u00e9ter et tester le code pour ajouter les deux boutons radio manquant.","title":"Boutons radio"},{"location":"IHM/javascript/formulaire.html#cases-a-cocher","text":"Exemple Case 1 Case 2 Case 3 Code html 1 2 3 4 5 6 7 < form > < div id = \"casesACocher\" > < input type = \"checkbox\" name = \"testCase\" value = \"Case 1\" id = \"case1\" > Case 1 < br > < input type = \"button\" value = \"tester\" onclick = \"...\" > < div ></ div > </ div > </ form > javascript 1 2 3 4 5 6 7 function testCases (){ var aecrire = \"vous avez coch\u00e9 \" ; if ( document . getElementById ( 'case1' ). checked ) aecrire += \" la case 1, \" ; if ( document . getElementById ( 'case2' ). checked ) aecrire += \" la case 2, \" ; if ( document . getElementById ( 'case3' ). checked ) aecrire += \" la case 3, \" ; document . getElementById ( 'texteCases' ). innerHTML = aecrire ; } A faire Compl\u00e9ter le code HTML pour ajouter les deux cases manquantes, le bouton de validation et le bloc pour r\u00e9cup\u00e9rer le r\u00e9sultat. Remarque 1 : ici le choix a \u00e9t\u00e9 de faire appara\u00eetre la l\u00e9gende (Case 1) apr\u00e8s le bouton donc apr\u00e8s la balise. Remarque 2 : il faut donner le m\u00eame nom aux cases \u00e0 cocher mais des id diff\u00e9rents. s","title":"Cases \u00e0 cocher"},{"location":"IHM/javascript/formulaire.html#selection","text":"Exemple .... mot 1 mot 2 Code html 1 2 3 4 5 6 7 < form > < select > < option name = \"selection\" value = \"...\" id = \"rien\" > .... </ option > < option name = \"selection\" value = \"mot 1\" id = \"mot1\" > mot 1 </ option > < option name = \"selection\" value = \"mot 2\" id = \"mot2\" > mot 2 </ option > </ select > </ form > javascript 1 2 3 4 5 6 function testMenu (){ var aecrire = \"vous avez s\u00e9lectionn\u00e9 \" ; if ( document . getElementById ( 'mot1' ). selected ) aecrire += \"le mot 1\" ; if ( document . getElementById ( 'mot2' ). selected ) aecrire += \"le mot 2\" ; document . getElementById ( 'texteMenu' ). innerHTML = aecrire ; } A faire R\u00e9cup\u00e9rer et modifier le code pour cr\u00e9er votre propre liste d\u00e9roulante et r\u00e9cup\u00e9rer le r\u00e9sultat. Remarque 1 : ici le choix a \u00e9t\u00e9 de faire appara\u00eetre une premi\u00e8re l\u00e9gende vide (\u2026) pour l'affichage par d\u00e9faut (qui est la premi\u00e8re balise option ). Remarque 2 : il faut donner le m\u00eame nom aux balises option mais des id diff\u00e9rents. exemple : on teste quel mot a \u00e9t\u00e9 s\u00e9lectionn\u00e9 selected ; on rajoute alors ce mot dans le texte (aecrire) \u00e0 afficher dans le bloc d'identifiant \"texteMenu\".","title":"S\u00e9lection"},{"location":"IHM/javascript/formulaire.html#recuperation-de-texte","text":"Exemple Entrez votre texte : Code html 1 2 3 < form > Entrez votre texte : < input type = \"text\" value = \"\" id = \"saisie\" > </ form > javascript 1 2 3 4 5 function testSaisie (){ var aecrire = \"vous avez \u00e9crit \" ; aecrire += document . getElementById ( 'saisie' ). value ; document . getElementById ( 'texteSaisie' ). innerHTML = aecrire ; } Remarque : il existe d'autres balises permettant de r\u00e9cup\u00e9rer un texte plus long. exemple : on r\u00e9cup\u00e8re le texte entr\u00e9 value ; on rajoute alors ce texte dans le texte (aecrire) \u00e0 afficher dans le bloc d'identifiant \"texteSaisie\".","title":"R\u00e9cup\u00e9ration de texte"},{"location":"IHM/javascript/formulaire.html#remarques","text":"Le choix a \u00e9t\u00e9 fait ici de focaliser sur la construction du formulaire pour r\u00e9cup\u00e9rer des donn\u00e9es et non pas sur la transmission de ces donn\u00e9es. La transmission des donn\u00e9es fera l'objet d'un cours ult\u00e9rieur. Seuls quelques \u00e9l\u00e9ments de formulaires et leur utilisation basique ont \u00e9t\u00e9 pr\u00e9sent\u00e9s dans ce cours. Pour approfondir, il existe de nombreuses ressources en ligne. En voici quelques unes les \u00e9l\u00e9ments de base pour bien concevoir son formulaire sur developer.mozilla.org (ne pas tenir compte de l'attribut method de la balise < form > : cet attribut sera vu ult\u00e9rieurement avec la notion de client-serveur) un memento des \u00e9l\u00e9ments de formulaire et de leurs attributs sur toutjavascript.com fonctionnalit\u00e9s avanc\u00e9es sur Openclassroom","title":"Remarques"},{"location":"IHM/javascript/formulaire.html#application","text":"Vous \u00eates en charge du site de commande pour la commercialisation d'un mini-drone. A vous de construire le formulaire sur la page de commande et de compl\u00e9ter la page d'accus\u00e9 de r\u00e9ception accessible apr\u00e8s validation du formulaire. Les donn\u00e9es entr\u00e9es dans le formulaire devront \u00eatre r\u00e9capituler en dessous lors de la validation de celui-ci. Pour plus de claret\u00e9 vous essayerez de faire \"disparaitre\" le formulaire gr\u00e2ce \u00e0 la proprit\u00e9t\u00e9 css \"hidden\". Vous cr\u00e9erez un formulaire de commande et en cliquant sur un bouton VALIDER, le script doit r\u00e9cuprer les donn\u00e9es entr\u00e9es par l'utilisateur puis \u00e9crire un paragraphe r\u00e9capitulif en dessous du formulaire. Faites preuve de cr\u00e9ativit\u00e9. commande.html feuille de style En bonus On pourra am\u00e9liorer le programme en chargeant la validation du formulaire das une autre page accuse.html . pour cela il va falloir stocker les donn\u00e9es et les r\u00e9cup\u00e9rer dans l'autre page. On donne en exemple le passage d'une page \u00e0 l'autre avec un \u00e9l\u00e9ment de formulaire. Au clic sur le bouton ENREGISTRER, le r\u00e9capitulatif est donn\u00e9 dans uen autre page. Visuel formulaire","title":"Application"},{"location":"IHM/javascript/programmation_evenementielle.html","text":"Programmation \u00e9v\u00e8nementielle \u2693\ufe0e Atteindre un \u00e9l\u00e9ment de la page html \u2693\ufe0e Tester ce code et n'oubliez pas d'aller voir dans la console. Question Expliquer ce qu'il fait. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html > < head > < title > R\u00e9up\u00e9rer un \u00e9l\u00e9ment html </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p id = \"1\" > voici un premier < strong > paragraphe </ strong > dont l'identifiant est \"1\" </ p > < p id = \"2\" > voici un autre paragraphe dont l'identifiant est \"2\" </ p > < script > console . log ( document . getElementById ( \"1\" ). outerHTML ); console . log ( document . getElementsByTagName ( \"p\" )[ 0 ].); </ script > </ body > </ html > Important document.getElementById(\"1\") : permet de r\u00e9cup\u00e9rer l'\u00e9l\u00e9ment dont l'id est \"1\" document.getElementsByTagName(\"p\") : permet de r\u00e9cup\u00e9rer tous les \u00e9l\u00e9ments de type paragraphe. document.getElementsByTagName(\"p\")[0] :r\u00e9cup\u00e8re le premier \u00e9l\u00e9ment de type paragraphe. Questions 1. V\u00e9rifier dans la console les \u00e9l\u00e9ments ainsi r\u00e9cup\u00e9r\u00e9s. 2. Remplacer la ligne 11 par console.log(document.getElementById(\"1\").outerHTML); Que fait la m\u00e9thode outerHTML ? 3. Remplacer outerHTML par .innerHTML . Que r\u00e9cup\u00e8re la commande ? 4. M\u00eame question en rempla\u00e7ant innerHTML par innerText . Manipuler le html : \u2693\ufe0e 1 2 3 < script > document . getElementById ( \"1\" ). innerHTML = \"je modifie mon paragraphe\" ; </ script > Questions 5. Remplacer \"=\" par \"+=\". Que se passe-t-il? 6. Que fait ce code? Le tester. 1 2 3 4 5 6 7 8 9 10 11 12 < body > < a id = \"myLink\" href = \"http://www.google.com\" > Un lien modifi\u00e9 dynamiquement </ a > < script > var link = document . getElementById ( \"myLink\" ); var href = link . getAttribute ( \"href\" ); // On r\u00e9cup\u00e8re l'attribut \u00ab href \u00bb alert ( href ); link . setAttribute ( \"href\" , \"https://informatiquelha.wordpress.com/\" ); // On \u00e9dite l'attribut \u00ab href \u00bb </ script > </ body > Questions 7. Modifier le code de fa\u00e7on \u00e0 cr\u00e9er un lien vers le site informatiquelha.wordpress.com dans le deuxi\u00e8me paragraphe. Ce lien doit avoir un identifiant id . Manipuler le css \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < html > < head > < title > Parcel Sandbox </ title > < meta charset = \"UTF-8\" /> < style > # exemple { background-color : #ff0 ; color : #0f0 ; font-size : 1.2 em ; text-align : center ; } </ style > </ head > < body > < div id = \"exemple\" > Pif paf pouf </ div > < script > // on r\u00e9cup\u00e8re l'\u00e9l\u00e9ment var elmt = document . getElementById ( \"exemple\" ); alert ( \"on r\u00e9cup\u00e8re l'\u00e9l\u00e9ment exemple et on en modifie le style\" ); // on modifie son style elmt . style . backgroundColor = \"gray\" ; </ script > </ body > </ html > Questions 8. Etudier ce code et le compl\u00e9ter de fa\u00e7on \u00e0 ce que le texte s'\u00e9crive en noir, align\u00e9 \u00e0 droite et d'une hauteur de 1.8em. Une petite aide? Le JavaScript ne supporte pas les tirets. On remplacera donc background-color par backgroundColor. Les \u00e9v\u00e8nements \u2693\ufe0e Ev\u00e8nements li\u00e9s \u00e0 la souris \u2693\ufe0e Tester ce code et chercher les \u00e9l\u00e9ments qui d\u00e9clenchent le changement. See the Pen flash by muriel722 ( @muriel722 ) on CodePen . Questions 9. L'\u00e9v\u00e8nement mouseout d\u00e9tecte le fait que la souris quitte la zone. Modifier le code pour que le paragraphe reprenne sa forme originale lorsque la souris quitte la zone. Voici ce que l'on peut faire d'autre : Ev\u00e8nements li\u00e9s au clavier \u2693\ufe0e Tester ceci : Code html 1 2 3 4 5 6 <!DOCTYPE html> < body > < p > Taper sur une touche </ p > < p id = \"aremplir3\" ></ p > < script src = \"index.js\" ></ script > </ body > javascript 1 2 3 4 5 6 7 var texte0 = \" ; elle correspond au caract\u00e8re \" ; var zone3 = document . getElementById ( \"aremplir3\" ); var texte3 = \"vous avez frapp\u00e9 la touche de code \" ; document . addEventListener ( \"keypress\" , function ( e ) { zone3 . innerHTML = texte3 + e . keyCode + texte0 + String . fromCharCode ( e . keyCode ); }); Questions 10. Que font les fonctions keyCode et String.fromCharCode(e.keyCode) ? 11. Remplacer keypress par keydown puis keyup . Quelles sont les diff\u00e9rences (notamment en terme d'affichage)?","title":"Programmation evenementielle"},{"location":"IHM/javascript/programmation_evenementielle.html#programmation-evenementielle","text":"","title":"Programmation \u00e9v\u00e8nementielle"},{"location":"IHM/javascript/programmation_evenementielle.html#atteindre-un-element-de-la-page-html","text":"Tester ce code et n'oubliez pas d'aller voir dans la console. Question Expliquer ce qu'il fait. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html > < head > < title > R\u00e9up\u00e9rer un \u00e9l\u00e9ment html </ title > < meta charset = \"UTF-8\" /> </ head > < body > < p id = \"1\" > voici un premier < strong > paragraphe </ strong > dont l'identifiant est \"1\" </ p > < p id = \"2\" > voici un autre paragraphe dont l'identifiant est \"2\" </ p > < script > console . log ( document . getElementById ( \"1\" ). outerHTML ); console . log ( document . getElementsByTagName ( \"p\" )[ 0 ].); </ script > </ body > </ html > Important document.getElementById(\"1\") : permet de r\u00e9cup\u00e9rer l'\u00e9l\u00e9ment dont l'id est \"1\" document.getElementsByTagName(\"p\") : permet de r\u00e9cup\u00e9rer tous les \u00e9l\u00e9ments de type paragraphe. document.getElementsByTagName(\"p\")[0] :r\u00e9cup\u00e8re le premier \u00e9l\u00e9ment de type paragraphe. Questions 1. V\u00e9rifier dans la console les \u00e9l\u00e9ments ainsi r\u00e9cup\u00e9r\u00e9s. 2. Remplacer la ligne 11 par console.log(document.getElementById(\"1\").outerHTML); Que fait la m\u00e9thode outerHTML ? 3. Remplacer outerHTML par .innerHTML . Que r\u00e9cup\u00e8re la commande ? 4. M\u00eame question en rempla\u00e7ant innerHTML par innerText .","title":"Atteindre un \u00e9l\u00e9ment de la page html"},{"location":"IHM/javascript/programmation_evenementielle.html#manipuler-le-html","text":"1 2 3 < script > document . getElementById ( \"1\" ). innerHTML = \"je modifie mon paragraphe\" ; </ script > Questions 5. Remplacer \"=\" par \"+=\". Que se passe-t-il? 6. Que fait ce code? Le tester. 1 2 3 4 5 6 7 8 9 10 11 12 < body > < a id = \"myLink\" href = \"http://www.google.com\" > Un lien modifi\u00e9 dynamiquement </ a > < script > var link = document . getElementById ( \"myLink\" ); var href = link . getAttribute ( \"href\" ); // On r\u00e9cup\u00e8re l'attribut \u00ab href \u00bb alert ( href ); link . setAttribute ( \"href\" , \"https://informatiquelha.wordpress.com/\" ); // On \u00e9dite l'attribut \u00ab href \u00bb </ script > </ body > Questions 7. Modifier le code de fa\u00e7on \u00e0 cr\u00e9er un lien vers le site informatiquelha.wordpress.com dans le deuxi\u00e8me paragraphe. Ce lien doit avoir un identifiant id .","title":"Manipuler le html :"},{"location":"IHM/javascript/programmation_evenementielle.html#manipuler-le-css","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 < html > < head > < title > Parcel Sandbox </ title > < meta charset = \"UTF-8\" /> < style > # exemple { background-color : #ff0 ; color : #0f0 ; font-size : 1.2 em ; text-align : center ; } </ style > </ head > < body > < div id = \"exemple\" > Pif paf pouf </ div > < script > // on r\u00e9cup\u00e8re l'\u00e9l\u00e9ment var elmt = document . getElementById ( \"exemple\" ); alert ( \"on r\u00e9cup\u00e8re l'\u00e9l\u00e9ment exemple et on en modifie le style\" ); // on modifie son style elmt . style . backgroundColor = \"gray\" ; </ script > </ body > </ html > Questions 8. Etudier ce code et le compl\u00e9ter de fa\u00e7on \u00e0 ce que le texte s'\u00e9crive en noir, align\u00e9 \u00e0 droite et d'une hauteur de 1.8em. Une petite aide? Le JavaScript ne supporte pas les tirets. On remplacera donc background-color par backgroundColor.","title":"Manipuler le css"},{"location":"IHM/javascript/programmation_evenementielle.html#les-evenements","text":"","title":"Les \u00e9v\u00e8nements"},{"location":"IHM/javascript/programmation_evenementielle.html#evenements-lies-a-la-souris","text":"Tester ce code et chercher les \u00e9l\u00e9ments qui d\u00e9clenchent le changement. See the Pen flash by muriel722 ( @muriel722 ) on CodePen . Questions 9. L'\u00e9v\u00e8nement mouseout d\u00e9tecte le fait que la souris quitte la zone. Modifier le code pour que le paragraphe reprenne sa forme originale lorsque la souris quitte la zone. Voici ce que l'on peut faire d'autre :","title":"Ev\u00e8nements li\u00e9s \u00e0 la souris"},{"location":"IHM/javascript/programmation_evenementielle.html#evenements-lies-au-clavier","text":"Tester ceci : Code html 1 2 3 4 5 6 <!DOCTYPE html> < body > < p > Taper sur une touche </ p > < p id = \"aremplir3\" ></ p > < script src = \"index.js\" ></ script > </ body > javascript 1 2 3 4 5 6 7 var texte0 = \" ; elle correspond au caract\u00e8re \" ; var zone3 = document . getElementById ( \"aremplir3\" ); var texte3 = \"vous avez frapp\u00e9 la touche de code \" ; document . addEventListener ( \"keypress\" , function ( e ) { zone3 . innerHTML = texte3 + e . keyCode + texte0 + String . fromCharCode ( e . keyCode ); }); Questions 10. Que font les fonctions keyCode et String.fromCharCode(e.keyCode) ? 11. Remplacer keypress par keydown puis keyup . Quelles sont les diff\u00e9rences (notamment en terme d'affichage)?","title":"Ev\u00e8nements li\u00e9s au clavier"},{"location":"IHM/php/Protocole_HTTP.html","text":"PROTOCOLE HTTP Communication Client - Serveur Les r\u00e9ponses aux questions sont \u00e0 r\u00e9diger sur le document r\u00e9ponse . Ce document fera office de cours attention \u00e0 bien expliquer les r\u00e9ponses si n\u00e9cessaire. Protocole HTTP La navigation sur le web se fait suivant le mod\u00e8le client-serveur : le client effectue des requ\u00eates. le serveur r\u00e9pond \u00e0 ces requ\u00eates. Lorsque vous naviguez sur internet : Le client est votre navigateur web (Mozilla Firefox par exemple). Le serveur est un logiciel qui tourne sur un ordinateur en g\u00e9n\u00e9ral d\u00e9di\u00e9 \u00e0 cela. Communication client serveur expliqu\u00e9e simplement Serveur Web Requ\u00eates HTTP A chaque fois qu'un navigateur a besoin d'un fichier h\u00e9berg\u00e9 sur un serveur web, le navigateur demande (on dit qu'il envoie une requ\u00eate) le fichier via HTTP. Quand la requ\u00eate atteint le bon serveur web (mat\u00e9riel), le serveur HTTP (logiciel) renvoie le document demand\u00e9, \u00e9galement gr\u00e2ce \u00e0 HTTP. Pour publier un site web, on peut utiliser un serveur web statique ou un serveur web dynamique. Un serveur web statique est compos\u00e9 d'un ordinateur (mat\u00e9riel) et d'un serveur HTTP (logiciel). Il est appel\u00e9 \u00ab statique \u00bb car le serveur envoie les fichiers h\u00e9berg\u00e9s \u00ab tels quels \u00bb vers le navigateur. C'est ce type de fichiers que l'on a cod\u00e9 pr\u00e9c\u00e9demment en HTML / CSS et JavaScript. Un serveur web dynamique poss\u00e8de d'autres composants logiciels, certains qu'on retrouve fr\u00e9quemment, dont un serveur d'applications et une base de donn\u00e9es. Il est appel\u00e9 \u00ab dynamique \u00bb car le serveur d'applications met \u00e0 jour les fichiers h\u00e9berg\u00e9s avant de les envoyer au navigateur via HTTP. Par exemple, afin de produire la page web que vous voyez sur votre navigateur, le serveur d'applications serveur peut utiliser un mod\u00e8le HTML et le remplir avec des donn\u00e9es. Ainsi, des sites comme MDN ou Wikip\u00e9dia ont des milliers de pages mais il n'existe pas un document HTML r\u00e9el pour chacune de ces pages. En fait, il y a quelques mod\u00e8les (ou gabarits) HTML qui sont utilis\u00e9s avec une gigantesque base de donn\u00e9es. Cette organisation permet de mieux mettre \u00e0 disposition le contenu et de maintenir plus efficacement le site. 1. Pour charger sur votre navigateur un site dont l'arborescence est fournie ci-dessous, combien de req\u00eates minimum le client devra-t-il faire? Analyser les requ\u00eates L'outil d\u00e9veloppeur de Firefox permet d'analyser les req\u00eates et les r\u00e9ponses. En appuyant sur F12, on voit apara\u00eetre la fen\u00eatre et en clqiuant sur l'onglet \"r\u00e9seau\" la liste des requ\u00eates apparait : On peut cliquer sur une requ\u00eate pour en avoir le d\u00e9tail : Examiner les rqu\u00eates du site http://perdus.com/ 2. Combien de requ\u00eates sont faites ? 3. Combien de r\u00e9ponses ? Le code 200 est un code de r\u00e9ponse par le serveur. Vous connaissez surement le code 404. 4. Que signifient les codes 200 et 404 \u00e0 votre avis ? Examiner les requ\u00eates de l'acc\u00e8s \u00e0 la page http://portail.lyc-la-martiniere-diderot.ac-lyon.fr/srv1/html/theme5/mascotte.html 5. Combien de requ\u00eates semblent avoir lieu ? 6. L'image est elle stock\u00e9e sur le m\u00eame serveur que le site ? 7. Les requ\u00eates sont elle s\u00e9curis\u00e9es ? R\u00e9ponses HTTP 8. Quels sont les types de fichiers \u00e9chang\u00e9s ? 9. Quelles sont les tailles de l'image et du fichier javascript ? HTTPS L'HyperText Transfer Protocol Secure (HTTPS : \u00ab protocole de transfert hypertextuel s\u00e9curis\u00e9 \u00bb) est la combinaison du HTTP avec une couche de chiffrement. HTTPS permet au visiteur de v\u00e9rifier l'identit\u00e9 du site web auquel il acc\u00e8de, gr\u00e2ce \u00e0 un certificat d'authentification \u00e9mis par une autorit\u00e9 tierce, r\u00e9put\u00e9e fiable (et faisant g\u00e9n\u00e9ralement partie de la liste blanche des navigateurs internet). Il garantit th\u00e9oriquement la confidentialit\u00e9 et l'int\u00e9grit\u00e9 des donn\u00e9es envoy\u00e9es par l'utilisateur (notamment des informations entr\u00e9es dans les formulaires) et re\u00e7ues du serveur. Il peut permettre de valider l'identit\u00e9 du visiteur si celui-ci utilise \u00e9galement un certificat d'authentification client. HTTPS est g\u00e9n\u00e9ralement utilis\u00e9 pour les transactions financi\u00e8res en ligne : commerce \u00e9lectronique, banque en ligne, courtage en ligne, etc. Il est aussi utilis\u00e9 pour la consultation de donn\u00e9es priv\u00e9es, comme les courriers \u00e9lectroniques, par exemple. Principe Le protocole est identique au protocole web HTTP, mais avec un ingr\u00e9dient suppl\u00e9mentaire dit TLS qui fonctionne \u00e0 peu pr\u00e8s comme suit : le client \u2014\u202fpar exemple le navigateur Web\u202f\u2014 contacte un serveur \u2014\u202fpar exemple Wikip\u00e9dia\u202f\u2014 et demande une connexion s\u00e9curis\u00e9e, en lui pr\u00e9sentant un certain nombre de m\u00e9thodes de chiffrement de la connexion ; le serveur r\u00e9pond en confirmant pouvoir dialoguer de mani\u00e8re s\u00e9curis\u00e9e et en choisissant dans cette liste une m\u00e9thode de chiffrement et surtout, en produisant un certificat garantissant qu'il est bien le serveur en question et pas un serveur pirate d\u00e9guis\u00e9. Ces certificats \u00e9lectroniques sont d\u00e9livr\u00e9s par une autorit\u00e9 tierce dans laquelle tout le monde a confiance (un peu comme un notaire dans la vie courante). Le certificat contient aussi une clef publique qui permet de crypter un message pour le rendre uniquement d\u00e9chiffrable par le serveur qui a \u00e9mis cette clef (gr\u00e2ce \u00e0 une cl\u00e9 priv\u00e9e, que seul le serveur d\u00e9tient) ; cela permet au client d'envoyer de mani\u00e8re secr\u00e8te une clef de chiffrement sym\u00e9trique qui permettra le chiffrement des \u00e9changes entre le serveur et le client. En bref : serveur et client se sont reconnus, ont choisi une mani\u00e8re de chiffrer la communication et se sont pass\u00e9s de mani\u00e8re chiffr\u00e9e une clef de chiffrement sym\u00e9trique pour dialoguer de mani\u00e8re secr\u00e8te. Les cookies vid\u00e9o cookies 10. A quoi peuvent servir les cookies ? 11. Peut on choisir les cookies que l'on souhaite utiliser ? 12. Pourquoi certaines requ\u00eates doivent \u00eatre chiffr\u00e9es ? M\u00e9thodes GET et POST Il y a deux mani\u00e8res de transmettre des donn\u00e9es d'un formulaire ou d'une barre de recherche, la m\u00e9thode GET et la m\u00e9thode POST. Vous allez essayer par vous m\u00eame en ouvrant cette page. 13. Une fois les donn\u00e9es du formulaire remplies, cliquer sur la m\u00e9thode GET et chercher o\u00f9 sont les donn\u00e9es du formulaire. Indice Elles sont visibles sur la page. 14. Une fois les donn\u00e9es du formulaire remplies, cliquer sur la m\u00e9thode POST et chercher o\u00f9 sont les donn\u00e9es du formulaire. Indice Utiliser l'outil d\u00e9veloppeur 15. Commenter la s\u00e9curisation des deux m\u00e9thodes.","title":"Protocole HTTP"},{"location":"IHM/php/TP_php.html","text":"TRANSMISSION DES DONNEES D'UN FOMRULAIRE Formulaire d'une page Web Introduction au php Comme d\u00e9j\u00e0 \u00e9voqu\u00e9 dans la partie consacr\u00e9e au mod\u00e8le client-serveur, un serveur Web (aussi appel\u00e9 serveur HTTP) permet de r\u00e9pondre \u00e0 une requ\u00eate HTTP effectu\u00e9e par un client (tr\u00e8s souvent un navigateur Web). Nous allons travailler avec le serveur Web qui est install\u00e9 sur votre ordinateur ou sur votre cl\u00e9 USB (UwAmp). Nous allons donc avoir une configuration un peu particuli\u00e8re puisque le client et le serveur vont se trouver sur la m\u00eame machine. Cette configuration est classique lorsque l'on d\u00e9sire effectuer de simples tests. Nous aurons donc 2 logiciels sur le m\u00eame ordinateur : le client (navigateur Web) et le serveur (serveur Web), ces 2 logiciels vont communiquer en utilisant le protocole HTTP. Le serveur Web que nous allons utiliser se nomme \"Apache\", c'est un des serveur Web le plus utilis\u00e9 au monde. Apache a d\u00e9j\u00e0 \u00e9t\u00e9 install\u00e9 et configur\u00e9 sur votre ordinateur. Nous allons commencer par un cas tr\u00e8s simple o\u00f9 le serveur va renvoyer au client une simple page HTML statique Dans le dossier www creer un dossier \"Formulaire\". Puis cr\u00e9er dans ce r\u00e9pertoire un fichier \"essai.html\". Copier le code ci-dessous dans le fichier cr\u00e9\u00e9. <!DOCTYPE html> <html> <head> <title>Utilisation d'Apache</title> <meta charset=\"UTF-8\" /> </head> <body> <p >Le serveur Apache fonctionne parfaitement;</p> </body> </html> Ex\u00e9cuter UwAmp puis d\u00e9marrer le serveur. Cliquer sur \"Navigateur www\" qui va ouvrir le dossier www dans le navigateur. Choisir le dossier Formlaire et v\u00e9rifier que la page ainsi cr\u00e9\u00e9e s'affiche. Une petite explication s'impose \u00e0 propos du \"localhost\" : comme nous l'avons d\u00e9j\u00e0 dit, notre serveur et notre client se trouvent sur la m\u00eame machine, avec le \"localhost\", on indique au navigateur que le serveur Web se trouve sur le m\u00eame ordinateur que lui (on parle de machine locale). Dans un cas normal, la barre d'adresse devrait \u00eatre renseign\u00e9e avec l'adresse du serveur Web. Pour l'instant, comme d\u00e9j\u00e0 dit plus haut, notre site est statique : la page reste identique, quelles que soient les actions des visiteurs. Pour avoir un site dynamique, nous allons ex\u00e9cuter, c\u00f4t\u00e9 serveur, un programme qui va cr\u00e9er de toute pi\u00e8ce une page HTML, cette page HTML sera ensuite envoy\u00e9e au client par l'interm\u00e9diaire du serveur Web. Il existe diff\u00e9rents langages de programmation qui permettent de g\u00e9n\u00e9rer des pages HTML \u00e0 la vol\u00e9e : Python, Java, Ruby... Dans notre cas, nous allons utiliser le PHP (PHP est un acronyme r\u00e9cursif puisqu'il signifie : PHP Hypertext Preprocessor). Le PHP est un langage tr\u00e8s utilis\u00e9 m\u00eame si dans le monde professionnel Java, Python, Ruby,... sont pr\u00e9f\u00e9r\u00e9s au PHP. Il est tr\u00e8s important de bien comprendre les processus mis en oeuvre : le client (le navigateur Web) envoie une requ\u00eate HTTP vers un serveur Web en fonction de la requ\u00eate re\u00e7ue le serveur \"fabrique\" une page HTML gr\u00e2ce \u00e0 l'ex\u00e9cution d'un programme \u00e9crit en PHP (ou en Python, Java...) le serveur Web envoie la page nouvellement cr\u00e9\u00e9e au client une fois re\u00e7ue, la page HTML est affich\u00e9e dans le navigateur Web Le langage PHP est d\u00e9j\u00e0 install\u00e9 sur l'ordinateur que vous utilisez actuellement, nous allons donc pouvoir \u00e9crire notre premier programme en PHP. Notez qu'il n'est pas question ici d'apprendre \u00e0 programmer en PHP, mais juste d'avoir un premier contact avec ce langage (et avec cette notion de Web dynamique) Dans le r\u00e9pertoire \"formulaire\", cr\u00e9ez un fichier \"heure.php\", toujours dans le r\u00e9pertoire \"formulaire\". Copiez le code PHP ci-dessous dans le fichier \"heure.php\" que vous venez de cr\u00e9er <?php $heure = date(\"H:i\"); echo '<h1>Bienvenue sur mon site</h1> <p>Il est '.$heure.'</p>'; ?> Afficher la page. Vous devriez avoir une page HTML qui vous donne l'heure, si vous actualisez la page, vous pourrez remarquer que bien \u00e9videmment l'heure \u00e9volue. Nous avons donc bien une page dynamique : le serveur PHP cr\u00e9e la page Web au moment o\u00f9 elle est demand\u00e9e. \u00c0 chaque fois que vous actualisez la page, la page HTML est g\u00e9n\u00e9r\u00e9e de nouveau. Vous aurez sans doute remarqu\u00e9 que l'extension \".html\" a \u00e9t\u00e9 remplac\u00e9e par \".php\". Au moment de la requ\u00eate, le programme contenu dans ce fichier a \u00e9t\u00e9 ex\u00e9cut\u00e9 et la page HTML a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9e. Dans les 2 cas, le fichier se nomme \"index\", pourquoi ? Par d\u00e9faut, le serveur prend en compte un fichier nomm\u00e9 \"index\" (\"index.php\" ou \"index.html\" selon les cas). Si vous voulez nommer votre fichier autrement, il faudra modifier ce que vous avez saisi dans la barre d'adresse de votre navigateur : si par exemple vous voulez nommer votre fichier \"toto.html\" (ou \"toto.php\"), il faudra saisir dans la barre d'adresse du navigateur \"localhost/toto.html\" (ou \"localhost/toto.php\"). Quelques remarques sur le programme PHP ci-dessus : \"$heure = date(\"H:i\");\", \"$heure\" est une variable (en PHP les variables commencent par un \"$\"), cette variable \"contient\" une cha\u00eene de caract\u00e8res qui correspond \u00e0 l'heure courante l'instruction \"echo\" permet d'afficher la cha\u00eene de caract\u00e8res qui suit l'instruction. Dans notre cas, la cha\u00eene de caract\u00e8res est \"<h1>Bienvenue sur mon site</h1> <p>Il est '.$heure.'</p>\" ce qui correspond \u00e0 du HTML \u00e0 l'exception de \"$heure\" qui permet d'afficher le contenu de la variable \"$heure\". La page Web g\u00e9n\u00e9r\u00e9e contiendra le code HTML et le contenu de la variable \"$heure\". Le point \".\" est, en PHP, l'op\u00e9rateur de concat\u00e9nation (alors que par exemple en Python, l'op\u00e9rateur de concat\u00e9nation est le \"+\") Si un client effectue une requ\u00eate \u00e0 18h23, le serveur enverra au client le code HTML ci-dessous : <h1>Bienvenue sur mon site</h1> <p>Il est 18h23</p> Gestion des formulaires Dans le dossier \"Formulaire\", cr\u00e9ez dans ce m\u00eame dossier un fichier \"index.html\" et un fichier \"trait_form.php\" Copiez le code HTML ci-dessous dans le fichier \"index.html\" que vous venez de cr\u00e9er : <!doctype html> <html lang=\"fr\"> <head> <meta charset=\"utf-8\"> <title>Le formulaire</title> </head> <body> <form action=\"trait_form.php\" method=\"post\"> <label>Nom</label> : <input type=\"text\" name=\"nom\" /> <label>Pr\u00e9nom</label> : <input type=\"text\" name=\"prenom\" /> <input type=\"submit\" value=\"Envoyer\" /> </form> </body> </html> Copiez le code PHP ci-dessous dans le fichier \"trait_form.php\" que vous venez de cr\u00e9er : <?php $n=$_POST['nom']; $p=$_POST['prenom']; echo \"<p>Bonjour \".$p.\" \".$n.\", j'esp\u00e8re que vous allez bien.</p>\"; ?> Lancer la page \"index.php\" dans le navigateur via le serveur. Une fois la page Web affich\u00e9e dans votre navigateur, remplissez le formulaire propos\u00e9 et validez en cliquant sur le bouton \"Envoyer\" Analysons le code HTML ci-dessus : Nous utilisons la balise \"form\" afin de mettre en place un formulaire sur notre page : <form action=\"trait_form.php\" method=\"post\"> Nous avons 2 attributs \"action\" et \"method\". L'attribut \"action=\"trait_form.php\"\" indique que le client enverra une requ\u00eate HTTP vers le serveur en cas de clic sur le bouton \"Envoyer\". Pour r\u00e9pondre \u00e0 cette requ\u00eate du client, le serveur devra ex\u00e9cuter le programme PHP contenu dans le fichier \"trait_form.php\". Le \"method=\"post\"\" nous indique que la m\u00e9thode utilis\u00e9e pour effectuer cette requ\u00eate HTTP est une m\u00e9thode \"POST\" Au niveau des 2 balises \"input\" permettant de saisir le nom et le pr\u00e9nom : <label>Nom</label> : <input type=\"text\" name=\"nom\" /> <label>Pr\u00e9nom</label> : <input type=\"text\" name=\"prenom\" /> L'attribut \"name\" nous int\u00e9resse particuli\u00e8rement dans ces 2 balises. Dans la premi\u00e8re balise nous avons \"name=\"nom\"\" et dans la deuxi\u00e8me balise, nous avons \"name=\"prenom\"\". Nous aurons l'occasion de revenir sur le r\u00f4le de cet attribut \"name\" ci-dessous. Int\u00e9ressons-nous maintenant au code contenu dans le fichier \"trait_form.php\" : La ligne $n=$_POST['nom']; permet d'attribuer \u00e0 la variable \"$n\" la cha\u00eene de caract\u00e8res qui a \u00e9t\u00e9 saisie par l'utilisateur dans le formulaire : balise \"input\" ayant l'attribut \"name=\"nom\"\". Le \"nom\" de \"$_POST['nom']\" est directement li\u00e9 au \"nom\" de l'attribut \"name=\"nom\"\". Le principe est le m\u00eame pour la variable \"$p\" : le \"prenom\" de \"$_POST['prenom']\" est directement li\u00e9 au \"prenom\" de l'attribut \"name=\"prenom\"\". Un \"\"$_POST['toto']\"\" contiendra la cha\u00eene de caract\u00e8res saisie par l'utilisateur dans le champ correspondant \u00e0 une balise \"input\" poss\u00e9dant un attribut \"name=\"toto\"\". La derni\u00e8re ligne : echo \"<p>Bonjour \".$p.\" \".$n.\", j'esp\u00e8re que vous allez bien.</p>\"; ne devrait pas vous poser de probl\u00e8me. Nous avons vu qu'un clic sur le bouton \"Envoyer\" d\u00e9clenche une requ\u00eate HTTP vers le serveur et que les informations saisies dans le formulaire sont envoy\u00e9es vers le serveur (puisqu'il est possible de r\u00e9cup\u00e9rer ces informations au niveau du code PHP : une fois de plus, le code PHP est uniquement ex\u00e9cut\u00e9 du c\u00f4t\u00e9 serveur). Mais comment ces informations transitent-elles entre le client et le serveur ? La r\u00e9ponse est simple : cela d\u00e9pend de la m\u00e9thode utilis\u00e9e par la requ\u00eate HTTP. Dans l'exemple ci-dessus, nous utilisons la m\u00e9thode \"POST\" (\"method=\"post\"\"). Une fois la page Web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que vous avez cliqu\u00e9 sur le bouton \"Envoyer\", observez attentivement la barre d'adresse de votre navigateur. Vous devriez obtenir quelque chose qui ressemble \u00e0 cela : Dans la barre d'adresse, rien de sp\u00e9cial \u00e0 signaler, on constate que le fichier \"trait_form.php\" a bien \u00e9t\u00e9 utilis\u00e9. Il est possible d'utiliser une m\u00e9thode HTTP \"GET\" \u00e0 la place de la m\u00e9thode \"POST\". Dans le fichier de formulaire, remplacer method=\"post\" par method=\"get\" puis dans le fichier de traitement remplacer POST par GET et refaire la m\u00eame chose que pr\u00e9c\u00e9dement. Observer l'URL et noter ce qui a chang\u00e9. Dans le cas de l'utilisation d'une m\u00e9thode \"POST\" les donn\u00e9es issues d'un formulaire sont envoy\u00e9es au serveur sans \u00eatre directement visibles, alors que dans le cas de l'utilisation d'une m\u00e9thode \"GET\", les donn\u00e9es sont visibles (et accessibles) puisqu'elles sont envoy\u00e9es par l'interm\u00e9diaire de l'url. Les donn\u00e9es envoy\u00e9es par l'interm\u00e9diaire d'une m\u00e9thode \"GET\" peuvent \u00eatre modifi\u00e9es directement dans l'url . Ouvrez votre navigateur Web et tapez dans la barre d'adresse \"localhost\". Une fois la page Web affich\u00e9e dans votre navigateur, Saisissez \"Sophie\" pour le pr\u00e9nom et \"Martin\" pour le nom puis validez en cliquant sur le bouton \"Envoyer\". Une fois que le message \"Bonjour Sophie Martin, j'esp\u00e8re que vous allez bien.\" apparait, modifier l'url : passez de \"localhost/trait_form.php?nom=Martin&prenom=Sophie\" \u00e0 \"localhost/trait_form.php?nom=Martin&prenom=Jean-Pierre\", validez votre modification en appuyant sur la touche \"Entr\u00e9e\". M\u00eame si dans notre cas cette op\u00e9ration de modification d'url est inoffensive, vous devez bien vous douter que dans des situations plus complexes, une telle modification pourrait entrainer des cons\u00e9quences plus probl\u00e9matiques (piratage). Il faut donc \u00e9viter d'utiliser la m\u00e9thode \"GET\" pour transmettre les donn\u00e9es issues d'un formulaire vers un serveur. Il est important de bien comprendre que la m\u00e9thode \"POST\" n'offre pas non plus une s\u00e9curit\u00e9 absolue puisque toute personne ayant un bagage technique minimum sera capable de lire les donn\u00e9es transmises \u00e0 l'aide de la m\u00e9thode \"POST\" en analysant la requ\u00eate HTTP, m\u00eame si ces donn\u00e9es ne sont pas directement visibles dans l'url. Seule l'utilisation du protocole s\u00e9curis\u00e9 HTTPS garantit un transfert s\u00e9curis\u00e9 des donn\u00e9es entre le client et le serveur (les donn\u00e9es sont chiffr\u00e9es et donc illisibles pour une personne ne poss\u00e9dant pas la cl\u00e9 de d\u00e9chiffrement). Pour ceux qui veulent aller plus loin dans l'utilisation du php je vous conseille l'excellent cours d'openclassroom .","title":"TP php"},{"location":"IHM/robotique/projets.html","text":"Projets Robotique \u2693\ufe0e Trafic routier \u2693\ufe0e Le but est de programmer plusieurs robots de fa\u00e7on \u00e0 simuler un trafic routier. Il faudra : - faire avancer les robots en suivant une route - d\u00e9finir des r\u00e8gles de circulation - \u00e9viter les collisions - cr\u00e9er les routes Aspirateur Robot \u2693\ufe0e Cr\u00e9er une interface sous scratch qui ressemble \u00e0 ceci : Objectif : Optimiser le programme du robot pour aspirer toutes les poussi\u00e8res le plus efficacement possible ! Etape 1 : D\u00e9placement du robot. Cr\u00e9er le robot et l'interface puis le programmer pour qu'il se d\u00e9pace et rebondisse sur les bords. Etape 2 : Modifier le programme pour qu'il \u00e9vite les meubles. S'il touche un meuble, il change de direction puis continue d'avancer. Etape 3 : Ramasser les poussi\u00e8res Ajouter des poussi\u00e8res et les faire disparaitre lorsque le robot les touche. Faire appara\u00eetre le mouton de poussi\u00e8re al\u00e9atoirement. Faire appara\u00eetre autant de moutons de poussi\u00e8re al\u00e9atoirement que l'utilisateur entre en d\u00e9but de simulation. Faire retourner le robot \u00e0 sa base quand il est plein. On simulera l'aspiration de 40 moutons de poussi\u00e8res puis se vide. Pour v\u00e9rifier qu'il est bien pass\u00e9 partout, on ajoutera une repr\u00e9sentation de la trajectoire . Am\u00e9liorations : Optimiser le programme pour l'aspiration la plus efficace possible de 40 moutons. Revenir \u00e0 sa base lorsqu'il est d\u00e9charg\u00e9 puis repartir une fois charg\u00e9. On simulera la d\u00e9charge au bout de 60s et la charge dure 10s.","title":"Projets"},{"location":"IHM/robotique/projets.html#projets-robotique","text":"","title":"Projets Robotique"},{"location":"IHM/robotique/projets.html#trafic-routier","text":"Le but est de programmer plusieurs robots de fa\u00e7on \u00e0 simuler un trafic routier. Il faudra : - faire avancer les robots en suivant une route - d\u00e9finir des r\u00e8gles de circulation - \u00e9viter les collisions - cr\u00e9er les routes","title":"Trafic routier"},{"location":"IHM/robotique/projets.html#aspirateur-robot","text":"Cr\u00e9er une interface sous scratch qui ressemble \u00e0 ceci : Objectif : Optimiser le programme du robot pour aspirer toutes les poussi\u00e8res le plus efficacement possible ! Etape 1 : D\u00e9placement du robot. Cr\u00e9er le robot et l'interface puis le programmer pour qu'il se d\u00e9pace et rebondisse sur les bords. Etape 2 : Modifier le programme pour qu'il \u00e9vite les meubles. S'il touche un meuble, il change de direction puis continue d'avancer. Etape 3 : Ramasser les poussi\u00e8res Ajouter des poussi\u00e8res et les faire disparaitre lorsque le robot les touche. Faire appara\u00eetre le mouton de poussi\u00e8re al\u00e9atoirement. Faire appara\u00eetre autant de moutons de poussi\u00e8re al\u00e9atoirement que l'utilisateur entre en d\u00e9but de simulation. Faire retourner le robot \u00e0 sa base quand il est plein. On simulera l'aspiration de 40 moutons de poussi\u00e8res puis se vide. Pour v\u00e9rifier qu'il est bien pass\u00e9 partout, on ajoutera une repr\u00e9sentation de la trajectoire . Am\u00e9liorations : Optimiser le programme pour l'aspiration la plus efficace possible de 40 moutons. Revenir \u00e0 sa base lorsqu'il est d\u00e9charg\u00e9 puis repartir une fois charg\u00e9. On simulera la d\u00e9charge au bout de 60s et la charge dure 10s.","title":"Aspirateur Robot"},{"location":"IHM/robotique/robotique.html","text":"Introduction \u00e0 la robotique \u2693\ufe0e Les robots \u2693\ufe0e Nous allons nous int\u00e9resser aux interfaces Homme-Machine (IHM). Une IHM permet \u00e0 un utilisateur d'interagir avec une machine, la souris et le clavier sont des exemples d'IHM, mais il en existe bien d'autres (par exemple les \u00e9crans tactiles des smartphones). Par \"machine\", on entend bien \u00e9videmment \"ordinateur\", comme dans le cas du duo clavier-souris, mais pas seulement. En effet, les \"machines\" peuvent aussi \u00eatre des objets connect\u00e9s, des syst\u00e8mes embarqu\u00e9s ou encore des robots. Nous allons justement nous int\u00e9resser ici \u00e0 cette derni\u00e8re cat\u00e9gorie : les robots. Qu'est-ce qu'un robot ? \u2693\ufe0e D'apr\u00e8s Wikip\u00e9dia : \u00ab Un robot est un dispositif m\u00e9catronique (alliant m\u00e9canique, \u00e9lectronique et informatique) accomplissant automatiquement soit des t\u00e2ches qui sont g\u00e9n\u00e9ralement dangereuses, p\u00e9nibles, r\u00e9p\u00e9titives ou impossibles pour les humains, soit des t\u00e2ches plus simples mais en les r\u00e9alisant mieux que ce que ferait un \u00eatre humain. \u00bb Le mot robot a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l'\u00e9crivain tch\u00e9coslovaque Karel \u010capek dans sa pi\u00e8ce de th\u00e9\u00e2tre \"Rossum's Universal Robots\" en 1920, il a pour origine le mot russe \"rabota\" qui signifie travail, corv\u00e9e. La notion de robot a \u00e9t\u00e9 ensuite d\u00e9velopp\u00e9e par l'\u00e9crivain am\u00e9ricano-russe Isaac Asimov dans son recueil de nouvelles \"Les Robots\" (1950). Les robots peuvent \u00eatre d\u00e9compos\u00e9s en trois \u00e9l\u00e9ments distincts : capteurs, unit\u00e9 de calcul et actionneurs. Les capteurs sont utilis\u00e9s pour \u00ab percevoir \u00bb le milieu environnant. Le robot utilise ces capteurs pour produire des donn\u00e9es sur sa localisation et sur ce qu'il fait. Diff\u00e9rents capteurs peuvent \u00eatre utilis\u00e9s pour d\u00e9tecter des conditions diff\u00e9rentes, y compris la luminosit\u00e9, la temp\u00e9rature, les collisions, les ultrasons, les ondes infrarouges ... la liste est longue ! Pensez aux diff\u00e9rents sens que poss\u00e8dent les humains et comment un robot peut les dupliquer. Les capteurs sont consid\u00e9r\u00e9s comme entr\u00e9es de donn\u00e9es, car les donn\u00e9es qu'ils produisent sont envoy\u00e9es vers le cerveau du robot. L'unit\u00e9 de calcul est constitu\u00e9e d'un ordinateur de bord que le robot utilise pour traiter les informations en provenance de ses capteurs. Cela peut \u00eatre aussi petit que quelques circuits int\u00e9gr\u00e9s ou aussi grand qu'un ordinateur personnel. La capacit\u00e9 de calcul requise par le robot d\u00e9pend du niveau de complexit\u00e9 des t\u00e2ches requises. La derni\u00e8re composante distincte d'un robot, ce sont ses actionneurs. Les \u00ab actionneurs \u00bb sont des \u00ab pi\u00e8ces qui font des choses \u00bb. Ceux-ci peuvent \u00eatre des moteurs dans les roues, ou des moteurs qui font bouger des bras. \u00c7a pourrait \u00e9galement \u00eatre des pistons hydrauliques ou des v\u00e9rins pneumatiques. Les actionneurs sont une forme de sortie, tout comme les lampes et les haut-parleurs. L'ordinateur du robot ordonne ces sorties de faire des t\u00e2ches diff\u00e9rentes. De mani\u00e8re g\u00e9n\u00e9rale, les capteurs fournissent des informations \u00e0 l'ordinateur qui prend des d\u00e9cisions et qui dit aux moteurs ce qu'ils doivent faire. Au niveau IHM, il est possible d'interagir avec le robot avec une simple t\u00e9l\u00e9commande : l'op\u00e9rateur donne des ordres au robot par l'interm\u00e9diaire de cette t\u00e9l\u00e9commande (\"aller \u00e0 gauche\", \"avancer de 3 m\u00e8tres\", \"prendre un objet avec une pince\"...), par exemple, les robots qui interviennent dans des milieux dangereux (centrale nucl\u00e9aire) sont t\u00e9l\u00e9command\u00e9s \u00e0 distance par des op\u00e9rateurs. Il est aussi possible d'interagir avec un robot non pas directement, mais en le programmant afin de lui donner une certaine autonomie. La programmation consiste \u00e0 donner au robot la marche \u00e0 suivre en fonction des situations rencontr\u00e9es : \"si le capteur X d\u00e9tecte quelque chose alors arr\u00eate les moteurs\". C'est plut\u00f4t cette voie que nous empruntons lors des activit\u00e9s exp\u00e9rimentales. Pourquoi avons nous besoin des Robots ? \u2693\ufe0e Les robots sont utilis\u00e9s dans la soci\u00e9t\u00e9 pour plusieurs raisons, chacun correspondant \u00e0 un besoin particulier. La question peut \u00e9galement \u00eatre pos\u00e9e ainsi : \u00ab Quels sont les avantages r\u00e9alis\u00e9s en utilisant des robots dans certaines situations ? \u00bb Les robots sont g\u00e9n\u00e9ralement utilis\u00e9s pour faire des t\u00e2ches ennuyeuses, sales ou dangereuses. Dans un cadre industriel, l'utilisation de robots permet d'effectuer des t\u00e2ches r\u00e9p\u00e9titives avec une grande pr\u00e9cision. Les robots peuvent g\u00e9n\u00e9ralement effectuer des t\u00e2ches simples beaucoup plus rapidement que les humains. Cela conduit \u00e0 une productivit\u00e9 accrue et \u00e0 un meilleur contr\u00f4le de la qualit\u00e9 des marchandises. Certains types de robots, en particulier ceux qui ont besoin de ramasser et de d\u00e9poser des objets fragiles, sont si pr\u00e9cis qu'ils peuvent manipuler des objets et effectuer des d\u00e9placements en s'arr\u00eatant \u00e0 l'endroit pr\u00e9vu avec une pr\u00e9cision correspondant \u00e0 l'\u00e9paisseur d'un cheveu. Les robots m\u00e9dicaux b\u00e9n\u00e9ficient de cette pr\u00e9cision et permettent aux m\u00e9decins d'op\u00e9rer sur des patients qui sont dans une autre ville ou \u00e0 l'autre bout du monde. Les robots d'exploration et les robots militaires sont con\u00e7us pour \u00e9loigner les personnes des situations dangereuses. Les op\u00e9rateurs du robot peuvent le conduire dans des zones dangereuses et utiliser les capteurs et les cam\u00e9ras \u00e0 bord pour recueillir des informations. Ceci est particuli\u00e8rement utile pour les missions de recherche et de sauvetage dans les zones sinistr\u00e9es, o\u00f9 il peut \u00eatre dangereux pour l'homme d'aller \u00e0 la recherche de survivants. Les robots de divertissement repr\u00e9sentent une autre cat\u00e9gorie et offrent beaucoup de plaisir et d'int\u00e9r\u00eat pour les gens. Les situations amusantes dans lesquelles sont impliqu\u00e9s les robots peuvent facilement \u00eatre vues \u00e0 la t\u00e9l\u00e9vision. La gamme de sophistication va des robots humano\u00efdes tr\u00e8s complexes comme ASIMO et NAO, aux jouets comme RoboSapien \u00a9 et le syst\u00e8me Mindstorms de LEGO \u00ae. Les robots m\u00e9nagers tels que le robot aspirateur Roomba \u00a9 de la soci\u00e9t\u00e9 iRobot ont \u00e9t\u00e9 les premiers \u00e0 \u00eatre commercialis\u00e9s comme robots domestiques avec les versions ult\u00e9rieures qui ont \u00e9t\u00e9 d\u00e9velopp\u00e9es pour laver les planchers et nettoyer les goutti\u00e8res. Le r\u00eave d'un robot majordome qui ramasse nos v\u00eatements et fait nos corv\u00e9es n'est pas loin. Les lois de la Robotique \u2693\ufe0e Les Trois lois de la robotique, formul\u00e9es par l'\u00e9crivain de science-fiction Isaac ASIMOV, sont des r\u00e8gles auxquelles tous les robots \u00ab positroniques \u00bb qui apparaissent dans ses romans doivent ob\u00e9ir. Expos\u00e9s pour la premi\u00e8re fois en 1942 ces lois sont : Un robot ne peut porter atteinte \u00e0 un \u00eatre humain, ni, en restant passif, permettre qu'un \u00eatre humain soit expos\u00e9 au danger ; Un robot doit ob\u00e9ir aux ordres qui lui sont donn\u00e9s par un \u00eatre humain, sauf si de tels ordres entrent en conflit avec la premi\u00e8re loi ; Un robot doit prot\u00e9ger son existence tant que cette protection n'entre pas en conflit avec la premi\u00e8re ou la deuxi\u00e8me loi. Isaac ASIMOV (1920-1992), \u00e9tait un \u00e9crivain am\u00e9ricano-russe (naturalis\u00e9 am\u00e9ricain en 1928) et un professeur de biochimie \u00e0 l'Universit\u00e9 de Boston, surtout connu pour ses oeuvres de science-fiction et ses livres de vulgarisation scientifique. Dans plusieurs de ces ouvrages il introduit les 3 lois de la robotique. Pour pallier aux insuffisances de ces lois dans certaines circonstances, l'\u00e9crivain Roger MacBride Alen \u00e0 \u00e9nonc\u00e9 les nouvelles lois de la robotique : Am\u00e9liorations Un robot ne peut porter atteinte \u00e0 un \u00eatre humain. Un robot doit coop\u00e9rer avec les \u00eatres humains, sauf si une telle coop\u00e9ration est en contradiction avec la Premi\u00e8re Loi. Un robot doit prot\u00e9ger son existence, si cette protection n'est pas en contradiction avec la Premi\u00e8re ou la Deuxi\u00e8me Loi. Un robot peut agir \u00e0 sa guise, hormis si ses actions sont en contradiction avec la Premi\u00e8re, la Deuxi\u00e8me ou la Troisi\u00e8me Loi. Questions R\u00e9pondre aux questions suivantes d'apr\u00e8s les documents 1. Qu'est-ce qu'une IHM ? 2. Au niveau IHM, quels sont les deux modes d'action permettant d'interagir avec un robot ? 3. Citez quelques applications des robots. 4. Quels \u00e9l\u00e9ments principaux constituent un robot ? 5. Qui a introduit les lois de la robotique ? Utilisation d'une carte programmable \u2693\ufe0e Installation et utilisation du logiciel MU \u2693\ufe0e Nous allons utiliser la carte programmable micro :bit. Elle se programme par blocs en utilisant l'\u00e9diteur en ligne makecode ou en python en utilisant le logiciel Mu t\u00e9l\u00e9chargeable ici . Elle contient un certain nombre de capteurs (temp\u00e9rature, acc\u00e9l\u00e9rom\u00e8tre, compas) ainsi qu'une matrice de LED permettant d'afficher des messages lumineux. Les modes \u2693\ufe0e L'\u00e9diteur Mu peut s'adapter \u00e0 plusieurs contextes en fonction des cartes qu'on lui connecte. Il peut m\u00eame \u00eatre utilis\u00e9 pour coder en Python directement sur l'ordinateur, m\u00eame si on utilise pas de carte microbit. Les fonctionnalit\u00e9s d'une carte \u00e0 l'autre peuvent varier donc l'\u00e9diteur se met dans un mode sp\u00e9cifique \u00e0 la carte qui est connect\u00e9e. Cliquer sur l'ic\u00f4ne L'\u00e9diteur permet de : taper nos programmes et les envoyer sur la carte pour s'ex\u00e9cuter transf\u00e9rer des fichiers vers et depuis la carte acc\u00e9der \u00e0 la console interactive MicroPython (REPL) tracer des graphiques v\u00e9rifier la syntaxe de nos programmes Compl\u00e9ment : Les fichiers se trouvent dans le dossier mu_code dans votre r\u00e9pertoire personnel. Cr\u00e9er son premier programme \u2693\ufe0e Cliquer sur puis commencer \u00e0 taper votre programme , comme par exemple : 1 2 3 from microbit import * display . show ( \"Hello World\" ) Flasher le programme apr\u00e8s avoir connect\u00e9 la carte. Ceci revient \u00e0 transf\u00e9rer le programme sur la carte et sera ex\u00e9cut\u00e9 automatiquement. Le REPL est l'\u00e9quivalent de la console shell dans Thonny. On peut \u00e9crire des lignes de commandes qui s\u2019ex\u00e9cuteront directement sur la carte sans flasher (on ne peut pas flasher si le REPL est ouvert). Tester par exemple : 1 display . show ( \"Hello world!!\" ) Simulateur \u2693\ufe0e La plupart des exemples donn\u00e9s ci-dessous pourront fonctionner dans le simulateur python se trouvant ici . Tapez votre code puis validez par CTRL-ENTREE. Si votre code commence par from microbit import * l'ex\u00e9cution du code provoquera l'affichage d'une carte microbit virtuelle qui ex\u00e9cutera votre programme comme sur une vraie carte. Ce simulateur vous permet d'acc\u00e9der \u00e9galement aux capteurs internes de la carte (acc\u00e9l\u00e9rom\u00e8tre, boussole, temp\u00e9rature...). Pour finir avec cette introduction, voici un sch\u00e9ma qu'il est toujours utile d'avoir sous la main car il pr\u00e9sente le brochage de la carte et l'affectation des entr\u00e9es-sorties. La matrice LED \u2693\ufe0e Allumer et eteindre l'\u00e9cran \u2693\ufe0e Les commandes display.on() et display.off() permettent d'allumer et d'\u00e9teindre l'\u00e9cran. \u00c9teindre l'\u00e9cran peut \u00eatre utile lorsqu'on veut r\u00e9cup\u00e9rer les broches d'entr\u00e9e sortie associ\u00e9es \u00e0 la matrice de LED (broches 3,4,5,7,9,10). Les commandes display.is_on() et display.is_off() permettent de tester l'\u00e9tat de l'\u00e9cran. Ne pas confondre ces commandes avec display.clear() qui se contente d'\u00e9teindre les pixels de l'\u00e9cran. Exemple : Tapez les lignes suivantes dans le REPL pour constater l'effet. Le rallumage de l'\u00e9cran remet ce dernier dans l'\u00e9tat ou il \u00e9tait. Il n'a donc pas \u00e9t\u00e9 effac\u00e9. 1 2 3 >>> display . show ( 1 ) >>> display . off () >>> display . on () Afficher du texte \u2693\ufe0e 1 2 3 4 5 from microbit import * while True : display . scroll ( 'Hello, World!' ) display . show ( Image . HEART ) sleep ( 2000 ) Afficher une image pr\u00e9enregistr\u00e9e \u2693\ufe0e dir(Image) permet d'acc\u00e9der \u00e0 la liste des images pr\u00e9enregistr\u00e9es 1 2 3 4 5 6 7 8 9 from microbit import * while True : display . show ( Image . HAPPY ) sleep ( 1000 ) display . show ( Image . DUCK ) sleep ( 1000 ) display . show ( Image . GHOST ) sleep ( 1000 ) Affichage d'une image personnalis\u00e9e : \u2693\ufe0e Chaque chiffre repr\u00e9sente un pixel dont l'allumage va de 0 \u00e0 9 : Chaque ligne entre guillemets repr\u00e9sente une ligne de la matrice. 1 2 3 4 5 6 7 from microbit import * display . show ( Image ( '00300:' '03630:' '36963:' '03630:' '00300' )) Afficher/Lire les pixels \u2693\ufe0e display.get_pixel() et display.set_pixel() display.get_pixel(x, y) retourne l'illumination du pixel situ\u00e9 \u00e0 la colonne x et la ligne y sous forme d'un entier de 0 (\u00e9teint) \u00e0 9 (compl\u00e8tement allum\u00e9) display.set_pixel(x, y, value) allume le pixel situ\u00e9 \u00e0 la colonne x et la ligne y avec une illumination value de 0 (\u00e9teint) \u00e0 9 (compl\u00e8tement allum\u00e9) Tester le programme de d\u00e9grad\u00e9 : 1 2 3 4 5 from microbit import * for x in range ( 5 ): for y in range ( 5 ): display . set_pixel ( x , y ,( x + y ) % 9 ) Arret Pour arr\u00eater l'animation lorsqu'elle est jou\u00e9e en t\u00e2che de fond, il suffit de faire un display.clear() . D\u00e9tection du seuil de luminosit\u00e9 \u2693\ufe0e 1 2 3 4 5 6 7 from microbit import * while True : if display . read_light_level () < 100 : display . show ( Image . HEART ) else : display . clear () sleep ( 2000 ) Les boutons \u2693\ufe0e Action lorsque l'on appuie sur un bouton : \u2693\ufe0e 1 2 3 4 5 6 7 from microbit import * while True : if button_a . is_pressed (): display . show ( Image . HAPPY ) if button_b . is_pressed (): display . show ( Image . SAD ) La m\u00e9thode pr\u00e9c\u00e9dente permet de faire une action une seule fois au moment o\u00f9 le bouton est press\u00e9. Si on remplace par button_a.was_pressed() l'image reste affich\u00e9e. boutons tactiles \u2693\ufe0e Les broches 0, 1 et 2 sont - en th\u00e9orie - tactiles. On peut d\u00e9tecter lorsqu'on les touche. Voici un exemple de code mettant en \u0153uvre la d\u00e9tection de toucher sir la broche pin0. Vous pourrez ainsi vous faire votre propre id\u00e9e par vous-m\u00eame. 1 2 3 4 5 6 from microbit import * while True : if pin0 . is_touched (): display . show ( Image . HAPPY ) else : display . show ( Image . SAD ) Les capteurs \u2693\ufe0e Capteur de temp\u00e9rature \u2693\ufe0e Lire la temp\u00e9rature La m\u00e9thode temperature() permet de r\u00e9cup\u00e9rer la valeur de temp\u00e9rature mesur\u00e9e par le capteur. Ce capteur est peu fiable, puisque la carte chauffe \u00e0 l'utilisation. 1 2 3 4 5 from microbit import * while True : if button_a . was_pressed (): display . scroll ( temperature ()) Tracer une courbe d'\u00e9volution de temp\u00e9rature dans mu Dans l'exemple ci-dessous, nous allons faire un relev\u00e9 de temp\u00e9rature toutes les secondes et afficher la temp\u00e9rature dans la zone graphique de Mu. 1 2 3 4 5 from microbit import * while True : print (( temperature (),)) sleep ( 1000 ) compl\u00e9ment : Vous pouvez bien s\u00fbr agir sur le param\u00e8tre de la fonction sleep pour afficher la temp\u00e9rature toutes les minutes ou toutes les heures. Acc\u00e9l\u00e9rom\u00e8tre \u2693\ufe0e Il existe de m\u00eame accelerometer.get_y() et accelerometer.get_z() selon les axes ci-dessous . 1 2 3 4 5 6 7 8 9 from microbit import * while True : reading = accelerometer . get_x () if reading > 20 : display . show ( \">\" ) elif reading < - 20 : display . show ( \"<\" ) else : display . show ( \"-\" ) D\u00e9tecter des gestes \u2693\ufe0e L'acc\u00e9l\u00e9rom\u00e8tre sait aussi interpr\u00e9ter les donn\u00e9es d'acc\u00e9l\u00e9ration en gestes pr\u00e9d\u00e9finis. Observez le code ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 from microbit import * while True : if accelerometer . was_gesture ( 'shake' ): display . show ( Image . SILLY ) sleep ( 2000 ) if accelerometer . was_gesture ( 'face up' ): display . show ( Image . HAPPY ) if accelerometer . was_gesture ( 'left' ): display . show ( '<' ) if accelerometer . was_gesture ( 'right' ): display . show ( '>' ) Gestes pr\u00e9d\u00e9finis \u2693\ufe0e Les gestes reconnus sont : up, down, left, right, face up, face down, freefall, 3g, 6g, 8g, shake Comme pour les boutons : - les gestes sont accumul\u00e9s dans une pile que l'on peut interroger par accelerometer.get_gestures() - on peut d\u00e9tecter si un geste (par exemple une secousse) a eu lieu par accelerometer.was_gesture(\"shake\") - on peut d\u00e9tecter si un geste est en cours par accelerometer.is_gesture(\"up\") La boussole \u2693\ufe0e La carte microbit est \u00e9quip\u00e9e d'un magn\u00e9tom\u00e8tre pouvant servir de boussole. Son utilisation comme pour le reste de ses capteurs est tr\u00e8s simple : on calibre le compas par compass.calibrate() puis on interroge le compas par compass.heading() . Essayez ces deux commandes dans le REPL. Pour savoir si le compas est d\u00e9j\u00e0 calibr\u00e9, utilisez la m\u00e9thode compass.is_calibrated() . Voici comment en quelques lignes r\u00e9aliser une boussole ! 1 2 3 4 5 from microbit import * while True : if button_a . was_pressed (): display . scroll ( str ( compass . heading ())) Autres fonctions du magn\u00e9tom\u00e8tre La m\u00e9thode compass.get_field_strength() renvoie la force du champ magn\u00e9tique. Cela permet de d\u00e9tecter la pr\u00e9sence d'un aimant. Cette force peut \u00eatre d\u00e9compos\u00e9e selon les axes x, y et z : compass.get_x() compass.get_y() et compass.get_z() . Le robot Maqueen \u2693\ufe0e Le robot Maqueen micro:bit est un robot tr\u00e8s bon march\u00e9 (autour de 20\u20ac) contr\u00f4l\u00e9 par la carte micro:bit. Il est petit, maniable et facile d'utilisation. Il poss\u00e8de beaucoup de fonctionnalit\u00e9s : - capteurs de suivi de ligne - LEDs - 4 LED RVB neopixel pour \u00e9clairage d'ambiance - capteur de distance ultrason - buzzer pour effets sonores - moteurs \u00e0 engrenage contr\u00f4lables s\u00e9par\u00e9ment par i 2c - alimentation par pack de 3 piles AAA - capteur infrarouge permettant au robot d'\u00eatre A l'origine, ce robot se programme par blocs. Il a \u00e9t\u00e9 d\u00e9velopp\u00e9 un module python permettant de le programmer facilement sous Python \u00e9galement. Installation du module pilote maqueen sous Python \u2693\ufe0e Si vous l'installez chez vous Pour installer le module sur Mu-editor : t\u00e9l\u00e9chargez le module maqueen.zip et d\u00e9compressez-le dans votre dossier mu_code. Dans Mu, cliquez sur l'ic\u00f4ne Si vous avez copi\u00e9 le fichier maqueen.py dans le dossier mu_code, vous devriez le voir appara\u00eetre cot\u00e9 ordinateur. glissez-le sur la carte micro:bit. Vous devriez obtenir quelque chose du genre : Si vous travaillez au lyc\u00e9e Vous n'avez pas acc\u00e8s au r\u00e9pertoire mu_code, nous allons donc faire pr\u00e9c\u00e9der tous les programmes ci-dessous par le contenu du fichier maqueen.py . Le copier et le coller dans l'\u00e9diteur Mu : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 #biblioth\u00e8que import microbit import time import machine import music class Maqueen (): def __init__ ( self , addr = 0x10 ): \"\"\"Initiaisation robot addr : adresse i2c. 0x10 par defaut\"\"\" self . addr = addr self . _vitesse = 0 # vitesse entre 0 et 100 def getVitesse ( self ): return self . _vitesse def setVitesse ( self , v ): self . _vitesse = v def moteurDroit ( self , v = None ): if v == None : v = self . _vitesse sens = 0 if v >= 0 else 1 # sens moteur vit = abs ( v ) * 255 // 100 # vitesse moteur 0..255 microbit . i2c . write ( self . addr , bytearray ([ 2 , sens , vit ])) def moteurGauche ( self , v = None ): if v == None : v = self . _vitesse sens = 0 if v >= 0 else 1 # sens moteur vit = abs ( v ) * 255 // 100 # vitesse moteur 0..255 microbit . i2c . write ( self . addr , bytearray ([ 0 , sens , vit ])) def avance ( self , v = None ): if v != None : self . _vitesse = v self . moteurDroit () self . moteurGauche () def recule ( self ): self . moteurDroit ( - self . _vitesse ) self . moteurGauche ( - self . _vitesse ) def stop ( self ): microbit . i2c . write ( self . addr , bytearray ([ 0 , 0 , 0 ])) microbit . sleep ( 1 ) microbit . i2c . write ( self . addr , bytearray ([ 2 , 0 , 0 ])) def distance ( self ): \"\"\"Calcule la distance \u00e0 l'obstacle en cm pin1 : Trig pin2 : Echo\"\"\" microbit . pin1 . write_digital ( 1 ) time . sleep_ms ( 10 ) microbit . pin1 . write_digital ( 0 ) microbit . pin2 . read_digital () t2 = machine . time_pulse_us ( microbit . pin2 , 1 ) d = 340 * t2 / 20000 return d def son_r2d2 ( self ): tune = [ \"A7:0\" , \"G7:0\" , \"E7:0\" , \"C7:0\" , \"D7:0\" , \"B7:0\" , \"F7:0\" , \"C8:0\" , \"A7:0\" , \"G7:0\" , \"E7:0\" , \"C7:0\" , \"D7:0\" , \"B7:0\" , \"F7:0\" , \"C8:0\" ] music . play ( tune ) def son_bip ( self ): for i in range ( 2 ): freq = 2000 while freq > 1000 : music . pitch ( int ( freq ), 10 ) freq *= 0.95 freq = 1000 while freq < 3000 : music . pitch ( int ( freq ), 10 ) freq *= 1.05 #fin biblioth\u00e8que #d\u00e9but du programme M\u00e9thodes fournies par le module \u2693\ufe0e avance(vitesse) : avance en ligne droite. vitesse est un nombre entre 0 et 100. Ce param\u00e8tre est optionnel. Si non sp\u00e9cifi\u00e9, c'est la derni\u00e8re vitesse sp\u00e9cifi\u00e9e lors de avance() ou setVitesse() qui sera utilis\u00e9e. recule() : fait marche arri\u00e8re. stop() : stoppe les moteurs moteurDroit(vitesse) : fait tourner la roue droite. moteurGauche(vitesse) : fait tourner la roue gauche. getVitesse() : renvoie la vitesse param\u00e9tr\u00e9e par setVitesse() ou avance() setVitesse() : change la valeur de la vitesse utilis\u00e9e par avance, recule, moteur distance() : renvoie la distance (en cm) lue par le capteur ultrason son_r2d2() et son_bip() : effets sonores Compl\u00e9ment : Acc\u00e8s aux autres fonctions du robot Sur le circuit imprim\u00e9 du robot figurent les adresses des broches pour les LEDs et capteurs de ligne. les voici pour rappel : - LEDs rouges : 8 (gauche) et 12 (droite). Ex : pin8.write_digital(1) - Neopixel : pin15 - capteurs de ligne : pin13 (gauche) et pin14 (droite). ex : pin13.read_digital() - infrarouge : pin16 1 2 3 4 5 6 7 8 9 # Exemple d'\u00e9clairage d'ambiance vert avec les neopixels from microbit import * from neopixel import NeoPixel np = NeoPixel ( pin15 , 4 ) for i in range ( 4 ): np [ i ] = ( 0 , 255 , 0 ) np . show () # np.clear() pour eteindre les neopixels Autre exemple, si une ligne est franchie, les LED 13 et 14 d\u00e9tecte du noir : 1 2 3 if pin14 . read_digital () == 0 and pin13 . read_digital () == 0 : # pin 14 est la diode de droite et 13 celle de gauche # detection de franchissement de ligne mq . son_bip () Utilisation du module \u2693\ufe0e Voici un exemple concret vous permettant de tester le module depuis le REPL afin de vous assurer que tout fonctionne. Je vous conseille de tester cela avec le robot sur le dos pour \u00e9viter qu'il parte avec un fil \u00e0 la patte ! Attention Ceci n'est valable que si vous avez install\u00e9 la biblioth\u00e8que chez vous 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 >>> from maqueen import Maqueen >>> mq = Maqueen () >>> mq . distance () # permet de v\u00e9rifier le module ultrason >>> mq . avance ( 10 ) >>> mq . stop () >>> mq . moteurDroit () >>> mq . moteurGauche ( - 10 ) >>> mq . stop () ``` ### Exemple de mini-projet : le robot \u00e9viteur d'obstacle Le principe est tr\u00e8s simple : On avance tant que le capteur de distance ne d\u00e9tecte pas d 'obstacles. Si un obstacle tr\u00e8s proche est d\u00e9tect\u00e9 , on recule pendant 2 secondes et on tourne pendant 1 seconde Si un obstacle est d\u00e9tect\u00e9 \u00e0 moins de 2 cm , on introduit de l 'al\u00e9atoire avec trois comportements possibles : on recule et on tourne, on tourne ou on tourne sur place. pour illustrer le fonctionnement du capteur de ligne , on \u00e9met un bip \u00e0 chaque fois qu 'une ligne est franchie (joint de carrelage par exemple). Voici le programme de d\u00e9monstration . Vous pouvez le modifier \u00e0 loisir pour changer le comportement du robot . ``` python from microbit import * from maqueen import Maqueen from random import randint mq = Maqueen () mq . setVitesse ( 50 ) while True : mq . avance () # LED rouge de devant droite # LED rouge de devant gauche d = mq . distance () if d < 5 or d > 2000 : # obstacle tr\u00e8s proche ... elif d < 20 : # obstacle proche ... if pin14 . read_digital () == 0 and pin13 . read_digital () == 0 : ...","title":"Robotique"},{"location":"IHM/robotique/robotique.html#introduction-a-la-robotique","text":"","title":"Introduction \u00e0 la robotique"},{"location":"IHM/robotique/robotique.html#les-robots","text":"Nous allons nous int\u00e9resser aux interfaces Homme-Machine (IHM). Une IHM permet \u00e0 un utilisateur d'interagir avec une machine, la souris et le clavier sont des exemples d'IHM, mais il en existe bien d'autres (par exemple les \u00e9crans tactiles des smartphones). Par \"machine\", on entend bien \u00e9videmment \"ordinateur\", comme dans le cas du duo clavier-souris, mais pas seulement. En effet, les \"machines\" peuvent aussi \u00eatre des objets connect\u00e9s, des syst\u00e8mes embarqu\u00e9s ou encore des robots. Nous allons justement nous int\u00e9resser ici \u00e0 cette derni\u00e8re cat\u00e9gorie : les robots.","title":"Les robots"},{"location":"IHM/robotique/robotique.html#quest-ce-quun-robot","text":"D'apr\u00e8s Wikip\u00e9dia : \u00ab Un robot est un dispositif m\u00e9catronique (alliant m\u00e9canique, \u00e9lectronique et informatique) accomplissant automatiquement soit des t\u00e2ches qui sont g\u00e9n\u00e9ralement dangereuses, p\u00e9nibles, r\u00e9p\u00e9titives ou impossibles pour les humains, soit des t\u00e2ches plus simples mais en les r\u00e9alisant mieux que ce que ferait un \u00eatre humain. \u00bb Le mot robot a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l'\u00e9crivain tch\u00e9coslovaque Karel \u010capek dans sa pi\u00e8ce de th\u00e9\u00e2tre \"Rossum's Universal Robots\" en 1920, il a pour origine le mot russe \"rabota\" qui signifie travail, corv\u00e9e. La notion de robot a \u00e9t\u00e9 ensuite d\u00e9velopp\u00e9e par l'\u00e9crivain am\u00e9ricano-russe Isaac Asimov dans son recueil de nouvelles \"Les Robots\" (1950). Les robots peuvent \u00eatre d\u00e9compos\u00e9s en trois \u00e9l\u00e9ments distincts : capteurs, unit\u00e9 de calcul et actionneurs. Les capteurs sont utilis\u00e9s pour \u00ab percevoir \u00bb le milieu environnant. Le robot utilise ces capteurs pour produire des donn\u00e9es sur sa localisation et sur ce qu'il fait. Diff\u00e9rents capteurs peuvent \u00eatre utilis\u00e9s pour d\u00e9tecter des conditions diff\u00e9rentes, y compris la luminosit\u00e9, la temp\u00e9rature, les collisions, les ultrasons, les ondes infrarouges ... la liste est longue ! Pensez aux diff\u00e9rents sens que poss\u00e8dent les humains et comment un robot peut les dupliquer. Les capteurs sont consid\u00e9r\u00e9s comme entr\u00e9es de donn\u00e9es, car les donn\u00e9es qu'ils produisent sont envoy\u00e9es vers le cerveau du robot. L'unit\u00e9 de calcul est constitu\u00e9e d'un ordinateur de bord que le robot utilise pour traiter les informations en provenance de ses capteurs. Cela peut \u00eatre aussi petit que quelques circuits int\u00e9gr\u00e9s ou aussi grand qu'un ordinateur personnel. La capacit\u00e9 de calcul requise par le robot d\u00e9pend du niveau de complexit\u00e9 des t\u00e2ches requises. La derni\u00e8re composante distincte d'un robot, ce sont ses actionneurs. Les \u00ab actionneurs \u00bb sont des \u00ab pi\u00e8ces qui font des choses \u00bb. Ceux-ci peuvent \u00eatre des moteurs dans les roues, ou des moteurs qui font bouger des bras. \u00c7a pourrait \u00e9galement \u00eatre des pistons hydrauliques ou des v\u00e9rins pneumatiques. Les actionneurs sont une forme de sortie, tout comme les lampes et les haut-parleurs. L'ordinateur du robot ordonne ces sorties de faire des t\u00e2ches diff\u00e9rentes. De mani\u00e8re g\u00e9n\u00e9rale, les capteurs fournissent des informations \u00e0 l'ordinateur qui prend des d\u00e9cisions et qui dit aux moteurs ce qu'ils doivent faire. Au niveau IHM, il est possible d'interagir avec le robot avec une simple t\u00e9l\u00e9commande : l'op\u00e9rateur donne des ordres au robot par l'interm\u00e9diaire de cette t\u00e9l\u00e9commande (\"aller \u00e0 gauche\", \"avancer de 3 m\u00e8tres\", \"prendre un objet avec une pince\"...), par exemple, les robots qui interviennent dans des milieux dangereux (centrale nucl\u00e9aire) sont t\u00e9l\u00e9command\u00e9s \u00e0 distance par des op\u00e9rateurs. Il est aussi possible d'interagir avec un robot non pas directement, mais en le programmant afin de lui donner une certaine autonomie. La programmation consiste \u00e0 donner au robot la marche \u00e0 suivre en fonction des situations rencontr\u00e9es : \"si le capteur X d\u00e9tecte quelque chose alors arr\u00eate les moteurs\". C'est plut\u00f4t cette voie que nous empruntons lors des activit\u00e9s exp\u00e9rimentales.","title":"Qu'est-ce qu'un robot ?"},{"location":"IHM/robotique/robotique.html#pourquoi-avons-nous-besoin-des-robots","text":"Les robots sont utilis\u00e9s dans la soci\u00e9t\u00e9 pour plusieurs raisons, chacun correspondant \u00e0 un besoin particulier. La question peut \u00e9galement \u00eatre pos\u00e9e ainsi : \u00ab Quels sont les avantages r\u00e9alis\u00e9s en utilisant des robots dans certaines situations ? \u00bb Les robots sont g\u00e9n\u00e9ralement utilis\u00e9s pour faire des t\u00e2ches ennuyeuses, sales ou dangereuses. Dans un cadre industriel, l'utilisation de robots permet d'effectuer des t\u00e2ches r\u00e9p\u00e9titives avec une grande pr\u00e9cision. Les robots peuvent g\u00e9n\u00e9ralement effectuer des t\u00e2ches simples beaucoup plus rapidement que les humains. Cela conduit \u00e0 une productivit\u00e9 accrue et \u00e0 un meilleur contr\u00f4le de la qualit\u00e9 des marchandises. Certains types de robots, en particulier ceux qui ont besoin de ramasser et de d\u00e9poser des objets fragiles, sont si pr\u00e9cis qu'ils peuvent manipuler des objets et effectuer des d\u00e9placements en s'arr\u00eatant \u00e0 l'endroit pr\u00e9vu avec une pr\u00e9cision correspondant \u00e0 l'\u00e9paisseur d'un cheveu. Les robots m\u00e9dicaux b\u00e9n\u00e9ficient de cette pr\u00e9cision et permettent aux m\u00e9decins d'op\u00e9rer sur des patients qui sont dans une autre ville ou \u00e0 l'autre bout du monde. Les robots d'exploration et les robots militaires sont con\u00e7us pour \u00e9loigner les personnes des situations dangereuses. Les op\u00e9rateurs du robot peuvent le conduire dans des zones dangereuses et utiliser les capteurs et les cam\u00e9ras \u00e0 bord pour recueillir des informations. Ceci est particuli\u00e8rement utile pour les missions de recherche et de sauvetage dans les zones sinistr\u00e9es, o\u00f9 il peut \u00eatre dangereux pour l'homme d'aller \u00e0 la recherche de survivants. Les robots de divertissement repr\u00e9sentent une autre cat\u00e9gorie et offrent beaucoup de plaisir et d'int\u00e9r\u00eat pour les gens. Les situations amusantes dans lesquelles sont impliqu\u00e9s les robots peuvent facilement \u00eatre vues \u00e0 la t\u00e9l\u00e9vision. La gamme de sophistication va des robots humano\u00efdes tr\u00e8s complexes comme ASIMO et NAO, aux jouets comme RoboSapien \u00a9 et le syst\u00e8me Mindstorms de LEGO \u00ae. Les robots m\u00e9nagers tels que le robot aspirateur Roomba \u00a9 de la soci\u00e9t\u00e9 iRobot ont \u00e9t\u00e9 les premiers \u00e0 \u00eatre commercialis\u00e9s comme robots domestiques avec les versions ult\u00e9rieures qui ont \u00e9t\u00e9 d\u00e9velopp\u00e9es pour laver les planchers et nettoyer les goutti\u00e8res. Le r\u00eave d'un robot majordome qui ramasse nos v\u00eatements et fait nos corv\u00e9es n'est pas loin.","title":"Pourquoi avons nous besoin des Robots ?"},{"location":"IHM/robotique/robotique.html#les-lois-de-la-robotique","text":"Les Trois lois de la robotique, formul\u00e9es par l'\u00e9crivain de science-fiction Isaac ASIMOV, sont des r\u00e8gles auxquelles tous les robots \u00ab positroniques \u00bb qui apparaissent dans ses romans doivent ob\u00e9ir. Expos\u00e9s pour la premi\u00e8re fois en 1942 ces lois sont : Un robot ne peut porter atteinte \u00e0 un \u00eatre humain, ni, en restant passif, permettre qu'un \u00eatre humain soit expos\u00e9 au danger ; Un robot doit ob\u00e9ir aux ordres qui lui sont donn\u00e9s par un \u00eatre humain, sauf si de tels ordres entrent en conflit avec la premi\u00e8re loi ; Un robot doit prot\u00e9ger son existence tant que cette protection n'entre pas en conflit avec la premi\u00e8re ou la deuxi\u00e8me loi. Isaac ASIMOV (1920-1992), \u00e9tait un \u00e9crivain am\u00e9ricano-russe (naturalis\u00e9 am\u00e9ricain en 1928) et un professeur de biochimie \u00e0 l'Universit\u00e9 de Boston, surtout connu pour ses oeuvres de science-fiction et ses livres de vulgarisation scientifique. Dans plusieurs de ces ouvrages il introduit les 3 lois de la robotique. Pour pallier aux insuffisances de ces lois dans certaines circonstances, l'\u00e9crivain Roger MacBride Alen \u00e0 \u00e9nonc\u00e9 les nouvelles lois de la robotique : Am\u00e9liorations Un robot ne peut porter atteinte \u00e0 un \u00eatre humain. Un robot doit coop\u00e9rer avec les \u00eatres humains, sauf si une telle coop\u00e9ration est en contradiction avec la Premi\u00e8re Loi. Un robot doit prot\u00e9ger son existence, si cette protection n'est pas en contradiction avec la Premi\u00e8re ou la Deuxi\u00e8me Loi. Un robot peut agir \u00e0 sa guise, hormis si ses actions sont en contradiction avec la Premi\u00e8re, la Deuxi\u00e8me ou la Troisi\u00e8me Loi. Questions R\u00e9pondre aux questions suivantes d'apr\u00e8s les documents 1. Qu'est-ce qu'une IHM ? 2. Au niveau IHM, quels sont les deux modes d'action permettant d'interagir avec un robot ? 3. Citez quelques applications des robots. 4. Quels \u00e9l\u00e9ments principaux constituent un robot ? 5. Qui a introduit les lois de la robotique ?","title":"Les lois de la Robotique"},{"location":"IHM/robotique/robotique.html#utilisation-dune-carte-programmable","text":"","title":"Utilisation d'une carte programmable"},{"location":"IHM/robotique/robotique.html#installation-et-utilisation-du-logiciel-mu","text":"Nous allons utiliser la carte programmable micro :bit. Elle se programme par blocs en utilisant l'\u00e9diteur en ligne makecode ou en python en utilisant le logiciel Mu t\u00e9l\u00e9chargeable ici . Elle contient un certain nombre de capteurs (temp\u00e9rature, acc\u00e9l\u00e9rom\u00e8tre, compas) ainsi qu'une matrice de LED permettant d'afficher des messages lumineux.","title":"Installation et utilisation du logiciel MU"},{"location":"IHM/robotique/robotique.html#les-modes","text":"L'\u00e9diteur Mu peut s'adapter \u00e0 plusieurs contextes en fonction des cartes qu'on lui connecte. Il peut m\u00eame \u00eatre utilis\u00e9 pour coder en Python directement sur l'ordinateur, m\u00eame si on utilise pas de carte microbit. Les fonctionnalit\u00e9s d'une carte \u00e0 l'autre peuvent varier donc l'\u00e9diteur se met dans un mode sp\u00e9cifique \u00e0 la carte qui est connect\u00e9e. Cliquer sur l'ic\u00f4ne L'\u00e9diteur permet de : taper nos programmes et les envoyer sur la carte pour s'ex\u00e9cuter transf\u00e9rer des fichiers vers et depuis la carte acc\u00e9der \u00e0 la console interactive MicroPython (REPL) tracer des graphiques v\u00e9rifier la syntaxe de nos programmes Compl\u00e9ment : Les fichiers se trouvent dans le dossier mu_code dans votre r\u00e9pertoire personnel.","title":"Les modes"},{"location":"IHM/robotique/robotique.html#creer-son-premier-programme","text":"Cliquer sur puis commencer \u00e0 taper votre programme , comme par exemple : 1 2 3 from microbit import * display . show ( \"Hello World\" ) Flasher le programme apr\u00e8s avoir connect\u00e9 la carte. Ceci revient \u00e0 transf\u00e9rer le programme sur la carte et sera ex\u00e9cut\u00e9 automatiquement. Le REPL est l'\u00e9quivalent de la console shell dans Thonny. On peut \u00e9crire des lignes de commandes qui s\u2019ex\u00e9cuteront directement sur la carte sans flasher (on ne peut pas flasher si le REPL est ouvert). Tester par exemple : 1 display . show ( \"Hello world!!\" )","title":"Cr\u00e9er son premier programme"},{"location":"IHM/robotique/robotique.html#simulateur","text":"La plupart des exemples donn\u00e9s ci-dessous pourront fonctionner dans le simulateur python se trouvant ici . Tapez votre code puis validez par CTRL-ENTREE. Si votre code commence par from microbit import * l'ex\u00e9cution du code provoquera l'affichage d'une carte microbit virtuelle qui ex\u00e9cutera votre programme comme sur une vraie carte. Ce simulateur vous permet d'acc\u00e9der \u00e9galement aux capteurs internes de la carte (acc\u00e9l\u00e9rom\u00e8tre, boussole, temp\u00e9rature...). Pour finir avec cette introduction, voici un sch\u00e9ma qu'il est toujours utile d'avoir sous la main car il pr\u00e9sente le brochage de la carte et l'affectation des entr\u00e9es-sorties.","title":"Simulateur"},{"location":"IHM/robotique/robotique.html#la-matrice-led","text":"","title":"La matrice LED"},{"location":"IHM/robotique/robotique.html#allumer-et-eteindre-lecran","text":"Les commandes display.on() et display.off() permettent d'allumer et d'\u00e9teindre l'\u00e9cran. \u00c9teindre l'\u00e9cran peut \u00eatre utile lorsqu'on veut r\u00e9cup\u00e9rer les broches d'entr\u00e9e sortie associ\u00e9es \u00e0 la matrice de LED (broches 3,4,5,7,9,10). Les commandes display.is_on() et display.is_off() permettent de tester l'\u00e9tat de l'\u00e9cran. Ne pas confondre ces commandes avec display.clear() qui se contente d'\u00e9teindre les pixels de l'\u00e9cran. Exemple : Tapez les lignes suivantes dans le REPL pour constater l'effet. Le rallumage de l'\u00e9cran remet ce dernier dans l'\u00e9tat ou il \u00e9tait. Il n'a donc pas \u00e9t\u00e9 effac\u00e9. 1 2 3 >>> display . show ( 1 ) >>> display . off () >>> display . on ()","title":"Allumer et eteindre l'\u00e9cran"},{"location":"IHM/robotique/robotique.html#afficher-du-texte","text":"1 2 3 4 5 from microbit import * while True : display . scroll ( 'Hello, World!' ) display . show ( Image . HEART ) sleep ( 2000 )","title":"Afficher du texte"},{"location":"IHM/robotique/robotique.html#afficher-une-image-preenregistree","text":"dir(Image) permet d'acc\u00e9der \u00e0 la liste des images pr\u00e9enregistr\u00e9es 1 2 3 4 5 6 7 8 9 from microbit import * while True : display . show ( Image . HAPPY ) sleep ( 1000 ) display . show ( Image . DUCK ) sleep ( 1000 ) display . show ( Image . GHOST ) sleep ( 1000 )","title":"Afficher une image pr\u00e9enregistr\u00e9e"},{"location":"IHM/robotique/robotique.html#affichage-dune-image-personnalisee","text":"Chaque chiffre repr\u00e9sente un pixel dont l'allumage va de 0 \u00e0 9 : Chaque ligne entre guillemets repr\u00e9sente une ligne de la matrice. 1 2 3 4 5 6 7 from microbit import * display . show ( Image ( '00300:' '03630:' '36963:' '03630:' '00300' ))","title":"Affichage d'une image personnalis\u00e9e :"},{"location":"IHM/robotique/robotique.html#afficherlire-les-pixels","text":"display.get_pixel() et display.set_pixel() display.get_pixel(x, y) retourne l'illumination du pixel situ\u00e9 \u00e0 la colonne x et la ligne y sous forme d'un entier de 0 (\u00e9teint) \u00e0 9 (compl\u00e8tement allum\u00e9) display.set_pixel(x, y, value) allume le pixel situ\u00e9 \u00e0 la colonne x et la ligne y avec une illumination value de 0 (\u00e9teint) \u00e0 9 (compl\u00e8tement allum\u00e9) Tester le programme de d\u00e9grad\u00e9 : 1 2 3 4 5 from microbit import * for x in range ( 5 ): for y in range ( 5 ): display . set_pixel ( x , y ,( x + y ) % 9 ) Arret Pour arr\u00eater l'animation lorsqu'elle est jou\u00e9e en t\u00e2che de fond, il suffit de faire un display.clear() .","title":"Afficher/Lire les pixels"},{"location":"IHM/robotique/robotique.html#detection-du-seuil-de-luminosite","text":"1 2 3 4 5 6 7 from microbit import * while True : if display . read_light_level () < 100 : display . show ( Image . HEART ) else : display . clear () sleep ( 2000 )","title":"D\u00e9tection du seuil de luminosit\u00e9"},{"location":"IHM/robotique/robotique.html#les-boutons","text":"","title":"Les boutons"},{"location":"IHM/robotique/robotique.html#action-lorsque-lon-appuie-sur-un-bouton","text":"1 2 3 4 5 6 7 from microbit import * while True : if button_a . is_pressed (): display . show ( Image . HAPPY ) if button_b . is_pressed (): display . show ( Image . SAD ) La m\u00e9thode pr\u00e9c\u00e9dente permet de faire une action une seule fois au moment o\u00f9 le bouton est press\u00e9. Si on remplace par button_a.was_pressed() l'image reste affich\u00e9e.","title":"Action lorsque l'on appuie sur un bouton :"},{"location":"IHM/robotique/robotique.html#boutons-tactiles","text":"Les broches 0, 1 et 2 sont - en th\u00e9orie - tactiles. On peut d\u00e9tecter lorsqu'on les touche. Voici un exemple de code mettant en \u0153uvre la d\u00e9tection de toucher sir la broche pin0. Vous pourrez ainsi vous faire votre propre id\u00e9e par vous-m\u00eame. 1 2 3 4 5 6 from microbit import * while True : if pin0 . is_touched (): display . show ( Image . HAPPY ) else : display . show ( Image . SAD )","title":"boutons tactiles"},{"location":"IHM/robotique/robotique.html#les-capteurs","text":"","title":"Les capteurs"},{"location":"IHM/robotique/robotique.html#capteur-de-temperature","text":"Lire la temp\u00e9rature La m\u00e9thode temperature() permet de r\u00e9cup\u00e9rer la valeur de temp\u00e9rature mesur\u00e9e par le capteur. Ce capteur est peu fiable, puisque la carte chauffe \u00e0 l'utilisation. 1 2 3 4 5 from microbit import * while True : if button_a . was_pressed (): display . scroll ( temperature ()) Tracer une courbe d'\u00e9volution de temp\u00e9rature dans mu Dans l'exemple ci-dessous, nous allons faire un relev\u00e9 de temp\u00e9rature toutes les secondes et afficher la temp\u00e9rature dans la zone graphique de Mu. 1 2 3 4 5 from microbit import * while True : print (( temperature (),)) sleep ( 1000 ) compl\u00e9ment : Vous pouvez bien s\u00fbr agir sur le param\u00e8tre de la fonction sleep pour afficher la temp\u00e9rature toutes les minutes ou toutes les heures.","title":"Capteur de temp\u00e9rature"},{"location":"IHM/robotique/robotique.html#accelerometre","text":"Il existe de m\u00eame accelerometer.get_y() et accelerometer.get_z() selon les axes ci-dessous . 1 2 3 4 5 6 7 8 9 from microbit import * while True : reading = accelerometer . get_x () if reading > 20 : display . show ( \">\" ) elif reading < - 20 : display . show ( \"<\" ) else : display . show ( \"-\" )","title":"Acc\u00e9l\u00e9rom\u00e8tre"},{"location":"IHM/robotique/robotique.html#detecter-des-gestes","text":"L'acc\u00e9l\u00e9rom\u00e8tre sait aussi interpr\u00e9ter les donn\u00e9es d'acc\u00e9l\u00e9ration en gestes pr\u00e9d\u00e9finis. Observez le code ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 from microbit import * while True : if accelerometer . was_gesture ( 'shake' ): display . show ( Image . SILLY ) sleep ( 2000 ) if accelerometer . was_gesture ( 'face up' ): display . show ( Image . HAPPY ) if accelerometer . was_gesture ( 'left' ): display . show ( '<' ) if accelerometer . was_gesture ( 'right' ): display . show ( '>' )","title":"D\u00e9tecter des gestes"},{"location":"IHM/robotique/robotique.html#gestes-predefinis","text":"Les gestes reconnus sont : up, down, left, right, face up, face down, freefall, 3g, 6g, 8g, shake Comme pour les boutons : - les gestes sont accumul\u00e9s dans une pile que l'on peut interroger par accelerometer.get_gestures() - on peut d\u00e9tecter si un geste (par exemple une secousse) a eu lieu par accelerometer.was_gesture(\"shake\") - on peut d\u00e9tecter si un geste est en cours par accelerometer.is_gesture(\"up\")","title":"Gestes pr\u00e9d\u00e9finis"},{"location":"IHM/robotique/robotique.html#la-boussole","text":"La carte microbit est \u00e9quip\u00e9e d'un magn\u00e9tom\u00e8tre pouvant servir de boussole. Son utilisation comme pour le reste de ses capteurs est tr\u00e8s simple : on calibre le compas par compass.calibrate() puis on interroge le compas par compass.heading() . Essayez ces deux commandes dans le REPL. Pour savoir si le compas est d\u00e9j\u00e0 calibr\u00e9, utilisez la m\u00e9thode compass.is_calibrated() . Voici comment en quelques lignes r\u00e9aliser une boussole ! 1 2 3 4 5 from microbit import * while True : if button_a . was_pressed (): display . scroll ( str ( compass . heading ())) Autres fonctions du magn\u00e9tom\u00e8tre La m\u00e9thode compass.get_field_strength() renvoie la force du champ magn\u00e9tique. Cela permet de d\u00e9tecter la pr\u00e9sence d'un aimant. Cette force peut \u00eatre d\u00e9compos\u00e9e selon les axes x, y et z : compass.get_x() compass.get_y() et compass.get_z() .","title":"La boussole"},{"location":"IHM/robotique/robotique.html#le-robot-maqueen","text":"Le robot Maqueen micro:bit est un robot tr\u00e8s bon march\u00e9 (autour de 20\u20ac) contr\u00f4l\u00e9 par la carte micro:bit. Il est petit, maniable et facile d'utilisation. Il poss\u00e8de beaucoup de fonctionnalit\u00e9s : - capteurs de suivi de ligne - LEDs - 4 LED RVB neopixel pour \u00e9clairage d'ambiance - capteur de distance ultrason - buzzer pour effets sonores - moteurs \u00e0 engrenage contr\u00f4lables s\u00e9par\u00e9ment par i 2c - alimentation par pack de 3 piles AAA - capteur infrarouge permettant au robot d'\u00eatre A l'origine, ce robot se programme par blocs. Il a \u00e9t\u00e9 d\u00e9velopp\u00e9 un module python permettant de le programmer facilement sous Python \u00e9galement.","title":"Le robot Maqueen"},{"location":"IHM/robotique/robotique.html#installation-du-module-pilote-maqueen-sous-python","text":"Si vous l'installez chez vous Pour installer le module sur Mu-editor : t\u00e9l\u00e9chargez le module maqueen.zip et d\u00e9compressez-le dans votre dossier mu_code. Dans Mu, cliquez sur l'ic\u00f4ne Si vous avez copi\u00e9 le fichier maqueen.py dans le dossier mu_code, vous devriez le voir appara\u00eetre cot\u00e9 ordinateur. glissez-le sur la carte micro:bit. Vous devriez obtenir quelque chose du genre : Si vous travaillez au lyc\u00e9e Vous n'avez pas acc\u00e8s au r\u00e9pertoire mu_code, nous allons donc faire pr\u00e9c\u00e9der tous les programmes ci-dessous par le contenu du fichier maqueen.py . Le copier et le coller dans l'\u00e9diteur Mu : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 #biblioth\u00e8que import microbit import time import machine import music class Maqueen (): def __init__ ( self , addr = 0x10 ): \"\"\"Initiaisation robot addr : adresse i2c. 0x10 par defaut\"\"\" self . addr = addr self . _vitesse = 0 # vitesse entre 0 et 100 def getVitesse ( self ): return self . _vitesse def setVitesse ( self , v ): self . _vitesse = v def moteurDroit ( self , v = None ): if v == None : v = self . _vitesse sens = 0 if v >= 0 else 1 # sens moteur vit = abs ( v ) * 255 // 100 # vitesse moteur 0..255 microbit . i2c . write ( self . addr , bytearray ([ 2 , sens , vit ])) def moteurGauche ( self , v = None ): if v == None : v = self . _vitesse sens = 0 if v >= 0 else 1 # sens moteur vit = abs ( v ) * 255 // 100 # vitesse moteur 0..255 microbit . i2c . write ( self . addr , bytearray ([ 0 , sens , vit ])) def avance ( self , v = None ): if v != None : self . _vitesse = v self . moteurDroit () self . moteurGauche () def recule ( self ): self . moteurDroit ( - self . _vitesse ) self . moteurGauche ( - self . _vitesse ) def stop ( self ): microbit . i2c . write ( self . addr , bytearray ([ 0 , 0 , 0 ])) microbit . sleep ( 1 ) microbit . i2c . write ( self . addr , bytearray ([ 2 , 0 , 0 ])) def distance ( self ): \"\"\"Calcule la distance \u00e0 l'obstacle en cm pin1 : Trig pin2 : Echo\"\"\" microbit . pin1 . write_digital ( 1 ) time . sleep_ms ( 10 ) microbit . pin1 . write_digital ( 0 ) microbit . pin2 . read_digital () t2 = machine . time_pulse_us ( microbit . pin2 , 1 ) d = 340 * t2 / 20000 return d def son_r2d2 ( self ): tune = [ \"A7:0\" , \"G7:0\" , \"E7:0\" , \"C7:0\" , \"D7:0\" , \"B7:0\" , \"F7:0\" , \"C8:0\" , \"A7:0\" , \"G7:0\" , \"E7:0\" , \"C7:0\" , \"D7:0\" , \"B7:0\" , \"F7:0\" , \"C8:0\" ] music . play ( tune ) def son_bip ( self ): for i in range ( 2 ): freq = 2000 while freq > 1000 : music . pitch ( int ( freq ), 10 ) freq *= 0.95 freq = 1000 while freq < 3000 : music . pitch ( int ( freq ), 10 ) freq *= 1.05 #fin biblioth\u00e8que #d\u00e9but du programme","title":"Installation du module pilote maqueen sous Python"},{"location":"IHM/robotique/robotique.html#methodes-fournies-par-le-module","text":"avance(vitesse) : avance en ligne droite. vitesse est un nombre entre 0 et 100. Ce param\u00e8tre est optionnel. Si non sp\u00e9cifi\u00e9, c'est la derni\u00e8re vitesse sp\u00e9cifi\u00e9e lors de avance() ou setVitesse() qui sera utilis\u00e9e. recule() : fait marche arri\u00e8re. stop() : stoppe les moteurs moteurDroit(vitesse) : fait tourner la roue droite. moteurGauche(vitesse) : fait tourner la roue gauche. getVitesse() : renvoie la vitesse param\u00e9tr\u00e9e par setVitesse() ou avance() setVitesse() : change la valeur de la vitesse utilis\u00e9e par avance, recule, moteur distance() : renvoie la distance (en cm) lue par le capteur ultrason son_r2d2() et son_bip() : effets sonores Compl\u00e9ment : Acc\u00e8s aux autres fonctions du robot Sur le circuit imprim\u00e9 du robot figurent les adresses des broches pour les LEDs et capteurs de ligne. les voici pour rappel : - LEDs rouges : 8 (gauche) et 12 (droite). Ex : pin8.write_digital(1) - Neopixel : pin15 - capteurs de ligne : pin13 (gauche) et pin14 (droite). ex : pin13.read_digital() - infrarouge : pin16 1 2 3 4 5 6 7 8 9 # Exemple d'\u00e9clairage d'ambiance vert avec les neopixels from microbit import * from neopixel import NeoPixel np = NeoPixel ( pin15 , 4 ) for i in range ( 4 ): np [ i ] = ( 0 , 255 , 0 ) np . show () # np.clear() pour eteindre les neopixels Autre exemple, si une ligne est franchie, les LED 13 et 14 d\u00e9tecte du noir : 1 2 3 if pin14 . read_digital () == 0 and pin13 . read_digital () == 0 : # pin 14 est la diode de droite et 13 celle de gauche # detection de franchissement de ligne mq . son_bip ()","title":"M\u00e9thodes fournies par le module"},{"location":"IHM/robotique/robotique.html#utilisation-du-module","text":"Voici un exemple concret vous permettant de tester le module depuis le REPL afin de vous assurer que tout fonctionne. Je vous conseille de tester cela avec le robot sur le dos pour \u00e9viter qu'il parte avec un fil \u00e0 la patte ! Attention Ceci n'est valable que si vous avez install\u00e9 la biblioth\u00e8que chez vous 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 >>> from maqueen import Maqueen >>> mq = Maqueen () >>> mq . distance () # permet de v\u00e9rifier le module ultrason >>> mq . avance ( 10 ) >>> mq . stop () >>> mq . moteurDroit () >>> mq . moteurGauche ( - 10 ) >>> mq . stop () ``` ### Exemple de mini-projet : le robot \u00e9viteur d'obstacle Le principe est tr\u00e8s simple : On avance tant que le capteur de distance ne d\u00e9tecte pas d 'obstacles. Si un obstacle tr\u00e8s proche est d\u00e9tect\u00e9 , on recule pendant 2 secondes et on tourne pendant 1 seconde Si un obstacle est d\u00e9tect\u00e9 \u00e0 moins de 2 cm , on introduit de l 'al\u00e9atoire avec trois comportements possibles : on recule et on tourne, on tourne ou on tourne sur place. pour illustrer le fonctionnement du capteur de ligne , on \u00e9met un bip \u00e0 chaque fois qu 'une ligne est franchie (joint de carrelage par exemple). Voici le programme de d\u00e9monstration . Vous pouvez le modifier \u00e0 loisir pour changer le comportement du robot . ``` python from microbit import * from maqueen import Maqueen from random import randint mq = Maqueen () mq . setVitesse ( 50 ) while True : mq . avance () # LED rouge de devant droite # LED rouge de devant gauche d = mq . distance () if d < 5 or d > 2000 : # obstacle tr\u00e8s proche ... elif d < 20 : # obstacle proche ... if pin14 . read_digital () == 0 and pin13 . read_digital () == 0 : ...","title":"Utilisation du module"},{"location":"Programmation/boucle.html","text":"Boucles et structues conditionnelles \u2693\ufe0e Structures conditionnelles if... else \u2693\ufe0e On n'ex\u00e9cute certaines instructions que si une condition est remplie. Et d'autres instructions si ele ne l'est pas. 1 2 3 4 5 heure = 21 if heure >= 23 : #la condition est que la vriable heure est sup\u00e9rieure ou \u00e9gale \u00e0 23 print ( \"Vas te coucher\" ) # ne s'\u00e9x\u00e9cute que si la condition est remplie else : # dans tous les autres cas. On ne met pas de condition \u00e0 un else print ( \"Tu peux rester un peu devant la t\u00e9l\u00e9!\" ) # s'ex\u00e9cute si la condition n'est pas remplie Remarque Le bloc else n'est pas obligatoire, s'il n'est pas l\u00e0 et que la condition n'est pas remplie, il ne se passe rien. Structures imbriqu\u00e9es if...elif...else... \u2693\ufe0e On utilise cette structure si on a plusieurs conditions \u00e0 tester. Ici le choix n'est pas binaire. 1 2 3 4 5 6 SI A>B: affiche 'A est plus grand que B' SINON SI A=B : affiche 'A est \u00e9gal \u00e0 B' SINON : affiche 'A est plus petit que B' En python : 1 2 3 4 5 6 if A > B : print ( \"A est plus grand que B\" ) elif A == B : #elif contraction de else if print ( \"A est \u00e9gal \u00e0 B\" ) else : print ( \"A est plus petit que B\" ) Multiples conditions \u2693\ufe0e On peut avoir des cas ou deux conditions doivet \u00eatre remplies ou que l'une ou l'autre le soit. On utilise alors les mots cl\u00e9s and et or . 1 2 3 4 5 if A > B and C > D : print ( 'les deux conditions sont remplies' ) if A > B or C > D : print ( 'une des deux conditions est remplie' ) Boucle Tant que ... : While \u2693\ufe0e On va tester une condition, puis ex\u00e9cuter une s\u00e9rie d'instruction tant que cette condition est vraie. 1 2 3 TANT QUE condition est vraie : on r\u00e9p\u00e8te les instructions du bloc Instructions \u00e0 ex\u00e9cuter lorsque la condition n'est plus remplie 1 2 3 4 5 compteur = 1 while compteur < 10 : # tant que la variable compteur est inf\u00e9rieure \u00e0 10 print ( compteur , '*8=' , compteur * 8 ) compteur = compteur + 1 # on agente compteur de 1 print ( 'et voil\u00e0' ) # ceci ne s'ex\u00e9cute que lorsque compteur vaut 10 Boucles infinies Dans le programme pr\u00e9c\u00e9det si j'oublie d'augmenter la variable compteur elle vaudra toujours 1 et ne sera donc jamais \u00e9gale \u00e0 10. la boucle va alors se r\u00e9p\u00e9ter ind\u00e9finiment. 1 2 3 4 5 compteur = 1 while compteur < 10 : # tant que la variable compteur est inf\u00e9rieure \u00e0 10 print ( compteur , '*8=' , compteur * 8 ) # j'oublie d'incr\u00e9menter compteur print ( 'et voil\u00e0' ) # ceci ne s'ex\u00e9cute que lorsque compteur vaut 10 Boucle pour un certain nombre d'\u00e9l\u00e9ments : For \u2693\ufe0e Pour \u00e9x\u00e9cuter une s\u00e9rie d'instructions un nombre de fois d\u00e9termin\u00e9 \u00e0 l'avance, on utilise le mot cl\u00e9 for qui signifie POUR. Par exemple on veut r\u00e9p\u00e9ter 10 fois une certaine instruction : r\u00e9p\u00e9ter 10 fois pseudocode 1 2 POUR i allant de 0 \u00e0 9: afficher 'Bonjour' en python 1 2 for i in range ( 0 , 10 ): print ( 'Bonjour' ) A chaque boucle i change de valeur \u00e0 partir de 0 jusque 9. \u00e0 la premiere boucle i prend la valeur0, \u00e0 la deuxieme 1, \u00e0 la troisi\u00e8me 2, ... \u00e0 la dixi\u00e8me 9. Remarque for i in range(8) : i prendra succ\u00e9ssivement les valeurs de 0 \u00e0 7 (par defaut si on ne pr\u00e9cise pas la premi\u00e8re valeur \u00e7a sera 0). for i in range(1,8) : i prendra succ\u00e9ssivement les valeurs de 1 \u00e0 7. for i in range(1,10,2) : i prendra succ\u00e9ssivement les valeurs de 1 \u00e0 9 avec un pas de 2 (1,3,5,7,9). On peut ainsi r\u00e9cup\u00e9rer la valeur de i \u00e0 chaque boucle et s'en servir pour faire un calcul ou un affichage. Tester ce code. 1 2 for i in range ( 5 ): # pour i allant de 0 \u00e0 4 print ( i ) # on affiche la valeur de i Pour les \u00e9l\u00e9ments d'une liste ou d'une chaine de caract\u00e8res code 1 2 3 4 5 6 7 8 9 chaine = 'bonjour' for lettre in chaine : print ( lettre ) #\u00e0 chaque boucle la variable lettre change de valeur et prendra dans l'ordre les valeurs de 'b', 'o', 'n', ... L = [ 2 , 5 , 9 , 18 ] for element in L : print ( element ) #\u00e0 chaque tour la variabel element prend une nouvelle valeur de la liste console 1 2 3 4 5 6 7 8 9 10 11 12 >>> b o n j o u r 2 5 9 18","title":"Conditions et boucles"},{"location":"Programmation/boucle.html#boucles-et-structues-conditionnelles","text":"","title":"Boucles et structues conditionnelles"},{"location":"Programmation/boucle.html#structures-conditionnelles-if-else","text":"On n'ex\u00e9cute certaines instructions que si une condition est remplie. Et d'autres instructions si ele ne l'est pas. 1 2 3 4 5 heure = 21 if heure >= 23 : #la condition est que la vriable heure est sup\u00e9rieure ou \u00e9gale \u00e0 23 print ( \"Vas te coucher\" ) # ne s'\u00e9x\u00e9cute que si la condition est remplie else : # dans tous les autres cas. On ne met pas de condition \u00e0 un else print ( \"Tu peux rester un peu devant la t\u00e9l\u00e9!\" ) # s'ex\u00e9cute si la condition n'est pas remplie Remarque Le bloc else n'est pas obligatoire, s'il n'est pas l\u00e0 et que la condition n'est pas remplie, il ne se passe rien.","title":"Structures conditionnelles if... else"},{"location":"Programmation/boucle.html#structures-imbriquees-ifelifelse","text":"On utilise cette structure si on a plusieurs conditions \u00e0 tester. Ici le choix n'est pas binaire. 1 2 3 4 5 6 SI A>B: affiche 'A est plus grand que B' SINON SI A=B : affiche 'A est \u00e9gal \u00e0 B' SINON : affiche 'A est plus petit que B' En python : 1 2 3 4 5 6 if A > B : print ( \"A est plus grand que B\" ) elif A == B : #elif contraction de else if print ( \"A est \u00e9gal \u00e0 B\" ) else : print ( \"A est plus petit que B\" )","title":"Structures imbriqu\u00e9es if...elif...else..."},{"location":"Programmation/boucle.html#multiples-conditions","text":"On peut avoir des cas ou deux conditions doivet \u00eatre remplies ou que l'une ou l'autre le soit. On utilise alors les mots cl\u00e9s and et or . 1 2 3 4 5 if A > B and C > D : print ( 'les deux conditions sont remplies' ) if A > B or C > D : print ( 'une des deux conditions est remplie' )","title":"Multiples conditions"},{"location":"Programmation/boucle.html#boucle-tant-que-while","text":"On va tester une condition, puis ex\u00e9cuter une s\u00e9rie d'instruction tant que cette condition est vraie. 1 2 3 TANT QUE condition est vraie : on r\u00e9p\u00e8te les instructions du bloc Instructions \u00e0 ex\u00e9cuter lorsque la condition n'est plus remplie 1 2 3 4 5 compteur = 1 while compteur < 10 : # tant que la variable compteur est inf\u00e9rieure \u00e0 10 print ( compteur , '*8=' , compteur * 8 ) compteur = compteur + 1 # on agente compteur de 1 print ( 'et voil\u00e0' ) # ceci ne s'ex\u00e9cute que lorsque compteur vaut 10 Boucles infinies Dans le programme pr\u00e9c\u00e9det si j'oublie d'augmenter la variable compteur elle vaudra toujours 1 et ne sera donc jamais \u00e9gale \u00e0 10. la boucle va alors se r\u00e9p\u00e9ter ind\u00e9finiment. 1 2 3 4 5 compteur = 1 while compteur < 10 : # tant que la variable compteur est inf\u00e9rieure \u00e0 10 print ( compteur , '*8=' , compteur * 8 ) # j'oublie d'incr\u00e9menter compteur print ( 'et voil\u00e0' ) # ceci ne s'ex\u00e9cute que lorsque compteur vaut 10","title":"Boucle Tant que ... : While"},{"location":"Programmation/boucle.html#boucle-pour-un-certain-nombre-delements-for","text":"Pour \u00e9x\u00e9cuter une s\u00e9rie d'instructions un nombre de fois d\u00e9termin\u00e9 \u00e0 l'avance, on utilise le mot cl\u00e9 for qui signifie POUR. Par exemple on veut r\u00e9p\u00e9ter 10 fois une certaine instruction : r\u00e9p\u00e9ter 10 fois pseudocode 1 2 POUR i allant de 0 \u00e0 9: afficher 'Bonjour' en python 1 2 for i in range ( 0 , 10 ): print ( 'Bonjour' ) A chaque boucle i change de valeur \u00e0 partir de 0 jusque 9. \u00e0 la premiere boucle i prend la valeur0, \u00e0 la deuxieme 1, \u00e0 la troisi\u00e8me 2, ... \u00e0 la dixi\u00e8me 9. Remarque for i in range(8) : i prendra succ\u00e9ssivement les valeurs de 0 \u00e0 7 (par defaut si on ne pr\u00e9cise pas la premi\u00e8re valeur \u00e7a sera 0). for i in range(1,8) : i prendra succ\u00e9ssivement les valeurs de 1 \u00e0 7. for i in range(1,10,2) : i prendra succ\u00e9ssivement les valeurs de 1 \u00e0 9 avec un pas de 2 (1,3,5,7,9). On peut ainsi r\u00e9cup\u00e9rer la valeur de i \u00e0 chaque boucle et s'en servir pour faire un calcul ou un affichage. Tester ce code. 1 2 for i in range ( 5 ): # pour i allant de 0 \u00e0 4 print ( i ) # on affiche la valeur de i Pour les \u00e9l\u00e9ments d'une liste ou d'une chaine de caract\u00e8res code 1 2 3 4 5 6 7 8 9 chaine = 'bonjour' for lettre in chaine : print ( lettre ) #\u00e0 chaque boucle la variable lettre change de valeur et prendra dans l'ordre les valeurs de 'b', 'o', 'n', ... L = [ 2 , 5 , 9 , 18 ] for element in L : print ( element ) #\u00e0 chaque tour la variabel element prend une nouvelle valeur de la liste console 1 2 3 4 5 6 7 8 9 10 11 12 >>> b o n j o u r 2 5 9 18","title":"Boucle pour un certain nombre d'\u00e9l\u00e9ments : For"},{"location":"Programmation/complexite.html","text":"Co\u00fbt temporel d'un programme \u2693\ufe0e Qu'est ce que la compl\u00e9xit\u00e9? \u2693\ufe0e Le probl\u00e8me de la complexit\u00e9 temporelle (le temps mis par le programme) est fondamental en informatique. Sur un petit exercice contenant seulement 20 valeurs, les ranger dans l'ordre croissant sera tr\u00e8s rapide quel que soit la m\u00e9thode. Mais s'il faut r\u00e9p\u00e9ter cela des milliers de fois ou que la taille de la liste est de 50000 valeurs, la qualit\u00e9 de l'algorithme est tr\u00e8s importante. Entre l'algorithme le plus performant et le moins performant nous aurons un \u00e9cart de 15 fois meilleur (dans le pire des cas) pour 20 valeurs et de 10640 fois pour 50000 valeurs! Pour \u00e9valuer la complexit\u00e9 d'un algorithme on calcule le nombre d'\u00e9tapes (comparaisons, calculs, affectations) n\u00e9cessaires pour n donn\u00e9es. Parcours d'un tableau Lorsqu'on parcourt un tableau pour lire toutes les valeurs, combien d'actions fait-on si on a 20 \u00e9l\u00e9ments dans le tableau ? 1 2 3 4 tab \u2190 tableau de 20 valeurs Pour i allant de 0 \u00e0 19 : afficher tab[i] fin pour Pour chaque case, on affiche la valeur, on r\u00e9alise donc une action par case du tableau. Donc ici 20 \u00e9tapes. et pour n cases? Si on ne fait qu'une instruction par case, on aura autant d'actions que de cases soit n \u00e9tapes. Et si on en fait plus? \u2693\ufe0e Pour chaque valeur du tableau, on additionne la valeur courante avec la suivante. 1 2 3 4 5 6 tab \u2190 tableau de 20 valeurs pour i allant de 0 \u00e0 18 : lire tab[i] lire tab[i+1] afficher (tab[i]+tab[i+1]) fin pour A chaque case (sauf pour la derni\u00e8re) on effectue ici 3 \u00e9tapes. Pour 20 valeurs on aura 3*(20-1) = 57 \u00e9tapes Pour n valeurs : 3*(n-1) On dit que l'algorithme est d'ordre n (O(n)) (on ne s'occupe pas des constantes). Une telle complexit\u00e9 est dite lin\u00e9aire. Si le calcul d'une complexit\u00e9 nous am\u00e8ne \u00e0 un ordre de 4n\u00b2+3n+1 on dira que la complexit\u00e9 est un O(n\u00b2) . Une complexit\u00e9 d'ordre O(n\u00b2) est une complexit\u00e9 quadratique. Une complexit\u00e9 de l'ordre O(nlog(n)) est dite quasi-lin\u00e9aire. On peut s'int\u00e9resser \u00e0 la complexit\u00e9 d'un algorithme dans: le meilleur des cas, le cas moyen et le pire des cas. Pour comparer des algorithme entre eux, on comparera en g\u00e9n\u00e9rale leur complexit\u00e9 dans le pire des cas. Qu'est ce qu'une instruction \u00e9l\u00e9mentaire qui doit compter comme une \u00e9tape? Une addition une soustraction Une multiplication, une division, Mod (%), Div Une op\u00e9ration arithm\u00e9tique simple (sans appel de fonctions) Une comparaison, les op\u00e9rations bool\u00e9ennes (et,ou,non) une affectation Des op\u00e9rations de lectures et d'\u00e9critures simples. A noter que l'incr\u00e9mentation pour passer d'un \u00e9l\u00e9ment \u00e0 l'autre dans une boucle n'est pas consid\u00e9r\u00e9e comme une \u00e9tape Calcul de la moyenne d'un tableau Voici un algorithme. Quel est le type de complexit\u00e9 pour l'ex\u00e9cuter? 1 2 3 4 \u27a6 initialiser total \u00e0 0 \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 additionner l'\u00e9l\u00e9ment \u00e0 total \u27a6 diviser le total par le nombre d'\u00e9l\u00e9ments lin\u00e9aire quasi-lin\u00e9aire quadratique Une seule \u00e9tape par \u00e9l\u00e9ment de la liste soit n puis la division finale : n+1 = O(n) Recherche de maximum Quelle est la complexit\u00e9 de cet algorithme ? La r\u00e9ponse attendue est un seul mot 1 2 3 4 5 \u27a6 initialiser maximum \u00e0 l'\u00e9l\u00e9ment 0 de la liste \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u00e0 partir du 2nd \u27a6 si l'\u00e9l\u00e9ment est plus grand que maximum \u27a6 mettre maximum \u00e0 la valeur de \u00e9l\u00e9ment \u27a6 afficher maximum 1+(n-1)*2+1 = 2n-2+1=2n-1=>O(n) complexit\u00e9 lin\u00e9aire affectation de la variable maximum et l'affichage du max correspondent aux deux 1 que l'on trouve dans le calcul. Comparer deux algorithmes On cherche \u00e0 comparer les deux algorithmes : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## Algorithme 1 \u27a6 Soit T la valeur \u00e0 trouver \u27a6 initialiser trouve \u00e0 Faux \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 si l'\u00e9l\u00e9ment = T \u27a6trouve = Vrai \u27a6 afficher trouve ## Algorithme 2 \u27a6 soit T la valeur \u00e0 trouver \u27a6 soit L la longueur de la liste \u27a6 initialiser trouve \u00e0 Faux \u27a6 initialiser i \u00e0 0 \u27a6 tant que i < L et \u00e9l\u00e9ment i de liste pas \u00e9gal \u00e0 T \u27a6 incr\u00e9menter i \u27a6 si i < L alors \u27a6 trouve=True \u27a6 affiche trouve Pour une liste de 20 \u00e9l\u00e9ments : Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position . L'algorithme 1 dans le meilleur des cas fait op\u00e9rations. Le deuxi\u00e8me fait op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations op\u00e9rations . Le deuxi\u00e8me fait op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est et celle du 2 est . Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position 0 (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position 19. L'algorithme 1 dans le meilleur des cas fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 10 op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 67 op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est lin\u00e9aire et celle du 2 est lin\u00e9aire. Module time \u2693\ufe0e Le module time permet de g\u00e9rer le temps. Tout part du nombre de seconde (microsecondes m\u00eame) qui se sont \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 minuit. Cette date est appel\u00e9e Epoch Time. Affichage de l'heure locale Renvoie un objet contenant : tm_year : l'ann\u00e9e sous la forme d'un entier ; tm_mon : le num\u00e9ro du mois (entre 1 et 12) ; tm_mday : le num\u00e9ro du jour du mois (entre 1 et 31, variant d'un mois et d'une ann\u00e9e \u00e0 l'autre) ; tm_hour : l'heure du jour (entre 0 et 23) ; tm_min : le nombre de minutes (entre 0 et 59) ; tm_sec : le nombre de secondes (entre 0 et 61, m\u00eame si on n'utilisera ici que les valeurs de 0 \u00e0 59, c'est bien suffisant) ; tm_wday : un entier repr\u00e9sentant le jour de la semaine (entre 0 et 6, 0 correspond par d\u00e9faut au lundi) ; tm_yday : le jour de l'ann\u00e9e, entre 1 et 366 ; tm_isdst : un entier repr\u00e9sentant le changement d'heure local. Module Matplotlib \u2693\ufe0e D\u00e9j\u00e0 probablement utilis\u00e9 en sciences physiques, le module matplotlib permet de tracer des graphiques. L'id\u00e9e ici est de comparer les complexit\u00e9s selon la taille du tableau. Voici comment tracer un graphique avec deux s\u00e9ries de valeurs (abscisses et ordonn\u00e9es) : 1 2 3 4 5 6 7 8 9 10 11 12 #importation du module import matplotlib.pyplot as plt #liste des valeurs d'abscisses x = [ 0 , 1 , - 1 , 0 ] #liste des valeurs d'ordonn\u00e9es y = [ 0 , 1 , 1 , 0 ] #trac\u00e9 du graphique plt . plot ( x , y ) #affichage du graphique plt . show () plt . close () Pour tracer plusieurs graphiques sur la m\u00eame fen\u00eatre : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import matplotlib.pyplot as plt x = [ 0 , 1 , 0 ] y = [ 0 , 1 , 2 ] x1 = [ 0 , 2 , 0 ] y1 = [ 2 , 1 , 0 ] x2 = [ 0 , 1 , 2 ] y2 = [ 0 , 1 , 2 ] plt . plot ( x , y ) plt . plot ( x1 , y1 ) plt . plot ( x2 , y2 ) plt . show () plt . close () Voici quelques propri\u00e9t\u00e9s des fen\u00eatres graphiques (mais il y en a plein d'autres RTFM) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt x = [ 0.25 , 0.25 , 1.25 , 0.5 , 1 , 0.25 , 0.6 , 0 , - 0.6 , - 0.25 , - 1 , - 0.5 , - 1.25 , - 0.25 , - 0.25 , 0.25 ] y = [ 0 , 0.5 , 0.5 , 1 , 1 , 1.5 , 1.5 , 2 , 1.5 , 1.5 , 1 , 1 , 0.5 , 0.5 , 0 , 0 ] #les prorpi\u00e9t\u00e9s permettent ici de d\u00e9finir la couleur le style de trait plt . plot ( x , y , '-.' , color = \"green\" ) #titre plt . title ( \"Mon beau sapin\" ) plt . axis ( 'equal' ) # titre des axes plt . xlabel ( \"C'est Noel\" ) plt . ylabel ( \"Vive le vent\" ) plt . show () plt . close () Exercices \u2693\ufe0e Exercice 1 \u2693\ufe0e \u00c9crire le programme qui calcule le maximum et le minimum d'un tableau en utilisant l'algorithme ci-dessus Exercice 2 \u2693\ufe0e \u00c9crire les programmes de recherche de valeur avec les deux algorithmes. Faire afficher le nombre d'\u00e9tapes ex\u00e9cut\u00e9es et comparer \u00e0 la complexit\u00e9 dans le pire des cas. A-t-on autant d'\u00e9tapes que celles \u00e9valu\u00e9es sur la complexit\u00e9 ? Comparer les compl\u00e9xit\u00e9s Apr\u00e8s avoir cod\u00e9 la recherche de valeurs avec les deux algorithmes de recherche de valeur (exercice 2), r\u00e9cup\u00e9rer le nombre d'\u00e9tapes en fonction de la taille de la liste et tracer les deux graphiques dans la m\u00eame fen\u00eatre. Exercice 3 \u2693\ufe0e Codez une fonction qui cherche le maximum d'une liste en ne tenant pas compte des valeurs sup\u00e9rieures ou \u00e9gales \u00e0 10. Faire compter les \u00e9tapes au programme et comparer avec les camarades. Exercice 4 \u2693\ufe0e Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche le point le plus bas! R\u00e9alisez ce codage en recherchant la complexit\u00e9 minimum Exercice 5 \u2693\ufe0e Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche si un point de la liste a une abscisse donn\u00e9e, ou une ordonn\u00e9e donn\u00e9es ou une profondeur donn\u00e9e. function reactionText1(){ var msg; var reponse=document.getElementById(\"reponse1\"); if (reponse.value ==='20'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText1(){ document.getElementById(\"correctionText1\").style=\"display:block;\"; } function reactionText2(){ var msg; var reponse=document.getElementById(\"reponse2\"); if (reponse.value ==='n'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText2\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText2(){ document.getElementById(\"correctionText2\").style=\"display:block;\"; } function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test1\"); var rep=reponse.elements[\"test\"].value; console.log(rep); if (rep==\"A\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"';} document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU(){ document.getElementById(\"correctionQCU\").style=\"display:block;\"; } function reactionText3(){ var msg; var reponse=document.getElementById(\"reponse3\"); if (reponse.value =='lin\u00e9aire' || reponse.value =='lineaire' || reponse.value =='Lin\u00e9aire' || reponse.value =='Lineaire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText3\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText3(){ document.getElementById(\"correctionText3\").style=\"display:block;\"; } function reactionText4(){ var msg; console.log('fonction executee'); var reponse4=document.getElementById(\"reponse4\"); var reponse5=document.getElementById(\"reponse5\"); var reponse6=document.getElementById(\"reponse6\"); var reponse7=document.getElementById(\"reponse7\"); var reponse8=document.getElementById(\"reponse8\"); var reponse9=document.getElementById(\"reponse9\"); var reponse10=document.getElementById(\"reponse10\"); var reponse11=document.getElementById(\"reponse11\"); if (reponse4.value ==='0' && reponse5.value ==='19' && reponse6.value ==='43' && reponse7.value ==='10' && reponse8.value ==='43' && reponse9.value ==='67' && reponse10.value ==='lin\u00e9aire' && reponse11.value ==='lin\u00e9aire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\";}","title":"Co\u00fbt temporel d'un programme"},{"location":"Programmation/complexite.html#cout-temporel-dun-programme","text":"","title":"Co\u00fbt temporel d'un programme"},{"location":"Programmation/complexite.html#quest-ce-que-la-complexite","text":"Le probl\u00e8me de la complexit\u00e9 temporelle (le temps mis par le programme) est fondamental en informatique. Sur un petit exercice contenant seulement 20 valeurs, les ranger dans l'ordre croissant sera tr\u00e8s rapide quel que soit la m\u00e9thode. Mais s'il faut r\u00e9p\u00e9ter cela des milliers de fois ou que la taille de la liste est de 50000 valeurs, la qualit\u00e9 de l'algorithme est tr\u00e8s importante. Entre l'algorithme le plus performant et le moins performant nous aurons un \u00e9cart de 15 fois meilleur (dans le pire des cas) pour 20 valeurs et de 10640 fois pour 50000 valeurs! Pour \u00e9valuer la complexit\u00e9 d'un algorithme on calcule le nombre d'\u00e9tapes (comparaisons, calculs, affectations) n\u00e9cessaires pour n donn\u00e9es. Parcours d'un tableau Lorsqu'on parcourt un tableau pour lire toutes les valeurs, combien d'actions fait-on si on a 20 \u00e9l\u00e9ments dans le tableau ? 1 2 3 4 tab \u2190 tableau de 20 valeurs Pour i allant de 0 \u00e0 19 : afficher tab[i] fin pour Pour chaque case, on affiche la valeur, on r\u00e9alise donc une action par case du tableau. Donc ici 20 \u00e9tapes. et pour n cases? Si on ne fait qu'une instruction par case, on aura autant d'actions que de cases soit n \u00e9tapes.","title":"Qu'est ce que la compl\u00e9xit\u00e9?"},{"location":"Programmation/complexite.html#et-si-on-en-fait-plus","text":"Pour chaque valeur du tableau, on additionne la valeur courante avec la suivante. 1 2 3 4 5 6 tab \u2190 tableau de 20 valeurs pour i allant de 0 \u00e0 18 : lire tab[i] lire tab[i+1] afficher (tab[i]+tab[i+1]) fin pour A chaque case (sauf pour la derni\u00e8re) on effectue ici 3 \u00e9tapes. Pour 20 valeurs on aura 3*(20-1) = 57 \u00e9tapes Pour n valeurs : 3*(n-1) On dit que l'algorithme est d'ordre n (O(n)) (on ne s'occupe pas des constantes). Une telle complexit\u00e9 est dite lin\u00e9aire. Si le calcul d'une complexit\u00e9 nous am\u00e8ne \u00e0 un ordre de 4n\u00b2+3n+1 on dira que la complexit\u00e9 est un O(n\u00b2) . Une complexit\u00e9 d'ordre O(n\u00b2) est une complexit\u00e9 quadratique. Une complexit\u00e9 de l'ordre O(nlog(n)) est dite quasi-lin\u00e9aire. On peut s'int\u00e9resser \u00e0 la complexit\u00e9 d'un algorithme dans: le meilleur des cas, le cas moyen et le pire des cas. Pour comparer des algorithme entre eux, on comparera en g\u00e9n\u00e9rale leur complexit\u00e9 dans le pire des cas. Qu'est ce qu'une instruction \u00e9l\u00e9mentaire qui doit compter comme une \u00e9tape? Une addition une soustraction Une multiplication, une division, Mod (%), Div Une op\u00e9ration arithm\u00e9tique simple (sans appel de fonctions) Une comparaison, les op\u00e9rations bool\u00e9ennes (et,ou,non) une affectation Des op\u00e9rations de lectures et d'\u00e9critures simples. A noter que l'incr\u00e9mentation pour passer d'un \u00e9l\u00e9ment \u00e0 l'autre dans une boucle n'est pas consid\u00e9r\u00e9e comme une \u00e9tape Calcul de la moyenne d'un tableau Voici un algorithme. Quel est le type de complexit\u00e9 pour l'ex\u00e9cuter? 1 2 3 4 \u27a6 initialiser total \u00e0 0 \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 additionner l'\u00e9l\u00e9ment \u00e0 total \u27a6 diviser le total par le nombre d'\u00e9l\u00e9ments lin\u00e9aire quasi-lin\u00e9aire quadratique Une seule \u00e9tape par \u00e9l\u00e9ment de la liste soit n puis la division finale : n+1 = O(n) Recherche de maximum Quelle est la complexit\u00e9 de cet algorithme ? La r\u00e9ponse attendue est un seul mot 1 2 3 4 5 \u27a6 initialiser maximum \u00e0 l'\u00e9l\u00e9ment 0 de la liste \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u00e0 partir du 2nd \u27a6 si l'\u00e9l\u00e9ment est plus grand que maximum \u27a6 mettre maximum \u00e0 la valeur de \u00e9l\u00e9ment \u27a6 afficher maximum 1+(n-1)*2+1 = 2n-2+1=2n-1=>O(n) complexit\u00e9 lin\u00e9aire affectation de la variable maximum et l'affichage du max correspondent aux deux 1 que l'on trouve dans le calcul. Comparer deux algorithmes On cherche \u00e0 comparer les deux algorithmes : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## Algorithme 1 \u27a6 Soit T la valeur \u00e0 trouver \u27a6 initialiser trouve \u00e0 Faux \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 si l'\u00e9l\u00e9ment = T \u27a6trouve = Vrai \u27a6 afficher trouve ## Algorithme 2 \u27a6 soit T la valeur \u00e0 trouver \u27a6 soit L la longueur de la liste \u27a6 initialiser trouve \u00e0 Faux \u27a6 initialiser i \u00e0 0 \u27a6 tant que i < L et \u00e9l\u00e9ment i de liste pas \u00e9gal \u00e0 T \u27a6 incr\u00e9menter i \u27a6 si i < L alors \u27a6 trouve=True \u27a6 affiche trouve Pour une liste de 20 \u00e9l\u00e9ments : Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position . L'algorithme 1 dans le meilleur des cas fait op\u00e9rations. Le deuxi\u00e8me fait op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations op\u00e9rations . Le deuxi\u00e8me fait op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est et celle du 2 est . Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position 0 (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position 19. L'algorithme 1 dans le meilleur des cas fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 10 op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 67 op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est lin\u00e9aire et celle du 2 est lin\u00e9aire.","title":"Et si on en fait plus?"},{"location":"Programmation/complexite.html#module-time","text":"Le module time permet de g\u00e9rer le temps. Tout part du nombre de seconde (microsecondes m\u00eame) qui se sont \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 minuit. Cette date est appel\u00e9e Epoch Time. Affichage de l'heure locale Renvoie un objet contenant : tm_year : l'ann\u00e9e sous la forme d'un entier ; tm_mon : le num\u00e9ro du mois (entre 1 et 12) ; tm_mday : le num\u00e9ro du jour du mois (entre 1 et 31, variant d'un mois et d'une ann\u00e9e \u00e0 l'autre) ; tm_hour : l'heure du jour (entre 0 et 23) ; tm_min : le nombre de minutes (entre 0 et 59) ; tm_sec : le nombre de secondes (entre 0 et 61, m\u00eame si on n'utilisera ici que les valeurs de 0 \u00e0 59, c'est bien suffisant) ; tm_wday : un entier repr\u00e9sentant le jour de la semaine (entre 0 et 6, 0 correspond par d\u00e9faut au lundi) ; tm_yday : le jour de l'ann\u00e9e, entre 1 et 366 ; tm_isdst : un entier repr\u00e9sentant le changement d'heure local.","title":"Module time"},{"location":"Programmation/complexite.html#module-matplotlib","text":"D\u00e9j\u00e0 probablement utilis\u00e9 en sciences physiques, le module matplotlib permet de tracer des graphiques. L'id\u00e9e ici est de comparer les complexit\u00e9s selon la taille du tableau. Voici comment tracer un graphique avec deux s\u00e9ries de valeurs (abscisses et ordonn\u00e9es) : 1 2 3 4 5 6 7 8 9 10 11 12 #importation du module import matplotlib.pyplot as plt #liste des valeurs d'abscisses x = [ 0 , 1 , - 1 , 0 ] #liste des valeurs d'ordonn\u00e9es y = [ 0 , 1 , 1 , 0 ] #trac\u00e9 du graphique plt . plot ( x , y ) #affichage du graphique plt . show () plt . close () Pour tracer plusieurs graphiques sur la m\u00eame fen\u00eatre : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import matplotlib.pyplot as plt x = [ 0 , 1 , 0 ] y = [ 0 , 1 , 2 ] x1 = [ 0 , 2 , 0 ] y1 = [ 2 , 1 , 0 ] x2 = [ 0 , 1 , 2 ] y2 = [ 0 , 1 , 2 ] plt . plot ( x , y ) plt . plot ( x1 , y1 ) plt . plot ( x2 , y2 ) plt . show () plt . close () Voici quelques propri\u00e9t\u00e9s des fen\u00eatres graphiques (mais il y en a plein d'autres RTFM) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt x = [ 0.25 , 0.25 , 1.25 , 0.5 , 1 , 0.25 , 0.6 , 0 , - 0.6 , - 0.25 , - 1 , - 0.5 , - 1.25 , - 0.25 , - 0.25 , 0.25 ] y = [ 0 , 0.5 , 0.5 , 1 , 1 , 1.5 , 1.5 , 2 , 1.5 , 1.5 , 1 , 1 , 0.5 , 0.5 , 0 , 0 ] #les prorpi\u00e9t\u00e9s permettent ici de d\u00e9finir la couleur le style de trait plt . plot ( x , y , '-.' , color = \"green\" ) #titre plt . title ( \"Mon beau sapin\" ) plt . axis ( 'equal' ) # titre des axes plt . xlabel ( \"C'est Noel\" ) plt . ylabel ( \"Vive le vent\" ) plt . show () plt . close ()","title":"Module Matplotlib"},{"location":"Programmation/complexite.html#exercices","text":"","title":"Exercices"},{"location":"Programmation/complexite.html#exercice-1","text":"\u00c9crire le programme qui calcule le maximum et le minimum d'un tableau en utilisant l'algorithme ci-dessus","title":"Exercice 1"},{"location":"Programmation/complexite.html#exercice-2","text":"\u00c9crire les programmes de recherche de valeur avec les deux algorithmes. Faire afficher le nombre d'\u00e9tapes ex\u00e9cut\u00e9es et comparer \u00e0 la complexit\u00e9 dans le pire des cas. A-t-on autant d'\u00e9tapes que celles \u00e9valu\u00e9es sur la complexit\u00e9 ? Comparer les compl\u00e9xit\u00e9s Apr\u00e8s avoir cod\u00e9 la recherche de valeurs avec les deux algorithmes de recherche de valeur (exercice 2), r\u00e9cup\u00e9rer le nombre d'\u00e9tapes en fonction de la taille de la liste et tracer les deux graphiques dans la m\u00eame fen\u00eatre.","title":"Exercice 2"},{"location":"Programmation/complexite.html#exercice-3","text":"Codez une fonction qui cherche le maximum d'une liste en ne tenant pas compte des valeurs sup\u00e9rieures ou \u00e9gales \u00e0 10. Faire compter les \u00e9tapes au programme et comparer avec les camarades.","title":"Exercice 3"},{"location":"Programmation/complexite.html#exercice-4","text":"Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche le point le plus bas! R\u00e9alisez ce codage en recherchant la complexit\u00e9 minimum","title":"Exercice 4"},{"location":"Programmation/complexite.html#exercice-5","text":"Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche si un point de la liste a une abscisse donn\u00e9e, ou une ordonn\u00e9e donn\u00e9es ou une profondeur donn\u00e9e. function reactionText1(){ var msg; var reponse=document.getElementById(\"reponse1\"); if (reponse.value ==='20'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText1(){ document.getElementById(\"correctionText1\").style=\"display:block;\"; } function reactionText2(){ var msg; var reponse=document.getElementById(\"reponse2\"); if (reponse.value ==='n'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText2\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText2(){ document.getElementById(\"correctionText2\").style=\"display:block;\"; } function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test1\"); var rep=reponse.elements[\"test\"].value; console.log(rep); if (rep==\"A\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"';} document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU(){ document.getElementById(\"correctionQCU\").style=\"display:block;\"; } function reactionText3(){ var msg; var reponse=document.getElementById(\"reponse3\"); if (reponse.value =='lin\u00e9aire' || reponse.value =='lineaire' || reponse.value =='Lin\u00e9aire' || reponse.value =='Lineaire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText3\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText3(){ document.getElementById(\"correctionText3\").style=\"display:block;\"; } function reactionText4(){ var msg; console.log('fonction executee'); var reponse4=document.getElementById(\"reponse4\"); var reponse5=document.getElementById(\"reponse5\"); var reponse6=document.getElementById(\"reponse6\"); var reponse7=document.getElementById(\"reponse7\"); var reponse8=document.getElementById(\"reponse8\"); var reponse9=document.getElementById(\"reponse9\"); var reponse10=document.getElementById(\"reponse10\"); var reponse11=document.getElementById(\"reponse11\"); if (reponse4.value ==='0' && reponse5.value ==='19' && reponse6.value ==='43' && reponse7.value ==='10' && reponse8.value ==='43' && reponse9.value ==='67' && reponse10.value ==='lin\u00e9aire' && reponse11.value ==='lin\u00e9aire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\";}","title":"Exercice 5"},{"location":"Programmation/demarrer.html","text":"Bien d\u00e9marrer en programmation \u2693\ufe0e Afficher et entrer une valeur \u2693\ufe0e Deux instructions importantes lorsqu\u2019on apprend \u00e0 programmer en Python : Print() : permet d\u2019afficher quelque chose dans la console input() : permet de r\u00e9cup\u00e9rer une entr\u00e9e au clavier Les variables \u2693\ufe0e Une variable est compos\u00e9e d\u2019un nom (ou identificateur) et d\u2019une valeur enregistr\u00e9e en m\u00e9moire. Le nom utilis\u00e9 doit \u00eatre repr\u00e9sentatif de son r\u00f4le dans le programme. Attention Attention \u00e0 nommer ses variables de fa\u00e7on coh\u00e9rente. Ne pas appeler age une variable contenant un pr\u00e9nom. On \u00e9vite : Types de variables \u2693\ufe0e Le type d'une variable d\u00e9finit l\u2019ensemble des valeurs qui peuvent lui \u00eatre affect\u00e9es ainsi que les op\u00e9rations et les fonctions utilisables. On peut utiliser la commande type() pour connaitre le type d\u2019une variable. Voici ce que cela donne Les instructions \u2693\ufe0e Une instruction est une commande qui doit \u00eatre ex\u00e9cut\u00e9e par la machine. L\u2019instruction FAIRE peut \u00eatre une affectation ou une expression : FAIRE y \u2190 1 affecte 1 \u00e0 la variable y (d\u00e9clare la variable si elle n\u2019existe pas en Python uniquement) FAIRE a = 2+y effectue le calcul 2+y et l\u2019affecte \u00e0 la variable a Expressions math\u00e9matiques \u2693\ufe0e Expressions de base: \u2693\ufe0e Modulo : reste de la division Division enti\u00e8re : quotient de la division Calcul sur les chaines de caract\u00e8res : La concat\u00e9nation est interpr\u00e9table entre deux variables de type string. \u2018infor\u2019+\u2019matique\u2019 donnera le r\u00e9sultat \u2018informatique\u2019. La multiplication * est une concat\u00e9nation d\u2019une m\u00eame variable r\u00e9p\u00e9t\u00e9e plusieurs fois. \"info\"*3=\u2019infoinfoinfo\u2019 Les bool\u00e9ens : \u2693\ufe0e Les bool\u00e9ens permettent de faire des comparaisons Autres op\u00e9rations math\u00e9matiques : \u2693\ufe0e Si cela ne suffit pas, il faut utiliser le module math qui contient les autres op\u00e9rations. Cependant il n'est pas disponible d'office, il faut l'importer. 1 from math import *","title":"D\u00e9marrer en programmation"},{"location":"Programmation/demarrer.html#bien-demarrer-en-programmation","text":"","title":"Bien d\u00e9marrer en programmation"},{"location":"Programmation/demarrer.html#afficher-et-entrer-une-valeur","text":"Deux instructions importantes lorsqu\u2019on apprend \u00e0 programmer en Python : Print() : permet d\u2019afficher quelque chose dans la console input() : permet de r\u00e9cup\u00e9rer une entr\u00e9e au clavier","title":"Afficher et entrer une valeur"},{"location":"Programmation/demarrer.html#les-variables","text":"Une variable est compos\u00e9e d\u2019un nom (ou identificateur) et d\u2019une valeur enregistr\u00e9e en m\u00e9moire. Le nom utilis\u00e9 doit \u00eatre repr\u00e9sentatif de son r\u00f4le dans le programme. Attention Attention \u00e0 nommer ses variables de fa\u00e7on coh\u00e9rente. Ne pas appeler age une variable contenant un pr\u00e9nom. On \u00e9vite :","title":"Les variables"},{"location":"Programmation/demarrer.html#types-de-variables","text":"Le type d'une variable d\u00e9finit l\u2019ensemble des valeurs qui peuvent lui \u00eatre affect\u00e9es ainsi que les op\u00e9rations et les fonctions utilisables. On peut utiliser la commande type() pour connaitre le type d\u2019une variable. Voici ce que cela donne","title":"Types de variables"},{"location":"Programmation/demarrer.html#les-instructions","text":"Une instruction est une commande qui doit \u00eatre ex\u00e9cut\u00e9e par la machine. L\u2019instruction FAIRE peut \u00eatre une affectation ou une expression : FAIRE y \u2190 1 affecte 1 \u00e0 la variable y (d\u00e9clare la variable si elle n\u2019existe pas en Python uniquement) FAIRE a = 2+y effectue le calcul 2+y et l\u2019affecte \u00e0 la variable a","title":"Les instructions"},{"location":"Programmation/demarrer.html#expressions-mathematiques","text":"","title":"Expressions math\u00e9matiques"},{"location":"Programmation/demarrer.html#expressions-de-base","text":"Modulo : reste de la division Division enti\u00e8re : quotient de la division Calcul sur les chaines de caract\u00e8res : La concat\u00e9nation est interpr\u00e9table entre deux variables de type string. \u2018infor\u2019+\u2019matique\u2019 donnera le r\u00e9sultat \u2018informatique\u2019. La multiplication * est une concat\u00e9nation d\u2019une m\u00eame variable r\u00e9p\u00e9t\u00e9e plusieurs fois. \"info\"*3=\u2019infoinfoinfo\u2019","title":"Expressions de base:"},{"location":"Programmation/demarrer.html#les-booleens","text":"Les bool\u00e9ens permettent de faire des comparaisons","title":"Les bool\u00e9ens :"},{"location":"Programmation/demarrer.html#autres-operations-mathematiques","text":"Si cela ne suffit pas, il faut utiliser le module math qui contient les autres op\u00e9rations. Cependant il n'est pas disponible d'office, il faut l'importer. 1 from math import *","title":"Autres op\u00e9rations math\u00e9matiques :"},{"location":"Programmation/fonction.html","text":"Fonctions et sp\u00e9cifications \u2693\ufe0e Cr\u00e9er une fonction \u2693\ufe0e Pour ne pas r\u00e9p\u00e9ter plusieurs fois la m\u00eame s\u00e9rie de calculs dans un programme, on peut d\u00e9finir une fonction qui \u00e0 chaque fois qu'on l'\u00e9x\u00e9cutera, r\u00e9p\u00e8tera les instrucions qu'elle contient. Le prof d'EPS Pour ne pas r\u00e9p\u00e9ter plusieurs fois les consignes de courses, un prof d'EPS d\u00e9finit la fonction courir_sur(distance,eleve) distance pourra changer de valeur en fonction des \u00e9l\u00e8ves (100m, 200m ou 400m). La fonction courir_sur(distance,eleve) consiste \u00e0 : \u00e9l\u00e8ve s'\u00e9chauffe en trotinnant sur 3 tours de piste \u00e9l\u00e8ve reprend son soufle et s'\u00e9tire \u00e9l\u00e8ve se rend sur la ligne de d\u00e9part quand le starter retentit \u00e9l\u00e8ve court le plus vite poussible sur distance \u00e9l\u00e8ve vient annoncer son temps au professeur. Une fois la fonction d\u00e9finie le prof n'a plus qu'\u00e0 dire \u00e0 certains \u00e9l\u00e8ves courir_sur(100m,Juliette) ou courir_sur(200m,Arthur) sans avoir \u00e0 r\u00e9p\u00e9ter les consignes. La valeur de distace et le nom de l'\u00e9l\u00e8ve sont appel\u00e9s param\u00e8tre ou argument de la fonction, et la valeur retourn\u00e9e (le temps) d\u00e9pend \u00e0 la fois du param\u00e8tre distance mais aussi de l'\u00e9l\u00e8ve. Attention Si le professeur explique la fonction aux \u00e9l\u00e8ves mais que jamais il ne l'utilise, personne ne courra. Il faut appeler la fonction pour qu'elle s'\u00e9x\u00e9cute. Une fonction en informatique est une portion de code r\u00e9alisant un t\u00e2che bien pr\u00e9cise et qui pourra \u00eatre utilis\u00e9e une ou plusieurs fois dans la suite du programme. Les fonctions informatiques acqui\u00e8rent tout leur potentiel avec : \u2022 une entr\u00e9e, qui regroupe des variables qui servent de param\u00e8tres \u2022 une sortie , qui est un r\u00e9sultat renvoy\u00e9 par la fonction (et qui souvent d\u00e9pendra des param\u00e8tres d\u2019entr\u00e9e). En python pour d\u00e9finir une fonction on utilise le mot cl\u00e9 def suivi du nom de la fonction et des param\u00e8tres. Pour la valeur calcul\u00e9e on utilisera le mot cl\u00e9 return . Exemple 1 2 3 def calcule_cube ( a ): cube = a * a * a return cube Cette fonction calcule le cube d\u2019un nombre, par exemple calcule_cube(2), le nombre 2 remplacera a dans le calcul. L'ex\u00e9cution n\u2019affiche rien mais envoie la valeur 8. Si on vaut afficher la valeur, il faudra ajouter print(calcule_cube(2)) . Remarque: ce code seul \"ne fait rien\", il d\u00e9finit une fonction seulement... tant qu'elle n'est pas utilis\u00e9e, rien ne se passe Si on ajoute dans le code les lignes ci-desous, alors la fonction est utilis\u00e9e et elle calcule le cube de 2 puis la somme 3^3 + 4^3. 1 2 3 4 5 print ( calcule_cube ( 2 )) x = 3 y = 4 z = calcule_cube ( x ) + calcule_cube ( y ) print ( z ) De fa\u00e7on g\u00e9n\u00e9rale, la strucutre \u00e0 respect\u00e9e est celle-ci : Et sous forme de code : 1 2 3 4 5 6 7 8 9 10 def ma_fonction ( arg1 , arg2 ): # ma_fonction va utiliser deux arguments arg1 et arg2 qui pourront avoir des valeurs diff\u00e9retes \u00e0 chauqe appel resultat = arg1 + arg2 #on additionne les deux param\u00e8tres return resultat # on retourne le r\u00e9sultat #on ex\u00e9cute la fonction a = ma_fonction ( 2 , 3 ) # a prend la valeur du r\u00e9sultat de la fonction soit 5 b = ma_fonction ( 'coucou' , 'toi' ) #b prend la valeur du r\u00e9sultat soit 'coucoutoi' #on affiche les r\u00e9sultats print ( a ) print ( b ) Remarque on peut ex\u00e9cuter la fonction avec un print(ma_fonction(2,3)) qui affichera le r\u00e9sultat mais ne le retiendra pas. Si on \u00e9crit simplement ma_fonction(2,3) la fonction sera ex\u00e9cut\u00e9e mais le r\u00e9sultat ne sera pas affich\u00e9 ni m\u00e9moris\u00e9. Une fonction peut avoir plusieurs param\u00e8tres et renvoyer plusieurs r\u00e9sultats : 1 2 3 4 5 6 7 def somme_produit ( a , b ): \"\"\"Calcule la somme et le produit de deux nombres\"\"\" s = a + b p = a * b return s , p print ( somme_produit ( 6 , 7 )) Remarques \u2022 Il peut y avoir plusieurs param\u00e8tres en entr\u00e9e. \u2022 Il peut y avoir plusieurs r\u00e9sultats en sortie. \u2022 Tr\u00e8s important! Il ne faut pas confondre afficher et renvoyer une valeur. L\u2019affichage (par la commande print() ) affiche juste quelque chose \u00e0 l\u2019\u00e9cran. La plupart des fonctions n\u2019affichent rien, mais renvoient une valeur (ou plusieurs). C\u2019est beaucoup plus utile car cette valeur peut \u00eatre utilis\u00e9e ailleurs dans le programme. \u2022 D\u00e8s que le programme rencontre l\u2019instruction return , la fonction s\u2019arr\u00eate et renvoie le r\u00e9sultat. Il peut y avoir plusieurs fois l\u2019instruction return dans une fonction mais une seule sera ex\u00e9cut\u00e9e. On peut aussi ne pas mettre d\u2019instruction return si la fonction ne renvoie rien. Fonction sans valeur de retour et/ou sans arguments \u2693\ufe0e Une fonction qui ne renvoie pas de valeur est appel\u00e9e proc\u00e9dure elle a une simple fonction d'affichage. La fonction compteur() sans argument s'\u00e9x\u00e9cutera toujours de la m\u00eame fa\u00e7on. Affichage de la valeur Si on uilise l'instruction print(compteur()) le programme retournera None . En effet, l'instruction print pour une fonction a pour effet d'afficher la valeur retourn\u00e9e par l'instruction return , or ici il n'y en a pas. Port\u00e9e d'une variable \u2693\ufe0e Une variable est appel\u00e9e locale lorsqu'elle n'est utilis\u00e9e que dans la fonction. Le programme principal ne reconnait pas la variable. Si elle est d\u00e9finie dans tout le programme elle est appel\u00e9e variable globale . 1 2 3 4 5 6 7 def vol_sphere ( r ): cube = r * r * r vol = 4 * cube * 3.14 / 3 return vol v = vol_sphere ( 3 ) print ( cube ) La variable cube est d\u00e9finie DANS la fonction et n'est donc pas reconnu par le programme principal. v est d\u00e9finie dans le programme principale, elle sera reconnue partout, c'est une variable globale. Attention aux confusions 1 2 3 4 5 6 a = 15 def calcul ( nb ): a = 12 return nb + a print ( calcul ( 2 )) #renvoie le calcul fait avec a=12 print ( a ) #renvoie 15 a=15 variable globale valable dans tout le programme sauf dans la fonction. a=12 est une variable locale valable que dans la fonction. ATTENTION : Ne pas nommer de la m\u00eame fa\u00e7on deux variables! Structurer son script \u2693\ufe0e Le programme commence \u00e0 \u00eatre long, il faut ranger: On d\u00e9finit le format de codage du texte : 1 2 # -*- coding: utf-8 -*- # coding : utf-8 Importer les fonctions de modules externes 1 from math import cos , pi D\u00e9finition de vos fonctions 1 2 Def ma_fonction ( arg1 , arg2 ): return arg1 + arg2 Corps principal du programme main Le code est TRES long?! On utilise plusieurs fichiers et on les importe comme une biblioth\u00e8que normale Plusieurs possibilit\u00e9s d\u2019import dans main : 1 2 3 4 5 6 7 8 from tests import affiche affiche () import tests tests . affiche () import tests as ts ts . affiche () Conventions \u2693\ufe0e nom_de_ma_fonction : pour les fonctions, variables et m\u00e9thodes tout en minuscule avec _ pour s\u00e9parer les mots. MaClasse : pour le nom des classes (en terminale). Majuscule pour chaque nouveau mot et mots coll\u00e9s. Les constantes sont enti\u00e8rement en majuscule: NOM_DE_MA_CONSTANTE . Une constante est une variable \u00e0 laquelle on donne une valeur qui ne changera pas dans tout le programme. Documenter une fonction \u2693\ufe0e Le docstring se place juste apr\u00e8s la cr\u00e9ation de la fonction par def . Il commence et termine par trois guillemets \". Le docstring doit contenir : La descripton et le r\u00f4le de la fonction les param\u00e8tres pass\u00e9s en arguments (type et r\u00f4le) le type de ce qui est retourn\u00e9 Ce docstring, peut \u00eatre lu en tapant: help(nom_de_ma_fonction) Ou nom_de_ma_fonction.__doc__ Tr\u00e8s utile lorsque le code est r\u00e9utilis\u00e9 ensuite par quelqu\u2019un d\u2019autre. Tester une fonction \u2693\ufe0e Tests unitaires \u2693\ufe0e Ils permettent de savoir si une fonction est correctement impl\u00e9ment\u00e9e. On v\u00e9rifie notamment les valeurs limites, les cas particuliers et les erreurs. On les place dans la docstring. Cr\u00e9er des tests unitaires : En cas d\u2019erreur (un test n\u2019est pas ex\u00e9cut\u00e9 correctement). On modifie le code pr\u00e9c\u00e9det en rempla\u00e7ant le r\u00e9sultat de carr\u00e9(2) par 3 au lieu de 4 pour g\u00e9n\u00e9rer une erreur. Ici, un test sur 3 de la fonction carr\u00e9 ne renvoie pas ce qu\u2019on attend: Assertions \u2693\ufe0e On souhaite ici que la fonction calcule la somme de deux entiers et uniquement des entiers. Il va donc falloir v\u00e9rifer que l'utilisateur en entrer des entiers : 1 2 3 4 5 6 def somme ( x , y ): assert ( isinstance ( x , int )) assert ( isinstance ( y , int )) s = x + y return s print ( somme ( 1 , 2.2 )) Une assertion (mot cl\u00e9 assert ) permet de v\u00e9rifier si une condition est respect\u00e9e \u00e0 un moment du code. Ici on v\u00e9rifie que x et y sont des entiers avant de faire le calcul. Ici une erreur d'assertion est d\u00e9tect\u00e9e puisque y est un flottant. Avantage sur tests unitaires : Permet de placer des tests en cours de fonction et pas seulement sur le r\u00e9sultat Permet de donner un message diff\u00e9rent selon l\u2019erreur d\u00e9tect\u00e9e Par exemple, on demande son age \u00e0 l'utilisateur. On s'attend \u00e0 ce qu'il entre un nombre positif. On va donc tester si c'est un nombre et s'il est positifi avec des messages d'erreur adapt\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 age = input ( 'quel est ton age? ' ) try : #bloc \u00e0 tester age = int ( age ) #on converti en entier assert age >= 0 except ValueError : #bloc \u00e0 executer en cas de d\u00e9tectiion d'une erreur li\u00e9 \u00e0 la valeur print ( 'on demande un nombre' ) except AssertionError : #bloc \u00e0 executer si l'assertion l\u00e8ve une erreur print ( 'on veut un nombre positif SVP!' ) else : #aucune erreur d\u00e9tect\u00e9e print ( f 'tu as { age } ans' ) finally : # \u00e0 ex\u00e9cuter quoiqu'il arrive print ( 'merci d \\' avoir jou\u00e9!' ) Ce bloc permettra de tester les entr\u00e9es de l'utilisateur lors de programmes plus complexe. Tester des entr\u00e9es sans sortir du programme Tant que l'age entr\u00e9 ne sera pas un entier positif, le programme continue de proposer d'entrer une valeur. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ok = True while ok : #tant que l'on a pas valid\u00e9 l'entr\u00e9e age = input ( 'quel est ton age? ' ) try : age = int ( age ) assert age >= 0 except ValueError : print ( 'on demande un nombre' ) except AssertionError : print ( 'on veut un nombre positif SVP!' ) else : #aucune erreur d\u00e9tect\u00e9e print ( f 'tu as { age } ans' ) ok = False #l'entr\u00e9e est valid\u00e9e on sort de la boucle while","title":"Fonctions et sp\u00e9cifications"},{"location":"Programmation/fonction.html#fonctions-et-specifications","text":"","title":"Fonctions et sp\u00e9cifications"},{"location":"Programmation/fonction.html#creer-une-fonction","text":"Pour ne pas r\u00e9p\u00e9ter plusieurs fois la m\u00eame s\u00e9rie de calculs dans un programme, on peut d\u00e9finir une fonction qui \u00e0 chaque fois qu'on l'\u00e9x\u00e9cutera, r\u00e9p\u00e8tera les instrucions qu'elle contient. Le prof d'EPS Pour ne pas r\u00e9p\u00e9ter plusieurs fois les consignes de courses, un prof d'EPS d\u00e9finit la fonction courir_sur(distance,eleve) distance pourra changer de valeur en fonction des \u00e9l\u00e8ves (100m, 200m ou 400m). La fonction courir_sur(distance,eleve) consiste \u00e0 : \u00e9l\u00e8ve s'\u00e9chauffe en trotinnant sur 3 tours de piste \u00e9l\u00e8ve reprend son soufle et s'\u00e9tire \u00e9l\u00e8ve se rend sur la ligne de d\u00e9part quand le starter retentit \u00e9l\u00e8ve court le plus vite poussible sur distance \u00e9l\u00e8ve vient annoncer son temps au professeur. Une fois la fonction d\u00e9finie le prof n'a plus qu'\u00e0 dire \u00e0 certains \u00e9l\u00e8ves courir_sur(100m,Juliette) ou courir_sur(200m,Arthur) sans avoir \u00e0 r\u00e9p\u00e9ter les consignes. La valeur de distace et le nom de l'\u00e9l\u00e8ve sont appel\u00e9s param\u00e8tre ou argument de la fonction, et la valeur retourn\u00e9e (le temps) d\u00e9pend \u00e0 la fois du param\u00e8tre distance mais aussi de l'\u00e9l\u00e8ve. Attention Si le professeur explique la fonction aux \u00e9l\u00e8ves mais que jamais il ne l'utilise, personne ne courra. Il faut appeler la fonction pour qu'elle s'\u00e9x\u00e9cute. Une fonction en informatique est une portion de code r\u00e9alisant un t\u00e2che bien pr\u00e9cise et qui pourra \u00eatre utilis\u00e9e une ou plusieurs fois dans la suite du programme. Les fonctions informatiques acqui\u00e8rent tout leur potentiel avec : \u2022 une entr\u00e9e, qui regroupe des variables qui servent de param\u00e8tres \u2022 une sortie , qui est un r\u00e9sultat renvoy\u00e9 par la fonction (et qui souvent d\u00e9pendra des param\u00e8tres d\u2019entr\u00e9e). En python pour d\u00e9finir une fonction on utilise le mot cl\u00e9 def suivi du nom de la fonction et des param\u00e8tres. Pour la valeur calcul\u00e9e on utilisera le mot cl\u00e9 return . Exemple 1 2 3 def calcule_cube ( a ): cube = a * a * a return cube Cette fonction calcule le cube d\u2019un nombre, par exemple calcule_cube(2), le nombre 2 remplacera a dans le calcul. L'ex\u00e9cution n\u2019affiche rien mais envoie la valeur 8. Si on vaut afficher la valeur, il faudra ajouter print(calcule_cube(2)) . Remarque: ce code seul \"ne fait rien\", il d\u00e9finit une fonction seulement... tant qu'elle n'est pas utilis\u00e9e, rien ne se passe Si on ajoute dans le code les lignes ci-desous, alors la fonction est utilis\u00e9e et elle calcule le cube de 2 puis la somme 3^3 + 4^3. 1 2 3 4 5 print ( calcule_cube ( 2 )) x = 3 y = 4 z = calcule_cube ( x ) + calcule_cube ( y ) print ( z ) De fa\u00e7on g\u00e9n\u00e9rale, la strucutre \u00e0 respect\u00e9e est celle-ci : Et sous forme de code : 1 2 3 4 5 6 7 8 9 10 def ma_fonction ( arg1 , arg2 ): # ma_fonction va utiliser deux arguments arg1 et arg2 qui pourront avoir des valeurs diff\u00e9retes \u00e0 chauqe appel resultat = arg1 + arg2 #on additionne les deux param\u00e8tres return resultat # on retourne le r\u00e9sultat #on ex\u00e9cute la fonction a = ma_fonction ( 2 , 3 ) # a prend la valeur du r\u00e9sultat de la fonction soit 5 b = ma_fonction ( 'coucou' , 'toi' ) #b prend la valeur du r\u00e9sultat soit 'coucoutoi' #on affiche les r\u00e9sultats print ( a ) print ( b ) Remarque on peut ex\u00e9cuter la fonction avec un print(ma_fonction(2,3)) qui affichera le r\u00e9sultat mais ne le retiendra pas. Si on \u00e9crit simplement ma_fonction(2,3) la fonction sera ex\u00e9cut\u00e9e mais le r\u00e9sultat ne sera pas affich\u00e9 ni m\u00e9moris\u00e9. Une fonction peut avoir plusieurs param\u00e8tres et renvoyer plusieurs r\u00e9sultats : 1 2 3 4 5 6 7 def somme_produit ( a , b ): \"\"\"Calcule la somme et le produit de deux nombres\"\"\" s = a + b p = a * b return s , p print ( somme_produit ( 6 , 7 )) Remarques \u2022 Il peut y avoir plusieurs param\u00e8tres en entr\u00e9e. \u2022 Il peut y avoir plusieurs r\u00e9sultats en sortie. \u2022 Tr\u00e8s important! Il ne faut pas confondre afficher et renvoyer une valeur. L\u2019affichage (par la commande print() ) affiche juste quelque chose \u00e0 l\u2019\u00e9cran. La plupart des fonctions n\u2019affichent rien, mais renvoient une valeur (ou plusieurs). C\u2019est beaucoup plus utile car cette valeur peut \u00eatre utilis\u00e9e ailleurs dans le programme. \u2022 D\u00e8s que le programme rencontre l\u2019instruction return , la fonction s\u2019arr\u00eate et renvoie le r\u00e9sultat. Il peut y avoir plusieurs fois l\u2019instruction return dans une fonction mais une seule sera ex\u00e9cut\u00e9e. On peut aussi ne pas mettre d\u2019instruction return si la fonction ne renvoie rien.","title":"Cr\u00e9er une fonction"},{"location":"Programmation/fonction.html#fonction-sans-valeur-de-retour-etou-sans-arguments","text":"Une fonction qui ne renvoie pas de valeur est appel\u00e9e proc\u00e9dure elle a une simple fonction d'affichage. La fonction compteur() sans argument s'\u00e9x\u00e9cutera toujours de la m\u00eame fa\u00e7on. Affichage de la valeur Si on uilise l'instruction print(compteur()) le programme retournera None . En effet, l'instruction print pour une fonction a pour effet d'afficher la valeur retourn\u00e9e par l'instruction return , or ici il n'y en a pas.","title":"Fonction sans valeur de retour et/ou sans arguments"},{"location":"Programmation/fonction.html#portee-dune-variable","text":"Une variable est appel\u00e9e locale lorsqu'elle n'est utilis\u00e9e que dans la fonction. Le programme principal ne reconnait pas la variable. Si elle est d\u00e9finie dans tout le programme elle est appel\u00e9e variable globale . 1 2 3 4 5 6 7 def vol_sphere ( r ): cube = r * r * r vol = 4 * cube * 3.14 / 3 return vol v = vol_sphere ( 3 ) print ( cube ) La variable cube est d\u00e9finie DANS la fonction et n'est donc pas reconnu par le programme principal. v est d\u00e9finie dans le programme principale, elle sera reconnue partout, c'est une variable globale. Attention aux confusions 1 2 3 4 5 6 a = 15 def calcul ( nb ): a = 12 return nb + a print ( calcul ( 2 )) #renvoie le calcul fait avec a=12 print ( a ) #renvoie 15 a=15 variable globale valable dans tout le programme sauf dans la fonction. a=12 est une variable locale valable que dans la fonction. ATTENTION : Ne pas nommer de la m\u00eame fa\u00e7on deux variables!","title":"Port\u00e9e d'une variable"},{"location":"Programmation/fonction.html#structurer-son-script","text":"Le programme commence \u00e0 \u00eatre long, il faut ranger: On d\u00e9finit le format de codage du texte : 1 2 # -*- coding: utf-8 -*- # coding : utf-8 Importer les fonctions de modules externes 1 from math import cos , pi D\u00e9finition de vos fonctions 1 2 Def ma_fonction ( arg1 , arg2 ): return arg1 + arg2 Corps principal du programme main Le code est TRES long?! On utilise plusieurs fichiers et on les importe comme une biblioth\u00e8que normale Plusieurs possibilit\u00e9s d\u2019import dans main : 1 2 3 4 5 6 7 8 from tests import affiche affiche () import tests tests . affiche () import tests as ts ts . affiche ()","title":"Structurer son script"},{"location":"Programmation/fonction.html#conventions","text":"nom_de_ma_fonction : pour les fonctions, variables et m\u00e9thodes tout en minuscule avec _ pour s\u00e9parer les mots. MaClasse : pour le nom des classes (en terminale). Majuscule pour chaque nouveau mot et mots coll\u00e9s. Les constantes sont enti\u00e8rement en majuscule: NOM_DE_MA_CONSTANTE . Une constante est une variable \u00e0 laquelle on donne une valeur qui ne changera pas dans tout le programme.","title":"Conventions"},{"location":"Programmation/fonction.html#documenter-une-fonction","text":"Le docstring se place juste apr\u00e8s la cr\u00e9ation de la fonction par def . Il commence et termine par trois guillemets \". Le docstring doit contenir : La descripton et le r\u00f4le de la fonction les param\u00e8tres pass\u00e9s en arguments (type et r\u00f4le) le type de ce qui est retourn\u00e9 Ce docstring, peut \u00eatre lu en tapant: help(nom_de_ma_fonction) Ou nom_de_ma_fonction.__doc__ Tr\u00e8s utile lorsque le code est r\u00e9utilis\u00e9 ensuite par quelqu\u2019un d\u2019autre.","title":"Documenter une fonction"},{"location":"Programmation/fonction.html#tester-une-fonction","text":"","title":"Tester une fonction"},{"location":"Programmation/fonction.html#tests-unitaires","text":"Ils permettent de savoir si une fonction est correctement impl\u00e9ment\u00e9e. On v\u00e9rifie notamment les valeurs limites, les cas particuliers et les erreurs. On les place dans la docstring. Cr\u00e9er des tests unitaires : En cas d\u2019erreur (un test n\u2019est pas ex\u00e9cut\u00e9 correctement). On modifie le code pr\u00e9c\u00e9det en rempla\u00e7ant le r\u00e9sultat de carr\u00e9(2) par 3 au lieu de 4 pour g\u00e9n\u00e9rer une erreur. Ici, un test sur 3 de la fonction carr\u00e9 ne renvoie pas ce qu\u2019on attend:","title":"Tests unitaires"},{"location":"Programmation/fonction.html#assertions","text":"On souhaite ici que la fonction calcule la somme de deux entiers et uniquement des entiers. Il va donc falloir v\u00e9rifer que l'utilisateur en entrer des entiers : 1 2 3 4 5 6 def somme ( x , y ): assert ( isinstance ( x , int )) assert ( isinstance ( y , int )) s = x + y return s print ( somme ( 1 , 2.2 )) Une assertion (mot cl\u00e9 assert ) permet de v\u00e9rifier si une condition est respect\u00e9e \u00e0 un moment du code. Ici on v\u00e9rifie que x et y sont des entiers avant de faire le calcul. Ici une erreur d'assertion est d\u00e9tect\u00e9e puisque y est un flottant. Avantage sur tests unitaires : Permet de placer des tests en cours de fonction et pas seulement sur le r\u00e9sultat Permet de donner un message diff\u00e9rent selon l\u2019erreur d\u00e9tect\u00e9e Par exemple, on demande son age \u00e0 l'utilisateur. On s'attend \u00e0 ce qu'il entre un nombre positif. On va donc tester si c'est un nombre et s'il est positifi avec des messages d'erreur adapt\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 age = input ( 'quel est ton age? ' ) try : #bloc \u00e0 tester age = int ( age ) #on converti en entier assert age >= 0 except ValueError : #bloc \u00e0 executer en cas de d\u00e9tectiion d'une erreur li\u00e9 \u00e0 la valeur print ( 'on demande un nombre' ) except AssertionError : #bloc \u00e0 executer si l'assertion l\u00e8ve une erreur print ( 'on veut un nombre positif SVP!' ) else : #aucune erreur d\u00e9tect\u00e9e print ( f 'tu as { age } ans' ) finally : # \u00e0 ex\u00e9cuter quoiqu'il arrive print ( 'merci d \\' avoir jou\u00e9!' ) Ce bloc permettra de tester les entr\u00e9es de l'utilisateur lors de programmes plus complexe. Tester des entr\u00e9es sans sortir du programme Tant que l'age entr\u00e9 ne sera pas un entier positif, le programme continue de proposer d'entrer une valeur. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ok = True while ok : #tant que l'on a pas valid\u00e9 l'entr\u00e9e age = input ( 'quel est ton age? ' ) try : age = int ( age ) assert age >= 0 except ValueError : print ( 'on demande un nombre' ) except AssertionError : print ( 'on veut un nombre positif SVP!' ) else : #aucune erreur d\u00e9tect\u00e9e print ( f 'tu as { age } ans' ) ok = False #l'entr\u00e9e est valid\u00e9e on sort de la boucle while","title":"Assertions"},{"location":"Programmation/kivy.html","text":"","title":"Kivy"},{"location":"Programmation/lire_ecrire.html","text":"Lire et \u00e9crire dans un fichier \u2693\ufe0e Lorsque l'on fait du traitement de donn\u00e9es, les informations sont stock\u00e9es dans des fichiers au format csv ou txt . Ces fichiers prennent tr\u00e8s peu de place, compte tenu du nombre de donn\u00e9es qu'ils contiennent. Il faut alors importer les donn\u00e9es dans le programme python \u00e0 partir de ces fichiers. D'autre part, il peut \u00eatre interessant de sauvegarder des donn\u00e9es entre deux \u00e9x\u00e9cutions d'un m\u00eame programme. Sauvegarder des scores, des noms dans un r\u00e9pertoire, ... Nous allons donc voir comment importer ou exporter des donn\u00e9es. Chemin relatif et absolu \u2693\ufe0e Tout d'abord, il est imp\u00e9ratif de ma\u00eetriser la notion d'aborescence pour savoir o\u00f9 se trouve le fichier de donn\u00e9es par rapport au fichier python. Un petit tour par ici pour comprendre la notion de chemin. Dans la suite, nous consid\u00e8rerons que les fichiers de donn\u00e9es se trouvent dans le m\u00eame r\u00e9pertoire que le ficher python. Lire un fichier .txt \u2693\ufe0e ouvrir et lire le fichier \u2693\ufe0e Le fichier se nomme donnee.txt : 1 2 3 4 with open ( 'donnees.txt' , \"r\" ) as file : #on cr\u00e9\u00e9 une variable file qui va contenir le fichier contenu = file . read () # la variable contenu va r\u00e9cup\u00e9rer ce qu'on lit das le fichier print ( contenu ) #affiche ce qui a \u00e9t\u00e9 lu file . close () #ferme le fichier La varirable contenu ici contient tout le fichier tel qu'il a \u00e9t\u00e9 cr\u00e9\u00e9. Warning On prendra soin de fermer le fichier apr\u00e8s chaque manipulation pour ne pas prendre le risque de perdre des donn\u00e9es. Info Les diff\u00e9rents modes d'ouverture d'un fichier : \"r\" : lecture seule \"w\" : \u00e9criture avec remplacement (si le fichier n'est pas vide \u00e7a \u00e9crit par dessus) \"a\" : \u00e9criture avec ajout en fin de fichier \"x\" : leture et \u00e9criture Note Si on remplace la m\u00e9thode read par readline ou readlines le rendu peut \u00eatre diff\u00e9rent: read() : lit tout le fichier d'un coup readline() : lit une ligne \u00e0 la fois readlines() : lit toutes les lignes en les s\u00e9parant Ecrire dans un fichier .txt \u2693\ufe0e Pour \u00e9crire, on utilisera le mode w . 1 2 3 4 5 with open ( 'mon_fichier.txt' , \"w\" ) as fichier : # si le fichier n'exite pas il sera cr\u00e9\u00e9 fichier . write ( 'ligne 1 \\n ' ) fichier . write ( 'ligne 2 \\n ' ) fichier . write ( str ( 15 ), ' \\n ' ) fichier . close () !!! info On remarque que... - On a ajout\u00e9 '\\n' \u00e0 la fin des lignes pour que dans le fichier il y ait un retour \u00e0 la ligne. - On ne peut que \u00e9crire des chaines de caract\u00e8res, donc si on veut saisir un nombre, il faut au prr\u00e9alable le convertir en chaine de caract\u00e8res \u00e0 l'aide de la fonction str() . Les fichiers .csv \u2693\ufe0e Les fichiers de ce format (comma separated values) sont des fichiers permettant de stocker des tableaux de donn\u00e9es, dont les valeurs sont s\u00e9par\u00e9es par une virgule (ou un point virgule lorsque la vigule est utilis\u00e9e comme s\u00e9parateur d\u00e9cimal). Ici par exemple, on trouve \u00e0 gauche le fichier au format .csv et \u00e0 droite le rendu avec un tableur : Pour r\u00e9cup\u00e9rer les informations lignes par lignes, on peut executer ceci : 1 2 3 4 5 6 import csv with open ( 'mon_fichier.csv' , \"r\" ) as f : # fichier transf\u00e9r\u00e9 dans la variable f contenu_csv = csv . reader ( f ) #tout le contenu de f est lu et affect\u00e9 \u00e0 la variable contenu_csv for ligne in contenu_csv : print ( ligne ) f . close () Ici par exemple, le fichier contenait une liste de noms et prenoms d'employ\u00e9s, le service et le mois d'anniversaire. Note A noter ici que l'on a besoin d'importer le module csv pour traiter le fichier. 1 2 3 4 ['name', 'department', 'birthday month'] ['John Smith', 'compta', 'novembre'] ['Erica Meyers', 'Technique', 'Mars'] ['Joh Doe', 'administratif', 'juin'] chaque ligne, contiendra la liste des valeurs de la ligne du fichier csv. En revanche, on peut avoir besoin de r\u00e9cuprer dans une liste les \u00e9l\u00e9ments par colonnes. Par exemple si on souhaite avoir la liste des noms et celle des mois d'anniversaire. On ex\u00e9cutera alors ceci, qui pour chaque ligne va lire les donn\u00e9es une par une et les ranger dans la bonne liste. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import csv with open ( 'mon_fichier.csv' , \"r\" ) as f : contenu_csv = csv . reader ( f ) ligneNom = [] ligneDep = [] ligneAnniv = [] for ligne in contenu_csv : ligneNom . append ( ligne [ 0 ]) ligneDep . append ( ligne [ 1 ]) ligneAnniv . append ( ligne [ 2 ]) f . close () print ( ligneNom ) print ( ligneDep ) print ( ligneAnniv ) Ecrire dans un fichier csv \u2693\ufe0e En mode \u00e9criture, on \u00e9crit ligne par lignes les informations que l'on veut stocker. 1 2 3 4 5 6 7 import csv with open ( 'moncsv.csv' , 'w' ) as file : aecrire = csv . writer ( file ) aecrire . writerow ([ 0 , 1 , 2 , 3 ]) aecrire . writerow ([ 'coucou' , 'bonbon' , 'artichauts' ]) for i in range ( 100 ): aecrire . writerow ([ 10 , 20 , 30 ]) Cas des dictionnaires \u2693\ufe0e Les dictionnaires peuvent \u00eatre sauvegard\u00e9s en utilisant le module pickle . Ce module ne permet pas d'avoir un rendu lisible mais peut etre tr\u00e8s pratique. Par exemple, on cr\u00e9e un dictionnaire contenant le nom et le num\u00e9ro de certains d\u00e9partements et on l'enregistre dans un fichier appel\u00e9 dep.txt 1 2 3 4 5 6 7 8 9 import pickle #le dictionnaire que l'on souhaite sauvegarder departement = { 36 : 'Indre' , 30 : 'Gard' , 75 : 'Paris' } #on ouvre un fichier dont le nom est dep (il sera cr\u00e9\u00e9 s'il n'existe pas) et on le place dans une variable appel\u00e9e fichier fichier = open ( 'dep.txt' , 'wb' ) #on enregistre le dictionnaire dans le fichier pickle . dump ( departement , fichier ) #on ferme le fichier fichier . close () Puis on veut r\u00e9cup\u00e9rer les noms de d\u00e9partement pr\u00e9alablement enregistr\u00e9s: 1 2 3 4 5 6 7 8 9 import pickle #ouverture du fichier f = open ( 'dep.txt' , 'rb' ) #chargement du contenu du fichier dans la variable Dept Dept = pickle . load ( f ) f . close () print ( Dept ) On obtient {36: 'Indre', 30: 'Gard', 75: 'Paris'} .","title":"Lire et Ecrire dans un fichier"},{"location":"Programmation/lire_ecrire.html#lire-et-ecrire-dans-un-fichier","text":"Lorsque l'on fait du traitement de donn\u00e9es, les informations sont stock\u00e9es dans des fichiers au format csv ou txt . Ces fichiers prennent tr\u00e8s peu de place, compte tenu du nombre de donn\u00e9es qu'ils contiennent. Il faut alors importer les donn\u00e9es dans le programme python \u00e0 partir de ces fichiers. D'autre part, il peut \u00eatre interessant de sauvegarder des donn\u00e9es entre deux \u00e9x\u00e9cutions d'un m\u00eame programme. Sauvegarder des scores, des noms dans un r\u00e9pertoire, ... Nous allons donc voir comment importer ou exporter des donn\u00e9es.","title":"Lire et \u00e9crire dans un fichier"},{"location":"Programmation/lire_ecrire.html#chemin-relatif-et-absolu","text":"Tout d'abord, il est imp\u00e9ratif de ma\u00eetriser la notion d'aborescence pour savoir o\u00f9 se trouve le fichier de donn\u00e9es par rapport au fichier python. Un petit tour par ici pour comprendre la notion de chemin. Dans la suite, nous consid\u00e8rerons que les fichiers de donn\u00e9es se trouvent dans le m\u00eame r\u00e9pertoire que le ficher python.","title":"Chemin relatif et absolu"},{"location":"Programmation/lire_ecrire.html#lire-un-fichier-txt","text":"","title":"Lire un fichier .txt"},{"location":"Programmation/lire_ecrire.html#ouvrir-et-lire-le-fichier","text":"Le fichier se nomme donnee.txt : 1 2 3 4 with open ( 'donnees.txt' , \"r\" ) as file : #on cr\u00e9\u00e9 une variable file qui va contenir le fichier contenu = file . read () # la variable contenu va r\u00e9cup\u00e9rer ce qu'on lit das le fichier print ( contenu ) #affiche ce qui a \u00e9t\u00e9 lu file . close () #ferme le fichier La varirable contenu ici contient tout le fichier tel qu'il a \u00e9t\u00e9 cr\u00e9\u00e9. Warning On prendra soin de fermer le fichier apr\u00e8s chaque manipulation pour ne pas prendre le risque de perdre des donn\u00e9es. Info Les diff\u00e9rents modes d'ouverture d'un fichier : \"r\" : lecture seule \"w\" : \u00e9criture avec remplacement (si le fichier n'est pas vide \u00e7a \u00e9crit par dessus) \"a\" : \u00e9criture avec ajout en fin de fichier \"x\" : leture et \u00e9criture Note Si on remplace la m\u00e9thode read par readline ou readlines le rendu peut \u00eatre diff\u00e9rent: read() : lit tout le fichier d'un coup readline() : lit une ligne \u00e0 la fois readlines() : lit toutes les lignes en les s\u00e9parant","title":"ouvrir et lire le fichier"},{"location":"Programmation/lire_ecrire.html#ecrire-dans-un-fichier-txt","text":"Pour \u00e9crire, on utilisera le mode w . 1 2 3 4 5 with open ( 'mon_fichier.txt' , \"w\" ) as fichier : # si le fichier n'exite pas il sera cr\u00e9\u00e9 fichier . write ( 'ligne 1 \\n ' ) fichier . write ( 'ligne 2 \\n ' ) fichier . write ( str ( 15 ), ' \\n ' ) fichier . close () !!! info On remarque que... - On a ajout\u00e9 '\\n' \u00e0 la fin des lignes pour que dans le fichier il y ait un retour \u00e0 la ligne. - On ne peut que \u00e9crire des chaines de caract\u00e8res, donc si on veut saisir un nombre, il faut au prr\u00e9alable le convertir en chaine de caract\u00e8res \u00e0 l'aide de la fonction str() .","title":"Ecrire dans un fichier .txt"},{"location":"Programmation/lire_ecrire.html#les-fichiers-csv","text":"Les fichiers de ce format (comma separated values) sont des fichiers permettant de stocker des tableaux de donn\u00e9es, dont les valeurs sont s\u00e9par\u00e9es par une virgule (ou un point virgule lorsque la vigule est utilis\u00e9e comme s\u00e9parateur d\u00e9cimal). Ici par exemple, on trouve \u00e0 gauche le fichier au format .csv et \u00e0 droite le rendu avec un tableur : Pour r\u00e9cup\u00e9rer les informations lignes par lignes, on peut executer ceci : 1 2 3 4 5 6 import csv with open ( 'mon_fichier.csv' , \"r\" ) as f : # fichier transf\u00e9r\u00e9 dans la variable f contenu_csv = csv . reader ( f ) #tout le contenu de f est lu et affect\u00e9 \u00e0 la variable contenu_csv for ligne in contenu_csv : print ( ligne ) f . close () Ici par exemple, le fichier contenait une liste de noms et prenoms d'employ\u00e9s, le service et le mois d'anniversaire. Note A noter ici que l'on a besoin d'importer le module csv pour traiter le fichier. 1 2 3 4 ['name', 'department', 'birthday month'] ['John Smith', 'compta', 'novembre'] ['Erica Meyers', 'Technique', 'Mars'] ['Joh Doe', 'administratif', 'juin'] chaque ligne, contiendra la liste des valeurs de la ligne du fichier csv. En revanche, on peut avoir besoin de r\u00e9cuprer dans une liste les \u00e9l\u00e9ments par colonnes. Par exemple si on souhaite avoir la liste des noms et celle des mois d'anniversaire. On ex\u00e9cutera alors ceci, qui pour chaque ligne va lire les donn\u00e9es une par une et les ranger dans la bonne liste. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import csv with open ( 'mon_fichier.csv' , \"r\" ) as f : contenu_csv = csv . reader ( f ) ligneNom = [] ligneDep = [] ligneAnniv = [] for ligne in contenu_csv : ligneNom . append ( ligne [ 0 ]) ligneDep . append ( ligne [ 1 ]) ligneAnniv . append ( ligne [ 2 ]) f . close () print ( ligneNom ) print ( ligneDep ) print ( ligneAnniv )","title":"Les fichiers .csv"},{"location":"Programmation/lire_ecrire.html#ecrire-dans-un-fichier-csv","text":"En mode \u00e9criture, on \u00e9crit ligne par lignes les informations que l'on veut stocker. 1 2 3 4 5 6 7 import csv with open ( 'moncsv.csv' , 'w' ) as file : aecrire = csv . writer ( file ) aecrire . writerow ([ 0 , 1 , 2 , 3 ]) aecrire . writerow ([ 'coucou' , 'bonbon' , 'artichauts' ]) for i in range ( 100 ): aecrire . writerow ([ 10 , 20 , 30 ])","title":"Ecrire dans un fichier csv"},{"location":"Programmation/lire_ecrire.html#cas-des-dictionnaires","text":"Les dictionnaires peuvent \u00eatre sauvegard\u00e9s en utilisant le module pickle . Ce module ne permet pas d'avoir un rendu lisible mais peut etre tr\u00e8s pratique. Par exemple, on cr\u00e9e un dictionnaire contenant le nom et le num\u00e9ro de certains d\u00e9partements et on l'enregistre dans un fichier appel\u00e9 dep.txt 1 2 3 4 5 6 7 8 9 import pickle #le dictionnaire que l'on souhaite sauvegarder departement = { 36 : 'Indre' , 30 : 'Gard' , 75 : 'Paris' } #on ouvre un fichier dont le nom est dep (il sera cr\u00e9\u00e9 s'il n'existe pas) et on le place dans une variable appel\u00e9e fichier fichier = open ( 'dep.txt' , 'wb' ) #on enregistre le dictionnaire dans le fichier pickle . dump ( departement , fichier ) #on ferme le fichier fichier . close () Puis on veut r\u00e9cup\u00e9rer les noms de d\u00e9partement pr\u00e9alablement enregistr\u00e9s: 1 2 3 4 5 6 7 8 9 import pickle #ouverture du fichier f = open ( 'dep.txt' , 'rb' ) #chargement du contenu du fichier dans la variable Dept Dept = pickle . load ( f ) f . close () print ( Dept ) On obtient {36: 'Indre', 30: 'Gard', 75: 'Paris'} .","title":"Cas des dictionnaires"},{"location":"Programmation/tkinter.html","text":"Interface Graphique TKinter (Tool Kit Interface) \u2693\ufe0e Tkinter est UNE des nombreuses interfaces graphiques de python parmi d'autre. \u00c9tant une des plus simple \u00e0 utiliser, elle permet des interfaces graphiques simples m\u00eame quand on est d\u00e9butant. Dans cette partie, les applications seront \u00e0 faire au fur et \u00e0 mesure pour bien int\u00e9grer chaque notion avant de progresser. Veillez \u00e0 chaque modification de programme \u00e0 l'enregistrer sous un autre nom afin de ne pas \u00e9craser le pr\u00e9c\u00e9dent. Ressources compl\u00e9mentaires : Tableauxmaths : Boutons et zones de textes Tableauxmaths : dessiner d\u00e9placer et g\u00e9rer les collisions Dessiner \u2693\ufe0e Prise en main \u2693\ufe0e Cr\u00e9ation d'une fen\u00eatre avec deux widgets (contraction de window gadget) : un bout de texte (label) et un bouton (button). \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : vous devriez obtenir l'ouverture d'une fen\u00eatre popup telle que: fen1=tk() cr\u00e9e la fen\u00eatre qui s'appellera fen1. tex1=Label(fen1, text='Bonjour tout le monde !', fg='red') : le premier argument est le nom de la fen\u00eatre dans lequel sera le bouton (fen1 est le widget ma\u00eetre de l'objet tex1, ou l'objet tex1 est un widget esclave de l'objet fen1). Le deuxi\u00e8me est facile \u00e0 comprendre et le troisi\u00e8me est la couleur d'avant plan (foreground, en anglais). tex1.pack() : nous activons ici la m\u00e9thode pack() \u00e0 l'objet tex1. Cette m\u00e9thode agit sur la disposition g\u00e9om\u00e9trique, la fen\u00eatre ma\u00eetre est r\u00e9duite automatiquement pour qu'elle soit juste assez grande pour contenir les widgets esclaves. fen1.mainloop() : c'est cette ligne qui provoque le d\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nements associ\u00e9 \u00e0 la fen\u00eatre. Cette instruction est n\u00e9cessaire pour que l'application soit \u00ab \u00e0 l'aff\u00fbt \u00bb des clics de souris, des pressions exerc\u00e9es sur les touches du clavier, etc. C'est donc cette instruction qui la met en marche. La notion d'\u00e9v\u00e8nements \u2693\ufe0e La notion d\u2019\u00e9v\u00e9nements est commune \u00e0 tous les langages informatiques. Il s'agit des clics sur les boutons de souris, sur les touches du clavier ou sur l'interface cr\u00e9\u00e9e. Il sera alors toujours n\u00e9cessaire d'avoir un \u00e9couteur d\u2019\u00e9v\u00e9nement et des fonctions associ\u00e9es \u00e0 chaque \u00e9v\u00e9nement qui nous int\u00e9ressera. Par exemple, on pourra associer une fonction qui permet de quitter l'interface \u00e0 une frappe sur la touche \"q\" du clavier. Trac\u00e9 de lignes \u2693\ufe0e \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from tkinter import * from random import randrange # --- d\u00e9finition des fonctions gestionnaires d'\u00e9v\u00e9nements : --- def drawline (): #Trac\u00e9 d'une ligne dans le canevas can1 global x1 , x2 , y1 , y2 , coul can1 . create_line ( x1 , y1 , x2 , y2 , width = 2 , fill = coul ) # modification des coordonn\u00e9es pour la ligne suivante : y2 = y2 - 10 y1 = y1 + 10 def changecolor (): #Changement al\u00e9atoire de la couleur du trac\u00e9 global coul pal = [ 'purple' , 'cyan' , 'maroon' , 'green' , 'red' , 'blue' , 'orange' , 'yellow' ] c = randrange ( 8 ) # => g\u00e9n\u00e8re un nombre al\u00e9atoire de 0 \u00e0 7 coul = pal [ c ] #------ Programme principal ------ # Les variables suivantes seront utilis\u00e9es de mani\u00e8re globale : x1 , y1 , x2 , y2 = 10 , 10 , 190 , 190 # coordonn\u00e9es de la ligne coul = \"dark green\" # couleur de la ligne # Cr\u00e9ation du widget principal (\"ma\u00eetre\") : fen1 = Tk () # Cr\u00e9ation des widgets \"esclaves\" : can1 = Canvas ( fen1 , bg = 'dark grey' , height = 200 , width = 200 ) can1 . pack ( side = LEFT ) tex1 = Label ( fen1 , text = \"Bonjour tout le monde\" , fg = 'red' ) tex1 . pack () bou1 = Button ( fen1 , text = \"Quitter\" , command = fen1 . quit ) bou1 . pack ( side = BOTTOM ) bou2 = Button ( fen1 , text = \"Tracer de ligne\" , command = drawline ) bou2 . pack () bou3 = Button ( fen1 , text = \"Autre couleur\" , command = changecolor ) bou3 . pack () fen1 . mainloop () # d\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nement fen1 . destroy () # destruction (fermeture) de la fen\u00eatre On doit obtenir ceci : Un canevas dans tkinter est une surface rectangulaire d\u00e9limit\u00e9e, dans laquelle on peut installer ensuite divers dessins et images \u00e0 l'aide de m\u00e9thodes sp\u00e9cifiques (canevas s'\u00e9crit canvas en anglais !). La fonctionnalit\u00e9 de ce programme est assur\u00e9e essentiellement par les deux fonctions drawline() et changecolor() . Dans la fonction changecolor() , une couleur est choisie au hasard dans une liste, \u00e0 l'aide de la fonction randrange() import\u00e9e du module random. Appel\u00e9e avec un argument N, cette fonction renvoie un nombre entier, tir\u00e9 au hasard entre z\u00e9ro et N-1. La commande li\u00e9e au bouton \u00ab Quitter \u00bb appelle la m\u00e9thode quit( ) de la fen\u00eatre fen1 . Cette m\u00e9thode sert \u00e0 fermer le r\u00e9ceptionnaire d'\u00e9v\u00e9nements (mainloop) associ\u00e9 \u00e0 cette fen\u00eatre. Lorsque cette m\u00e9thode est activ\u00e9e, l'ex\u00e9cution du programme se poursuit avec les instructions qui suivent l'appel de mainloop. Dans l'exemple, cela consiste donc \u00e0 effacer (destroy) la fen\u00eatre. Exercices \u2693\ufe0e Modifier le programme pour ne plus avoir que des lignes de couleur cyan, maroon et green. Modifier le programme pour que toutes les lignes trac\u00e9es soient horizontales et parall\u00e8les. Agrandir le canevas de mani\u00e8re \u00e0 lui donner une largeur de 500 unit\u00e9s et une hauteur de 650. Modifier \u00e9galement la taille des lignes, afin que leurs extr\u00e9mit\u00e9s se confondent avec les bords du canevas. Ajouter une fonction drawline2( ) qui tracera deux ligne rouges en croix au centre du canevas : l'une horizontale et l'autre verticale. Ajouter \u00e9galement un bouton portant l'indication \u00ab viseur \u00bb. Un clic sur ce bouton devra provoquer l'affichage de la croix. Reprendre le programme initial. Remplacer la m\u00e9thode create_line par la m\u00e9thode create_rectangle . Que se passe-t-il ? Qu'indique les coordonn\u00e9es fournies en param\u00e8tres ? (Noter ses informations dans un endroit o\u00f9 vous les retrouverez facilement Recommencer en rempla\u00e7ant cette fois par create_oval . Que se passe-t-il et qu'indique les coordonn\u00e9es fournies en param\u00e8tres ? Cr\u00e9er un programme qui dessinera les cinq anneaux olympiques dans un rectangle de fond blanc (white). Utiliser l'argument outline \u00e0 la place de fill pour la couleur des anneaux. Un bouton \u00ab quitter \u00bb doit permettre de fermer la fen\u00eatre. Modifier le programme pr\u00e9c\u00e9dent en y ajoutant cinq boutons. Chacun de ces boutons provoquera le trac\u00e9 d'un anneau. Deux dessins altern\u00e9s \u2693\ufe0e \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from tkinter import * def cercle ( x , y , r , coul = 'black' ): \"trac\u00e9 d'un cercle de centre (x,y) et de rayon r\" can . create_oval ( x - r , y - r , x + r , y + r , outline = coul ) def figure_1 (): \"dessiner une cible\" # Effacer d'abord tout dessin pr\u00e9existant : can . delete ( ALL ) # Tracer les deux lignes (vert. et horiz.) : can . create_line ( 100 , 0 , 100 , 200 , fill = 'blue' ) can . create_line ( 0 , 100 , 200 , 100 , fill = 'blue' ) # Tracer plusieurs cercles concentriques : rayon = 15 while rayon < 100 : cercle ( 100 , 100 , rayon ) rayon += 15 def figure_2 (): \"dessiner un visage simplifi\u00e9\" # Effacer d'abord tout dessin pr\u00e9existant : can . delete ( ALL ) # Les caract\u00e9ristiques de chaque cercle sont # plac\u00e9es dans une liste de liste : cc = [[ 100 , 100 , 80 , 'red' ], # visage [ 70 , 70 , 15 , 'blue' ], # yeux [ 130 , 70 , 15 , 'blue' ], [ 70 , 70 , 5 , 'black' ], [ 130 , 70 , 5 , 'black' ], [ 44 , 115 , 20 , 'red' ], # joues [ 156 , 115 , 20 , 'red' ], [ 100 , 95 , 15 , 'purple' ], # nez [ 100 , 145 , 30 , 'purple' ]] # bouche # on trace tous les cercles \u00e0 l'aide d'une boucle : i = 0 while i < len ( cc ): # parcourt de la liste el = cc [ i ] # chaque \u00e9l\u00e9ment est lui-m\u00eame une liste cercle ( el [ 0 ], el [ 1 ], el [ 2 ], el [ 3 ]) i += 1 ##### Programme principal ##### fen = Tk () can = Canvas ( fen , width = 200 , height = 200 , bg = 'ivory' ) can . pack ( side = TOP , padx = 5 , pady = 5 ) b1 = Button ( fen , text = 'dessin 1' , command = figure_1 ) b1 . pack ( side = LEFT , padx = 3 , pady = 3 ) b2 = Button ( fen , text = 'dessin 2' , command = figure_2 ) b2 . pack ( side = RIGHT , padx = 3 , pady = 3 ) fen . mainloop () on obtient : L'option side peut accepter les valeurs TOP, BOTTOM, LEFT ou RIGHT , pour \u00ab pousser \u00bb le widget du c\u00f4t\u00e9 correspondant de la fen\u00eatre. Les options padx et pady permettent de r\u00e9server un petit espace autour du widget. Cet espace est exprim\u00e9 en nombre de pixels : padx r\u00e9serve un espace \u00e0 gauche et \u00e0 droite du widget, pady r\u00e9serve un espace au- dessus et au-dessous du widget. Prenez le temps d'essayer de bien comprendre ce programme. Exercices : \u2693\ufe0e \u00c9crire une application qui dessine un damier (carr\u00e9s 'navy' sur fond blanc), ainsi que des pions rouges qui apparaissent au hasard lorsque que l'on clique sur un bouton dans un premier temps, on se contentera du damier). Le canevas devra avoir une dimension de 300*300. Les carr\u00e9s devront avoir un c\u00f4t\u00e9 \u00e9gal \u00e0 30. Les pions devront avoir un rayon \u00e9gal \u00e0 10. Le programme comportera les fonctions suivantes : damier() : donn\u00e9e ci-dessous ligne_de_carres(x, y) : dessine une ligne de 5 carr\u00e9s de couleur 'navy' espac\u00e9s, en partant de (x,y). disque(x, y, r, coul) : dessine un disque de centre (x,y), de rayon r et de couleur coul. pion( ) : dessine un pion au hasard sur le damier (utilisera la fonction disque). Les entr\u00e9es au clavier : la calculatrice \u2693\ufe0e \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from tkinter import * from math import * # d\u00e9finition de l'action \u00e0 effectuer si l'utilisateur actionne # la touche \"enter\" alors qu'il \u00e9dite le champ d'entr\u00e9e : def evaluer ( event ): chaine . configure ( text = 'R\u00e9sultat = ' + str ( eval ( entree . get ()))) ##### Programme principal ##### fenetre = Tk () entree = Entry ( fenetre , background = 'white' ) entree . bind ( \"<Return>\" , evaluer ) chaine = Label ( fenetre ) entree . pack () chaine . pack () fenetre . mainloop () on obtient : Au d\u00e9but du script, on importe le module math pour que la calculatrice puisse disposer de toutes les fonctions math\u00e9matiques et scientifiques usuelles : sinus, cosinus, racine carr\u00e9e, etc. La fonction evaluer() sera la commande ex\u00e9cut\u00e9e par le programme lorsque l'utilisateur actionnera la touche Return. Cette fonction utilise la m\u00e9thode configure( ) du widget chaine, pour modifier son attribut text. eval( ) \u00e9value (fait le calcul) la cha\u00eene de caract\u00e8res. str( ) transforme une expression num\u00e9rique en cha\u00eene de caract\u00e8res. get( ) est une m\u00e9thode qui permet d'extraire du widget entree la cha\u00eene de caract\u00e8res qui lui a \u00e9t\u00e9 fournie par l'utilisateur. entree est un widget de la \u00ab classe \u00bb Entry . Afin que ce widget puisse transmettre au programme l'expression que l'utilisateur y aura encod\u00e9e, il faut lui associer un \u00e9v\u00e9nement \u00e0 l'aide de la m\u00e9thode bind() (bind signifie \u00ab lier \u00bb en anglais). entree.bind(\"<Return>\", evaluer) signifie : \u00ab lier l'\u00e9v\u00e9nement 'pression sur la touche <Return> ' \u00e0 l'objet entree, le gestionnaire de cet \u00e9v\u00e9nement \u00e9tant la fonction evaluer \u00bb. L'argument event fourni \u00e0 la fonction \u00e9valuer est obligatoire d\u00e8s que l'on utilise la m\u00e9thode bind() . D\u00e9tection du clic de souris \u2693\ufe0e \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 from tkinter import * # D\u00e9tection et positionnement d'un clic de souris dans une fen\u00eatre : def pointeur ( event ): chaine . configure ( text = \"Clic d\u00e9tect\u00e9 en X = \" + str ( event . x ) + \", Y = \" + str ( event . y )) fen = Tk () can = Frame ( fen , width = 200 , height = 150 , bg = \"light yellow\" ) can . bind ( \"<Button-1>\" , pointeur ) can . pack () chaine = Label ( fen ) chaine . pack () fen . mainloop () On obtient : Le widget Frame sert \u00e0 conenir des \u00e9l\u00e9ments. Il n'est pas utile de mettre un canevas si on a rien \u00e0 dessiner. Le script fait appara\u00eetre une fen\u00eatre contenant un cadre (frame) rectangulaire de couleur jaune p\u00e2le. La m\u00e9thode bind() du widget cadre associe l'\u00e9v\u00e9nement clic \u00e0 l'aide du premier bouton de la souris> au gestionnaire d'\u00e9v\u00e9nement \u00ab pointeur \u00bb. Ce gestionnaire d'\u00e9v\u00e9nement peut utiliser les attributs x et y de l'objet event g\u00e9n\u00e9r\u00e9 automatiquement (sous le nom de event.x et event.y ) par Python, pour construire la cha\u00eene de caract\u00e8res qu' affichera la position de la souris au moment du clic. Exercices : \u2693\ufe0e Modifier le script ci-dessus de mani\u00e8re \u00e0 faire appara\u00eetre un petit cercle rouge \u00e0 l'endroit o\u00f9 l'utilisateur a effectu\u00e9 son clic (il faut d'abord remplacer le widget Frame par un widget Canvas). On tracera alors un cercle autour de la position de la souris. Widgets et positionnement dans le Canevas \u2693\ufe0e Classe de widget(windows+gadget) \u2693\ufe0e Il existe 15 classes de base pour les widgets Tkinter : Button : Un bouton classi Canvas : Un espace pour disposer divers \u00e9l\u00e9ments graphiques. Ce widget peut \u00eatre utilis\u00e9 pour dessiner, cr\u00e9er des \u00e9diteurs graphiques, et aussi pour impl\u00e9menter des widgets personnalis\u00e9s. Checkbutton : Une \u00ab case \u00e0 cocher \u00bb qui peut prendre deux \u00e9tats distincts (la case est coch\u00e9e ou non). Un clic sur ce widget provoque le changement d'\u00e9tat. Entry : Un champ d'entr\u00e9e, dans lequel l'utilisateur du programme pourra ins\u00e9rer un texte quelconque \u00e0 partir du clavier. Frame : Une surface rectangulaire dans la fen\u00eatre, o\u00f9 l'on peut disposer d'autres widgets. Cette surface peut \u00eatre color\u00e9e. Elle peut aussi \u00eatre d\u00e9cor\u00e9e d'une bordure. Label : Un texte (ou libell\u00e9) quelconque (\u00e9ventuellement une image). Listbox : Une liste de choix propos\u00e9s \u00e0 l'utilisateur, g\u00e9n\u00e9ralement pr\u00e9sent\u00e9s dans une sorte de bo\u00eete. On peut \u00e9galement configurer la Listbox de telle mani\u00e8re qu'elle se comporte comme une s\u00e9rie de \u00ab boutons radio \u00bb ou de cases \u00e0 cocher. Menu : Un menu. Ce peut \u00eatre un menu d\u00e9roulant attach\u00e9 \u00e0 la barre de titre, ou bien un menu \u00ab pop up \u00bb apparaissant n'importe o\u00f9 \u00e0 la suite d'un clic. Menubutton : Un bouton-menu, \u00e0 utiliser pour impl\u00e9menter des menus d\u00e9roulants. Message : Permet d'afficher un texte. Ce widget est une variante du widget Label, qui permet d'adapter automatiquement le texte affich\u00e9 \u00e0 une certaine taille ou \u00e0 un certain rapport largeur/hauteur. Radiobutton : Repr\u00e9sente (par un point noir dans un petit cercle) une des valeurs d'une variable qui peut en poss\u00e9der plusieurs. Cliquer sur un \u00ab bouton radio \u00bb donne la valeur correspondante \u00e0 la variable, et \"vide\" tous les autres boutons radio associ\u00e9s \u00e0 la m\u00eame variable. Scale : Vous permet de faire varier de mani\u00e8re tr\u00e8s visuelle la valeur d'une variable, en d\u00e9pla\u00e7ant un curseur le long d'une r\u00e8gle. Scrollbar : \u00ab ascenseur \u00bb ou \u00ab barre de d\u00e9filement \u00bb que vous pouvez utiliser en association avec les autres widgets : Canvas, Entry, Listbox, Text. Text : Affichage de texte format\u00e9. Permet aussi \u00e0 l'utilisateur d'\u00e9diter le texte affich\u00e9. Des images peuvent \u00e9galement \u00eatre ins\u00e9r\u00e9es. Toplevel : Une fen\u00eatre affich\u00e9e s\u00e9par\u00e9ment, \u00ab par-dessus \u00bb. Ces classes de widgets int\u00e8grent chacune un grand nombre de m\u00e9thodes. On peut aussi leur associer (lier) des \u00e9v\u00e9nements, comme d\u00e9j\u00e0 vu dans les pages pr\u00e9c\u00e9dentes. Tous ces widgets peuvent \u00eatre positionn\u00e9s dans les fen\u00eatres \u00e0 l'aide de trois m\u00e9thodes diff\u00e9rentes : la m\u00e9thode grid( ) , la m\u00e9thode pack( ) et d'autres encore... Liste des m\u00e9thodes communes \u00e0 tous les widgets M\u00e9thode grid() pour le positionnement des widgets \u2693\ufe0e Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from tkinter import * fen1 = Tk () txt1 = Label ( fen1 , text = 'Premier champ : ' ) txt2 = Label ( fen1 , text = 'Second : ' ) entr1 = Entry ( fen1 , bg = 'white' ) entr2 = Entry ( fen1 , bg = 'white' ) txt1 . grid ( row = 0 ) txt2 . grid ( row = 1 ) entr1 . grid ( row = 0 , column = 1 ) entr2 . grid ( row = 1 , column = 1 ) fen1 . mainloop () La m\u00e9thode grid() consid\u00e8re la fen\u00eatre comme un tableau, avec des lignes (row) et des colonnes (column). Il est possible d'aligner les widgets avec l'option sticky qui peut prendre l'une des quatre valeurs N, S, E, W (les quatre points cardinaux en anglais). Exercices : \u2693\ufe0e Remplacer les deux premi\u00e8res instructions grid( ) du script par : txt1.grid(row=0, sticky=E) txt2.grid(row=1, sticky=E) Le but de cet exercice est d'obtenir la fen\u00eatre ci-dessous : voici le fichier image \u00e0 utiliser (cliquer sur le lien pour t\u00e9l\u00e9charger) Image anneaux Le programme comportera entre autres, les parties suivantes : 1 2 3 4 5 6 7 8 9 10 11 #Cr\u00e9ation des widget Label et Entry A vous de compl\u00e9ter #Cr\u00e9ation d'un widget Canvas contenant une image can1 = Canvas ( fen1 , width = 320 , height = 160 , bg = 'white' ) anneaux = PhotoImage ( file = 'AnOlympiques.gif' ) item = can1 . create_image ( 160 , 80 , image = anneaux ) #Mise en place des widgetsLabel et Entry A vous de compl\u00e9ter can1 . grid ( row = 0 , column = 2 , rowspan = 3 , padx = 10 , pady = 5 ) Tkinter ne permet pas d'ins\u00e9rer directement une image dans une fen\u00eatre. Il faut d'abord installer un canevas, et ensuite positionner l'image dans celui-ci, gr\u00e2ce \u00e0 l'instruction item=can1.create_image(160, 80, image=anneaux) . Les deux premiers arguments transmis (160,80) indiquent les coordonn\u00e9es x et y du canevas o\u00f9 il faut placer le centre de l'image (ici, l'image sera donc centr\u00e9e dans le canevas). L'instruction rowspan=3 indique que le canevas pourra \u00ab s'\u00e9taler \u00bb sur trois lignes. padx et pady indiquent la dimension de l'espace \u00e0 r\u00e9server autour du canevas. Animations : d\u00e9placer les objets \u2693\ufe0e Modifier les propri\u00e9t\u00e9s d'un objet (animation) \u2693\ufe0e Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from tkinter import * # Proc\u00e9dure g\u00e9n\u00e9rale de d\u00e9placement : def avance ( gd , hb ): global x1 , y1 x1 , y1 = x1 + gd , y1 + hb can1 . coords ( oval1 , x1 , y1 , x1 + 30 , y1 + 30 ) # Gestionnaire d'\u00e9v\u00e9nements : def depl_gauche (): avance ( - 10 , 0 ) def depl_droite (): avance ( 10 , 0 ) def depl_haut (): avance ( 0 , - 10 ) def depl_bas (): avance ( 0 , 10 ) ##### Programme principal ##### # Les variables suivantes seront utilis\u00e9es de mani\u00e8re globale : x1 , y1 = 10 , 10 # coordonn\u00e9es initiales # Cr\u00e9ation du widget \"ma\u00eetre\" : fen1 = Tk () fen1 . title ( \"Exercice d'animation avec Tkinter\" ) # Cr\u00e9ation des widgets \"esclaves\" can1 = Canvas ( fen1 , bg = 'dark gray' , height = 300 , width = 300 ) oval1 = can1 . create_oval ( x1 , y1 , x1 + 30 , y1 + 30 , width = 2 , fill = 'red' ) can1 . pack ( side = LEFT ) Button ( fen1 , text = 'Quitter' , command = fen1 . quit ) . pack ( side = BOTTOM ) Button ( fen1 , text = 'Gauche' , command = depl_gauche ) . pack () Button ( fen1 , text = 'Droite' , command = depl_droite ) . pack () Button ( fen1 , text = 'Haut' , command = depl_haut ) . pack () Button ( fen1 , text = 'Bas' , command = depl_bas ) . pack () # D\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nement : fen1 . mainloop () fen1 . destroy () La fonction avance( ) red\u00e9finit les coordonn\u00e9es de l'objet \u00ab cercle color\u00e9 \u00bb ( oval1 ) \u00e0 chaque fois que l'on clique sur un des boutons. Ce qui provoque son animation. Les boutons ont \u00e9t\u00e9 d\u00e9finis de mani\u00e8re plus compact (pas d'utilisation de variables). Exercices : \u2693\ufe0e Modifier le programme pr\u00e9c\u00e9dent de mani\u00e8re \u00e0 ce que le cercle oval1 se place \u00e0 l'endroit o\u00f9 l'on clique avec la souris. \u00c9crire un programme qui fasse appara\u00eetre une fen\u00eatre avec un canevas (100*150). Dans ce canevas, placer un petit cercle (de rayon 15) cens\u00e9 repr\u00e9senter une balle. Sous le canevas, placer un bouton. Chaque fois que l'on clique sur le bouton, la balle doit avancer d'une petite distance (10) vers la droite, jusqu'\u00e0 ce qu'elle atteigne l'extr\u00e9mit\u00e9 du canevas. Si l'on continue \u00e0 cliquer, la balle doit alors revenir en arri\u00e8re jusqu'\u00e0 l'autre extr\u00e9mit\u00e9, et ainsi de suite. \u00c9crire un programme qui fasse la conversion des degr\u00e9s Celsius vers les degr\u00e9s Fahrenheit en tapant la touche Return, et vice-versa. On utilisera la formule : TF =TC \u00d71,8+32 . Vous aurez besoin de la m\u00e9thode get( ) du widget Entry (voir la calculatrice), ainsi que des m\u00e9thodes delete(0,END) pour effacer un champ du d\u00e9but \u00e0 la fin, et insert(0,text) pour ins\u00e9rer le texte text \u00e0 partir du d\u00e9but du champ. Animations automatiques \u2693\ufe0e Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 from tkinter import * # d\u00e9finition des gestionnaires d'\u00e9v\u00e9nements def move (): \"d\u00e9placement de la balle\" global x1 , y1 , dx , dy , flag x1 , y1 = x1 + dx , y1 + dy if x1 > 210 : x1 , dx , dy = 210 , 0 , 15 if y1 > 210 : y1 , dx , dy = 210 , - 15 , 0 if x1 < 10 : x1 , dx , dy = 10 , 0 , - 15 if y1 < 10 : y1 , dx , dy = 10 , 15 , 0 can1 . coords ( oval1 , x1 , y1 , x1 + 30 , y1 + 30 ) if flag > 0 : fen1 . after ( 50 , move ) # boucler apr\u00e8s 50 millisecondes def stop_it (): \"arr\u00eat de l'animation\" global flag flag = 0 def start_it (): \"d\u00e9marrage de l'application\" global flag if flag == 0 : # pour ne lancer qu'une seule boucle flag = 1 move () ##### Programme principal ##### # Les variables suivantes sont utilis\u00e9es de mani\u00e8re globale : x1 , y1 = 10 , 10 # coordonn\u00e9es initiales dx , dy = 15 , 0 # 'pas' du d\u00e9placement flag = 0 # commutateur # Cr\u00e9ation du widget \"parent\" : fen1 = Tk () fen1 . title ( \"Exercice d'animation avec Tkinter\" ) # Cr\u00e9ation des widgets \"enfants\" : can1 = Canvas ( fen1 , bg = 'dark gray' , height = 250 , width = 250 ) can1 . pack ( side = LEFT , padx = 5 , pady = 5 ) oval1 = can1 . create_oval ( x1 , y1 , x1 + 30 , y1 + 30 , width = 2 , fill = 'red' ) bou1 = Button ( fen1 , text = 'Quitter' , width = 8 , command = fen1 . quit ) bou1 . pack ( side = BOTTOM ) bou2 = Button ( fen1 , text = 'D\u00e9marrer' , width = 8 , command = start_it ) bou2 . pack () bou3 = Button ( fen1 , text = 'Arr\u00eater' , width = 8 , command = stop_it ) bou3 . pack () # D\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nements : fen1 . mainloop () fen1 . destroy () La m\u00e9thode after() d\u00e9clenche l'appel d'une fonction apr\u00e8s qu'un certain laps de temps se soit \u00e9coul\u00e9 (temps en millisecondes). Ici la m\u00e9thode after( ) se trouve dans la fonction move( ) . Elle appelle la fonction move( ) elle-m\u00eame. Cette technique de programmation tr\u00e8s puissante est appel\u00e9e \u00ab r\u00e9cursivit\u00e9 \u00bb : la fonction s'appelle elle-m\u00eame. Attention, pour que le programme ne boucle pas ind\u00e9finiment, il faut mettre en place un moyen pour l'interrompre. \u00c0 chaque it\u00e9ration de la boucle, le contenu de la variable flag est test\u00e9 (instruction if). Si le contenu de la variable flag est \u00e0 0, alors le bouclage ne s'effectue plus et l'animation s'arr\u00eate. Un premier clic sur \u00ab D\u00e9marrer \u00bb assigne une valeur non nulle \u00e0 la variable flag , puis provoque imm\u00e9diatement un appel de la fonction move() . Celle-ci s'ex\u00e9cute et continue \u00e0 s'appeler elle-m\u00eame toutes les 50 millisecondes, tant que flag ne revient pas \u00e0 0. Si l'on continue \u00e0 cliquer sur le bouton \u00ab D\u00e9marrer \u00bb, la fonction move() ne peut plus \u00eatre appel\u00e9e tant que flag vaut 1. On \u00e9vite ainsi le d\u00e9marrage de plusieurs boucles concurrentes. Le bouton \u00ab Arr\u00eater \u00bb remet flag \u00e0 0 et la boucle s'interrompt. Exercices : \u2693\ufe0e Dans la fonction start_it( ) , supprimer l'instruction if flag==0 : (et l'indentation des deux lignes suivantes). Cliquer plusieurs fois sur le bouton \u00ab D\u00e9marrer \u00bb. Observer ce qui se passe Modifier le programme de telle fa\u00e7on que la balle change de couleur \u00e0 chaque \u00ab virage \u00bb. Vous aurez besoin de l'instruction : can1.itemconfigure(oval1,fill='green') Minis projets \u2693\ufe0e Travaux de groupe Les groupes sont impos\u00e9s, vous rendrez un seul projet et aurez tous la m\u00eame note. DISCUTEZ ENTRE VOUS !! R\u00e9partissez vous le travail en vous mettant d'accord \u00e0 l'avance sur le nom des fonctions, des variables, des fichiers, ... Pr\u00e9voyez \u00e0 l'avance, qui fait quoi, o\u00f9 vous vous arr\u00eatez Lister TOUTES les fonctionnalit\u00e9s du programme Ne travaillez pas \u00e0 plusieurs en parall\u00e8le sur le m\u00eame fichier PacMan \u2693\ufe0e Vous allez r\u00e9aliser une version simplifi\u00e9e de PacMan. Voici une petite d\u00e9monstration . Les objectifs minimums cr\u00e9er un rond jaune (30px de diametre) que l'on peut d\u00e9placer avec des fl\u00e8ches dans un canevas de 900 par 300. Placer 10 rectangles blancs (fantomes de 1px de large et 20 de haut) de fa\u00e7on al\u00e9atoire. Placer 50 pac-gommes (cercles noirs de rayon 5 px) de fa\u00e7on al\u00e9atoire. Quand pac-man touche une pac-gomme, elle disparait et le score augment de 1 Quand pac-man touche un fantome, il perd une vie et revient \u00e0 l'emplacement du d\u00e9but (sans remettre les pac-gomme d\u00e9j\u00e0 mang\u00e9es et sans r\u00e9initialiser le score) Le jeu se termine lorsque Pac-man a mang\u00e9 toutes les pac-gomme ou qu'il a perdu 3 vies !! info \"Niveau interm\u00e9diaire :\" 1 Faire d\u00e9placer les fant\u00f4mes de fa\u00e7on al\u00e9atoire et les faire rebondir sur les bords Niveau avanc\u00e9 : Placer tout ce petit monde dans un labyrinthe. Ajouter de la musique ... Au minimum vous devez obtenir ceci : Conseils Les fant\u00f4mes peuvent \u00eatre g\u00e9r\u00e9s par une liste. Utiliser les morceaux de code vus en activit\u00e9. Attention aux nombreux codes que vous trouverez sur internet que vous ne sauriez ni expliquer ni utiliser (notamment ceux r\u00e9alis\u00e9s en programmation orient\u00e9 objet). Faites simple mais efficace R\u00e9pertoire t\u00e9l\u00e9phonique \u2693\ufe0e Vous allez cr\u00e9er une interface permettant de g\u00e9rer un r\u00e9pertoire t\u00e9l\u00e9phonique. Il faudra, dans un premier temps, cr\u00e9er en programmation classique la cr\u00e9ation et la modification du r\u00e9pertoire. Ensuite, cr\u00e9er une interface graphique permettant d'utiliser le r\u00e9pertoire. Voici les fichiers n\u00e9cessaires \u00e0 la r\u00e9alisation du projet. L'interface devra contenir les boutons AJOUTER, SUPPRIMER, RECHERCHER, QUITTER (qui devra enregistrer les modifications dans le fichier texte) La fonction d'affichage peut se faire par d\u00e9faut (comme sur votre smartphone) ou par action sur un bouton AFFICHER. Le Le document de fonctionnement du r\u00e9p\u00e8rtoire t\u00e9l\u00e9phonique , L'exemple sur les d\u00e9partements , Enregistrer un dictionnaire , r\u00e9cup\u00e9rer un dictionnaire , r\u00e9pertoire \u00e0 compl\u00e9ter , Vous pouvez aller voir par ici pour tenir compte de l'ergonomie de votre interface. conseil Pr\u00e9voir de faire une version qui fonctionne sans interface (l'interface sera plus facile \u00e0 cr\u00e9er ensuite en appelant le fichier existant). Motus \u2693\ufe0e Vous ne connaissez pas ? Objectifs minimums utiliser le fichier dico propre qui contient une tr\u00e8s grande liste de mots et charger son contenu dans une liste (v\u00e9rifier en affichant les 10 premiers mots par exemple) Nettoyer la liste pour n'obtenir que les mots de 6 lettres Faire afficher la premi\u00e8re lettre et les cases vides une fois un mot propos\u00e9 par le joueur on d\u00e9termine (comme dans la vid\u00e9o) les lettres bien plac\u00e9es et mal plac\u00e9es L'utilisateur, s'il trouve le mot cumule un certain nombre de points : 6 points s'il trouve \u00e0 la premiere, 5 \u00e0 la deuxi\u00e8me, ... L'utilisateur peut jouer 5 fois. Niveau avanc\u00e9 Conserver le nom du joueur et le score dans un fichier ext\u00e9rieur (txt ou csv au choix) Faire afficher le nom du joueur ayant enregistr\u00e9 le meilleur score Conseil Pr\u00e9voir de faire une version qui fonctionne sans interface (l'interface sera plus facile \u00e0 cr\u00e9er ensuite en appelant le fichier existant).","title":"Interface graphique : Tkinter"},{"location":"Programmation/tkinter.html#interface-graphique-tkinter-tool-kit-interface","text":"Tkinter est UNE des nombreuses interfaces graphiques de python parmi d'autre. \u00c9tant une des plus simple \u00e0 utiliser, elle permet des interfaces graphiques simples m\u00eame quand on est d\u00e9butant. Dans cette partie, les applications seront \u00e0 faire au fur et \u00e0 mesure pour bien int\u00e9grer chaque notion avant de progresser. Veillez \u00e0 chaque modification de programme \u00e0 l'enregistrer sous un autre nom afin de ne pas \u00e9craser le pr\u00e9c\u00e9dent. Ressources compl\u00e9mentaires : Tableauxmaths : Boutons et zones de textes Tableauxmaths : dessiner d\u00e9placer et g\u00e9rer les collisions","title":"Interface Graphique TKinter (Tool Kit Interface)"},{"location":"Programmation/tkinter.html#dessiner","text":"","title":"Dessiner"},{"location":"Programmation/tkinter.html#prise-en-main","text":"Cr\u00e9ation d'une fen\u00eatre avec deux widgets (contraction de window gadget) : un bout de texte (label) et un bouton (button). \u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : vous devriez obtenir l'ouverture d'une fen\u00eatre popup telle que: fen1=tk() cr\u00e9e la fen\u00eatre qui s'appellera fen1. tex1=Label(fen1, text='Bonjour tout le monde !', fg='red') : le premier argument est le nom de la fen\u00eatre dans lequel sera le bouton (fen1 est le widget ma\u00eetre de l'objet tex1, ou l'objet tex1 est un widget esclave de l'objet fen1). Le deuxi\u00e8me est facile \u00e0 comprendre et le troisi\u00e8me est la couleur d'avant plan (foreground, en anglais). tex1.pack() : nous activons ici la m\u00e9thode pack() \u00e0 l'objet tex1. Cette m\u00e9thode agit sur la disposition g\u00e9om\u00e9trique, la fen\u00eatre ma\u00eetre est r\u00e9duite automatiquement pour qu'elle soit juste assez grande pour contenir les widgets esclaves. fen1.mainloop() : c'est cette ligne qui provoque le d\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nements associ\u00e9 \u00e0 la fen\u00eatre. Cette instruction est n\u00e9cessaire pour que l'application soit \u00ab \u00e0 l'aff\u00fbt \u00bb des clics de souris, des pressions exerc\u00e9es sur les touches du clavier, etc. C'est donc cette instruction qui la met en marche.","title":"Prise en main"},{"location":"Programmation/tkinter.html#la-notion-devenements","text":"La notion d\u2019\u00e9v\u00e9nements est commune \u00e0 tous les langages informatiques. Il s'agit des clics sur les boutons de souris, sur les touches du clavier ou sur l'interface cr\u00e9\u00e9e. Il sera alors toujours n\u00e9cessaire d'avoir un \u00e9couteur d\u2019\u00e9v\u00e9nement et des fonctions associ\u00e9es \u00e0 chaque \u00e9v\u00e9nement qui nous int\u00e9ressera. Par exemple, on pourra associer une fonction qui permet de quitter l'interface \u00e0 une frappe sur la touche \"q\" du clavier.","title":"La notion d'\u00e9v\u00e8nements"},{"location":"Programmation/tkinter.html#trace-de-lignes","text":"\u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from tkinter import * from random import randrange # --- d\u00e9finition des fonctions gestionnaires d'\u00e9v\u00e9nements : --- def drawline (): #Trac\u00e9 d'une ligne dans le canevas can1 global x1 , x2 , y1 , y2 , coul can1 . create_line ( x1 , y1 , x2 , y2 , width = 2 , fill = coul ) # modification des coordonn\u00e9es pour la ligne suivante : y2 = y2 - 10 y1 = y1 + 10 def changecolor (): #Changement al\u00e9atoire de la couleur du trac\u00e9 global coul pal = [ 'purple' , 'cyan' , 'maroon' , 'green' , 'red' , 'blue' , 'orange' , 'yellow' ] c = randrange ( 8 ) # => g\u00e9n\u00e8re un nombre al\u00e9atoire de 0 \u00e0 7 coul = pal [ c ] #------ Programme principal ------ # Les variables suivantes seront utilis\u00e9es de mani\u00e8re globale : x1 , y1 , x2 , y2 = 10 , 10 , 190 , 190 # coordonn\u00e9es de la ligne coul = \"dark green\" # couleur de la ligne # Cr\u00e9ation du widget principal (\"ma\u00eetre\") : fen1 = Tk () # Cr\u00e9ation des widgets \"esclaves\" : can1 = Canvas ( fen1 , bg = 'dark grey' , height = 200 , width = 200 ) can1 . pack ( side = LEFT ) tex1 = Label ( fen1 , text = \"Bonjour tout le monde\" , fg = 'red' ) tex1 . pack () bou1 = Button ( fen1 , text = \"Quitter\" , command = fen1 . quit ) bou1 . pack ( side = BOTTOM ) bou2 = Button ( fen1 , text = \"Tracer de ligne\" , command = drawline ) bou2 . pack () bou3 = Button ( fen1 , text = \"Autre couleur\" , command = changecolor ) bou3 . pack () fen1 . mainloop () # d\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nement fen1 . destroy () # destruction (fermeture) de la fen\u00eatre On doit obtenir ceci : Un canevas dans tkinter est une surface rectangulaire d\u00e9limit\u00e9e, dans laquelle on peut installer ensuite divers dessins et images \u00e0 l'aide de m\u00e9thodes sp\u00e9cifiques (canevas s'\u00e9crit canvas en anglais !). La fonctionnalit\u00e9 de ce programme est assur\u00e9e essentiellement par les deux fonctions drawline() et changecolor() . Dans la fonction changecolor() , une couleur est choisie au hasard dans une liste, \u00e0 l'aide de la fonction randrange() import\u00e9e du module random. Appel\u00e9e avec un argument N, cette fonction renvoie un nombre entier, tir\u00e9 au hasard entre z\u00e9ro et N-1. La commande li\u00e9e au bouton \u00ab Quitter \u00bb appelle la m\u00e9thode quit( ) de la fen\u00eatre fen1 . Cette m\u00e9thode sert \u00e0 fermer le r\u00e9ceptionnaire d'\u00e9v\u00e9nements (mainloop) associ\u00e9 \u00e0 cette fen\u00eatre. Lorsque cette m\u00e9thode est activ\u00e9e, l'ex\u00e9cution du programme se poursuit avec les instructions qui suivent l'appel de mainloop. Dans l'exemple, cela consiste donc \u00e0 effacer (destroy) la fen\u00eatre.","title":"Trac\u00e9 de lignes"},{"location":"Programmation/tkinter.html#exercices","text":"Modifier le programme pour ne plus avoir que des lignes de couleur cyan, maroon et green. Modifier le programme pour que toutes les lignes trac\u00e9es soient horizontales et parall\u00e8les. Agrandir le canevas de mani\u00e8re \u00e0 lui donner une largeur de 500 unit\u00e9s et une hauteur de 650. Modifier \u00e9galement la taille des lignes, afin que leurs extr\u00e9mit\u00e9s se confondent avec les bords du canevas. Ajouter une fonction drawline2( ) qui tracera deux ligne rouges en croix au centre du canevas : l'une horizontale et l'autre verticale. Ajouter \u00e9galement un bouton portant l'indication \u00ab viseur \u00bb. Un clic sur ce bouton devra provoquer l'affichage de la croix. Reprendre le programme initial. Remplacer la m\u00e9thode create_line par la m\u00e9thode create_rectangle . Que se passe-t-il ? Qu'indique les coordonn\u00e9es fournies en param\u00e8tres ? (Noter ses informations dans un endroit o\u00f9 vous les retrouverez facilement Recommencer en rempla\u00e7ant cette fois par create_oval . Que se passe-t-il et qu'indique les coordonn\u00e9es fournies en param\u00e8tres ? Cr\u00e9er un programme qui dessinera les cinq anneaux olympiques dans un rectangle de fond blanc (white). Utiliser l'argument outline \u00e0 la place de fill pour la couleur des anneaux. Un bouton \u00ab quitter \u00bb doit permettre de fermer la fen\u00eatre. Modifier le programme pr\u00e9c\u00e9dent en y ajoutant cinq boutons. Chacun de ces boutons provoquera le trac\u00e9 d'un anneau.","title":"Exercices"},{"location":"Programmation/tkinter.html#deux-dessins-alternes","text":"\u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from tkinter import * def cercle ( x , y , r , coul = 'black' ): \"trac\u00e9 d'un cercle de centre (x,y) et de rayon r\" can . create_oval ( x - r , y - r , x + r , y + r , outline = coul ) def figure_1 (): \"dessiner une cible\" # Effacer d'abord tout dessin pr\u00e9existant : can . delete ( ALL ) # Tracer les deux lignes (vert. et horiz.) : can . create_line ( 100 , 0 , 100 , 200 , fill = 'blue' ) can . create_line ( 0 , 100 , 200 , 100 , fill = 'blue' ) # Tracer plusieurs cercles concentriques : rayon = 15 while rayon < 100 : cercle ( 100 , 100 , rayon ) rayon += 15 def figure_2 (): \"dessiner un visage simplifi\u00e9\" # Effacer d'abord tout dessin pr\u00e9existant : can . delete ( ALL ) # Les caract\u00e9ristiques de chaque cercle sont # plac\u00e9es dans une liste de liste : cc = [[ 100 , 100 , 80 , 'red' ], # visage [ 70 , 70 , 15 , 'blue' ], # yeux [ 130 , 70 , 15 , 'blue' ], [ 70 , 70 , 5 , 'black' ], [ 130 , 70 , 5 , 'black' ], [ 44 , 115 , 20 , 'red' ], # joues [ 156 , 115 , 20 , 'red' ], [ 100 , 95 , 15 , 'purple' ], # nez [ 100 , 145 , 30 , 'purple' ]] # bouche # on trace tous les cercles \u00e0 l'aide d'une boucle : i = 0 while i < len ( cc ): # parcourt de la liste el = cc [ i ] # chaque \u00e9l\u00e9ment est lui-m\u00eame une liste cercle ( el [ 0 ], el [ 1 ], el [ 2 ], el [ 3 ]) i += 1 ##### Programme principal ##### fen = Tk () can = Canvas ( fen , width = 200 , height = 200 , bg = 'ivory' ) can . pack ( side = TOP , padx = 5 , pady = 5 ) b1 = Button ( fen , text = 'dessin 1' , command = figure_1 ) b1 . pack ( side = LEFT , padx = 3 , pady = 3 ) b2 = Button ( fen , text = 'dessin 2' , command = figure_2 ) b2 . pack ( side = RIGHT , padx = 3 , pady = 3 ) fen . mainloop () on obtient : L'option side peut accepter les valeurs TOP, BOTTOM, LEFT ou RIGHT , pour \u00ab pousser \u00bb le widget du c\u00f4t\u00e9 correspondant de la fen\u00eatre. Les options padx et pady permettent de r\u00e9server un petit espace autour du widget. Cet espace est exprim\u00e9 en nombre de pixels : padx r\u00e9serve un espace \u00e0 gauche et \u00e0 droite du widget, pady r\u00e9serve un espace au- dessus et au-dessous du widget. Prenez le temps d'essayer de bien comprendre ce programme.","title":"Deux dessins altern\u00e9s"},{"location":"Programmation/tkinter.html#exercices_1","text":"\u00c9crire une application qui dessine un damier (carr\u00e9s 'navy' sur fond blanc), ainsi que des pions rouges qui apparaissent au hasard lorsque que l'on clique sur un bouton dans un premier temps, on se contentera du damier). Le canevas devra avoir une dimension de 300*300. Les carr\u00e9s devront avoir un c\u00f4t\u00e9 \u00e9gal \u00e0 30. Les pions devront avoir un rayon \u00e9gal \u00e0 10. Le programme comportera les fonctions suivantes : damier() : donn\u00e9e ci-dessous ligne_de_carres(x, y) : dessine une ligne de 5 carr\u00e9s de couleur 'navy' espac\u00e9s, en partant de (x,y). disque(x, y, r, coul) : dessine un disque de centre (x,y), de rayon r et de couleur coul. pion( ) : dessine un pion au hasard sur le damier (utilisera la fonction disque).","title":"Exercices :"},{"location":"Programmation/tkinter.html#les-entrees-au-clavier-la-calculatrice","text":"\u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from tkinter import * from math import * # d\u00e9finition de l'action \u00e0 effectuer si l'utilisateur actionne # la touche \"enter\" alors qu'il \u00e9dite le champ d'entr\u00e9e : def evaluer ( event ): chaine . configure ( text = 'R\u00e9sultat = ' + str ( eval ( entree . get ()))) ##### Programme principal ##### fenetre = Tk () entree = Entry ( fenetre , background = 'white' ) entree . bind ( \"<Return>\" , evaluer ) chaine = Label ( fenetre ) entree . pack () chaine . pack () fenetre . mainloop () on obtient : Au d\u00e9but du script, on importe le module math pour que la calculatrice puisse disposer de toutes les fonctions math\u00e9matiques et scientifiques usuelles : sinus, cosinus, racine carr\u00e9e, etc. La fonction evaluer() sera la commande ex\u00e9cut\u00e9e par le programme lorsque l'utilisateur actionnera la touche Return. Cette fonction utilise la m\u00e9thode configure( ) du widget chaine, pour modifier son attribut text. eval( ) \u00e9value (fait le calcul) la cha\u00eene de caract\u00e8res. str( ) transforme une expression num\u00e9rique en cha\u00eene de caract\u00e8res. get( ) est une m\u00e9thode qui permet d'extraire du widget entree la cha\u00eene de caract\u00e8res qui lui a \u00e9t\u00e9 fournie par l'utilisateur. entree est un widget de la \u00ab classe \u00bb Entry . Afin que ce widget puisse transmettre au programme l'expression que l'utilisateur y aura encod\u00e9e, il faut lui associer un \u00e9v\u00e9nement \u00e0 l'aide de la m\u00e9thode bind() (bind signifie \u00ab lier \u00bb en anglais). entree.bind(\"<Return>\", evaluer) signifie : \u00ab lier l'\u00e9v\u00e9nement 'pression sur la touche <Return> ' \u00e0 l'objet entree, le gestionnaire de cet \u00e9v\u00e9nement \u00e9tant la fonction evaluer \u00bb. L'argument event fourni \u00e0 la fonction \u00e9valuer est obligatoire d\u00e8s que l'on utilise la m\u00e9thode bind() .","title":"Les entr\u00e9es au clavier : la calculatrice"},{"location":"Programmation/tkinter.html#detection-du-clic-de-souris","text":"\u00c9crire, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 from tkinter import * # D\u00e9tection et positionnement d'un clic de souris dans une fen\u00eatre : def pointeur ( event ): chaine . configure ( text = \"Clic d\u00e9tect\u00e9 en X = \" + str ( event . x ) + \", Y = \" + str ( event . y )) fen = Tk () can = Frame ( fen , width = 200 , height = 150 , bg = \"light yellow\" ) can . bind ( \"<Button-1>\" , pointeur ) can . pack () chaine = Label ( fen ) chaine . pack () fen . mainloop () On obtient : Le widget Frame sert \u00e0 conenir des \u00e9l\u00e9ments. Il n'est pas utile de mettre un canevas si on a rien \u00e0 dessiner. Le script fait appara\u00eetre une fen\u00eatre contenant un cadre (frame) rectangulaire de couleur jaune p\u00e2le. La m\u00e9thode bind() du widget cadre associe l'\u00e9v\u00e9nement clic \u00e0 l'aide du premier bouton de la souris> au gestionnaire d'\u00e9v\u00e9nement \u00ab pointeur \u00bb. Ce gestionnaire d'\u00e9v\u00e9nement peut utiliser les attributs x et y de l'objet event g\u00e9n\u00e9r\u00e9 automatiquement (sous le nom de event.x et event.y ) par Python, pour construire la cha\u00eene de caract\u00e8res qu' affichera la position de la souris au moment du clic.","title":"D\u00e9tection du clic de souris"},{"location":"Programmation/tkinter.html#exercices_2","text":"Modifier le script ci-dessus de mani\u00e8re \u00e0 faire appara\u00eetre un petit cercle rouge \u00e0 l'endroit o\u00f9 l'utilisateur a effectu\u00e9 son clic (il faut d'abord remplacer le widget Frame par un widget Canvas). On tracera alors un cercle autour de la position de la souris.","title":"Exercices :"},{"location":"Programmation/tkinter.html#widgets-et-positionnement-dans-le-canevas","text":"","title":"Widgets et positionnement dans le Canevas"},{"location":"Programmation/tkinter.html#classe-de-widgetwindowsgadget","text":"Il existe 15 classes de base pour les widgets Tkinter : Button : Un bouton classi Canvas : Un espace pour disposer divers \u00e9l\u00e9ments graphiques. Ce widget peut \u00eatre utilis\u00e9 pour dessiner, cr\u00e9er des \u00e9diteurs graphiques, et aussi pour impl\u00e9menter des widgets personnalis\u00e9s. Checkbutton : Une \u00ab case \u00e0 cocher \u00bb qui peut prendre deux \u00e9tats distincts (la case est coch\u00e9e ou non). Un clic sur ce widget provoque le changement d'\u00e9tat. Entry : Un champ d'entr\u00e9e, dans lequel l'utilisateur du programme pourra ins\u00e9rer un texte quelconque \u00e0 partir du clavier. Frame : Une surface rectangulaire dans la fen\u00eatre, o\u00f9 l'on peut disposer d'autres widgets. Cette surface peut \u00eatre color\u00e9e. Elle peut aussi \u00eatre d\u00e9cor\u00e9e d'une bordure. Label : Un texte (ou libell\u00e9) quelconque (\u00e9ventuellement une image). Listbox : Une liste de choix propos\u00e9s \u00e0 l'utilisateur, g\u00e9n\u00e9ralement pr\u00e9sent\u00e9s dans une sorte de bo\u00eete. On peut \u00e9galement configurer la Listbox de telle mani\u00e8re qu'elle se comporte comme une s\u00e9rie de \u00ab boutons radio \u00bb ou de cases \u00e0 cocher. Menu : Un menu. Ce peut \u00eatre un menu d\u00e9roulant attach\u00e9 \u00e0 la barre de titre, ou bien un menu \u00ab pop up \u00bb apparaissant n'importe o\u00f9 \u00e0 la suite d'un clic. Menubutton : Un bouton-menu, \u00e0 utiliser pour impl\u00e9menter des menus d\u00e9roulants. Message : Permet d'afficher un texte. Ce widget est une variante du widget Label, qui permet d'adapter automatiquement le texte affich\u00e9 \u00e0 une certaine taille ou \u00e0 un certain rapport largeur/hauteur. Radiobutton : Repr\u00e9sente (par un point noir dans un petit cercle) une des valeurs d'une variable qui peut en poss\u00e9der plusieurs. Cliquer sur un \u00ab bouton radio \u00bb donne la valeur correspondante \u00e0 la variable, et \"vide\" tous les autres boutons radio associ\u00e9s \u00e0 la m\u00eame variable. Scale : Vous permet de faire varier de mani\u00e8re tr\u00e8s visuelle la valeur d'une variable, en d\u00e9pla\u00e7ant un curseur le long d'une r\u00e8gle. Scrollbar : \u00ab ascenseur \u00bb ou \u00ab barre de d\u00e9filement \u00bb que vous pouvez utiliser en association avec les autres widgets : Canvas, Entry, Listbox, Text. Text : Affichage de texte format\u00e9. Permet aussi \u00e0 l'utilisateur d'\u00e9diter le texte affich\u00e9. Des images peuvent \u00e9galement \u00eatre ins\u00e9r\u00e9es. Toplevel : Une fen\u00eatre affich\u00e9e s\u00e9par\u00e9ment, \u00ab par-dessus \u00bb. Ces classes de widgets int\u00e8grent chacune un grand nombre de m\u00e9thodes. On peut aussi leur associer (lier) des \u00e9v\u00e9nements, comme d\u00e9j\u00e0 vu dans les pages pr\u00e9c\u00e9dentes. Tous ces widgets peuvent \u00eatre positionn\u00e9s dans les fen\u00eatres \u00e0 l'aide de trois m\u00e9thodes diff\u00e9rentes : la m\u00e9thode grid( ) , la m\u00e9thode pack( ) et d'autres encore... Liste des m\u00e9thodes communes \u00e0 tous les widgets","title":"Classe de widget(windows+gadget)"},{"location":"Programmation/tkinter.html#methode-grid-pour-le-positionnement-des-widgets","text":"Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from tkinter import * fen1 = Tk () txt1 = Label ( fen1 , text = 'Premier champ : ' ) txt2 = Label ( fen1 , text = 'Second : ' ) entr1 = Entry ( fen1 , bg = 'white' ) entr2 = Entry ( fen1 , bg = 'white' ) txt1 . grid ( row = 0 ) txt2 . grid ( row = 1 ) entr1 . grid ( row = 0 , column = 1 ) entr2 . grid ( row = 1 , column = 1 ) fen1 . mainloop () La m\u00e9thode grid() consid\u00e8re la fen\u00eatre comme un tableau, avec des lignes (row) et des colonnes (column). Il est possible d'aligner les widgets avec l'option sticky qui peut prendre l'une des quatre valeurs N, S, E, W (les quatre points cardinaux en anglais).","title":"M\u00e9thode grid() pour le positionnement des widgets"},{"location":"Programmation/tkinter.html#exercices_3","text":"Remplacer les deux premi\u00e8res instructions grid( ) du script par : txt1.grid(row=0, sticky=E) txt2.grid(row=1, sticky=E) Le but de cet exercice est d'obtenir la fen\u00eatre ci-dessous : voici le fichier image \u00e0 utiliser (cliquer sur le lien pour t\u00e9l\u00e9charger) Image anneaux Le programme comportera entre autres, les parties suivantes : 1 2 3 4 5 6 7 8 9 10 11 #Cr\u00e9ation des widget Label et Entry A vous de compl\u00e9ter #Cr\u00e9ation d'un widget Canvas contenant une image can1 = Canvas ( fen1 , width = 320 , height = 160 , bg = 'white' ) anneaux = PhotoImage ( file = 'AnOlympiques.gif' ) item = can1 . create_image ( 160 , 80 , image = anneaux ) #Mise en place des widgetsLabel et Entry A vous de compl\u00e9ter can1 . grid ( row = 0 , column = 2 , rowspan = 3 , padx = 10 , pady = 5 ) Tkinter ne permet pas d'ins\u00e9rer directement une image dans une fen\u00eatre. Il faut d'abord installer un canevas, et ensuite positionner l'image dans celui-ci, gr\u00e2ce \u00e0 l'instruction item=can1.create_image(160, 80, image=anneaux) . Les deux premiers arguments transmis (160,80) indiquent les coordonn\u00e9es x et y du canevas o\u00f9 il faut placer le centre de l'image (ici, l'image sera donc centr\u00e9e dans le canevas). L'instruction rowspan=3 indique que le canevas pourra \u00ab s'\u00e9taler \u00bb sur trois lignes. padx et pady indiquent la dimension de l'espace \u00e0 r\u00e9server autour du canevas.","title":"Exercices :"},{"location":"Programmation/tkinter.html#animations-deplacer-les-objets","text":"","title":"Animations : d\u00e9placer les objets"},{"location":"Programmation/tkinter.html#modifier-les-proprietes-dun-objet-animation","text":"Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from tkinter import * # Proc\u00e9dure g\u00e9n\u00e9rale de d\u00e9placement : def avance ( gd , hb ): global x1 , y1 x1 , y1 = x1 + gd , y1 + hb can1 . coords ( oval1 , x1 , y1 , x1 + 30 , y1 + 30 ) # Gestionnaire d'\u00e9v\u00e9nements : def depl_gauche (): avance ( - 10 , 0 ) def depl_droite (): avance ( 10 , 0 ) def depl_haut (): avance ( 0 , - 10 ) def depl_bas (): avance ( 0 , 10 ) ##### Programme principal ##### # Les variables suivantes seront utilis\u00e9es de mani\u00e8re globale : x1 , y1 = 10 , 10 # coordonn\u00e9es initiales # Cr\u00e9ation du widget \"ma\u00eetre\" : fen1 = Tk () fen1 . title ( \"Exercice d'animation avec Tkinter\" ) # Cr\u00e9ation des widgets \"esclaves\" can1 = Canvas ( fen1 , bg = 'dark gray' , height = 300 , width = 300 ) oval1 = can1 . create_oval ( x1 , y1 , x1 + 30 , y1 + 30 , width = 2 , fill = 'red' ) can1 . pack ( side = LEFT ) Button ( fen1 , text = 'Quitter' , command = fen1 . quit ) . pack ( side = BOTTOM ) Button ( fen1 , text = 'Gauche' , command = depl_gauche ) . pack () Button ( fen1 , text = 'Droite' , command = depl_droite ) . pack () Button ( fen1 , text = 'Haut' , command = depl_haut ) . pack () Button ( fen1 , text = 'Bas' , command = depl_bas ) . pack () # D\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nement : fen1 . mainloop () fen1 . destroy () La fonction avance( ) red\u00e9finit les coordonn\u00e9es de l'objet \u00ab cercle color\u00e9 \u00bb ( oval1 ) \u00e0 chaque fois que l'on clique sur un des boutons. Ce qui provoque son animation. Les boutons ont \u00e9t\u00e9 d\u00e9finis de mani\u00e8re plus compact (pas d'utilisation de variables).","title":"Modifier les propri\u00e9t\u00e9s d'un objet (animation)"},{"location":"Programmation/tkinter.html#exercices_4","text":"Modifier le programme pr\u00e9c\u00e9dent de mani\u00e8re \u00e0 ce que le cercle oval1 se place \u00e0 l'endroit o\u00f9 l'on clique avec la souris. \u00c9crire un programme qui fasse appara\u00eetre une fen\u00eatre avec un canevas (100*150). Dans ce canevas, placer un petit cercle (de rayon 15) cens\u00e9 repr\u00e9senter une balle. Sous le canevas, placer un bouton. Chaque fois que l'on clique sur le bouton, la balle doit avancer d'une petite distance (10) vers la droite, jusqu'\u00e0 ce qu'elle atteigne l'extr\u00e9mit\u00e9 du canevas. Si l'on continue \u00e0 cliquer, la balle doit alors revenir en arri\u00e8re jusqu'\u00e0 l'autre extr\u00e9mit\u00e9, et ainsi de suite. \u00c9crire un programme qui fasse la conversion des degr\u00e9s Celsius vers les degr\u00e9s Fahrenheit en tapant la touche Return, et vice-versa. On utilisera la formule : TF =TC \u00d71,8+32 . Vous aurez besoin de la m\u00e9thode get( ) du widget Entry (voir la calculatrice), ainsi que des m\u00e9thodes delete(0,END) pour effacer un champ du d\u00e9but \u00e0 la fin, et insert(0,text) pour ins\u00e9rer le texte text \u00e0 partir du d\u00e9but du champ.","title":"Exercices :"},{"location":"Programmation/tkinter.html#animations-automatiques","text":"Recopier, sauvegarder et ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 from tkinter import * # d\u00e9finition des gestionnaires d'\u00e9v\u00e9nements def move (): \"d\u00e9placement de la balle\" global x1 , y1 , dx , dy , flag x1 , y1 = x1 + dx , y1 + dy if x1 > 210 : x1 , dx , dy = 210 , 0 , 15 if y1 > 210 : y1 , dx , dy = 210 , - 15 , 0 if x1 < 10 : x1 , dx , dy = 10 , 0 , - 15 if y1 < 10 : y1 , dx , dy = 10 , 15 , 0 can1 . coords ( oval1 , x1 , y1 , x1 + 30 , y1 + 30 ) if flag > 0 : fen1 . after ( 50 , move ) # boucler apr\u00e8s 50 millisecondes def stop_it (): \"arr\u00eat de l'animation\" global flag flag = 0 def start_it (): \"d\u00e9marrage de l'application\" global flag if flag == 0 : # pour ne lancer qu'une seule boucle flag = 1 move () ##### Programme principal ##### # Les variables suivantes sont utilis\u00e9es de mani\u00e8re globale : x1 , y1 = 10 , 10 # coordonn\u00e9es initiales dx , dy = 15 , 0 # 'pas' du d\u00e9placement flag = 0 # commutateur # Cr\u00e9ation du widget \"parent\" : fen1 = Tk () fen1 . title ( \"Exercice d'animation avec Tkinter\" ) # Cr\u00e9ation des widgets \"enfants\" : can1 = Canvas ( fen1 , bg = 'dark gray' , height = 250 , width = 250 ) can1 . pack ( side = LEFT , padx = 5 , pady = 5 ) oval1 = can1 . create_oval ( x1 , y1 , x1 + 30 , y1 + 30 , width = 2 , fill = 'red' ) bou1 = Button ( fen1 , text = 'Quitter' , width = 8 , command = fen1 . quit ) bou1 . pack ( side = BOTTOM ) bou2 = Button ( fen1 , text = 'D\u00e9marrer' , width = 8 , command = start_it ) bou2 . pack () bou3 = Button ( fen1 , text = 'Arr\u00eater' , width = 8 , command = stop_it ) bou3 . pack () # D\u00e9marrage du r\u00e9ceptionnaire d'\u00e9v\u00e9nements : fen1 . mainloop () fen1 . destroy () La m\u00e9thode after() d\u00e9clenche l'appel d'une fonction apr\u00e8s qu'un certain laps de temps se soit \u00e9coul\u00e9 (temps en millisecondes). Ici la m\u00e9thode after( ) se trouve dans la fonction move( ) . Elle appelle la fonction move( ) elle-m\u00eame. Cette technique de programmation tr\u00e8s puissante est appel\u00e9e \u00ab r\u00e9cursivit\u00e9 \u00bb : la fonction s'appelle elle-m\u00eame. Attention, pour que le programme ne boucle pas ind\u00e9finiment, il faut mettre en place un moyen pour l'interrompre. \u00c0 chaque it\u00e9ration de la boucle, le contenu de la variable flag est test\u00e9 (instruction if). Si le contenu de la variable flag est \u00e0 0, alors le bouclage ne s'effectue plus et l'animation s'arr\u00eate. Un premier clic sur \u00ab D\u00e9marrer \u00bb assigne une valeur non nulle \u00e0 la variable flag , puis provoque imm\u00e9diatement un appel de la fonction move() . Celle-ci s'ex\u00e9cute et continue \u00e0 s'appeler elle-m\u00eame toutes les 50 millisecondes, tant que flag ne revient pas \u00e0 0. Si l'on continue \u00e0 cliquer sur le bouton \u00ab D\u00e9marrer \u00bb, la fonction move() ne peut plus \u00eatre appel\u00e9e tant que flag vaut 1. On \u00e9vite ainsi le d\u00e9marrage de plusieurs boucles concurrentes. Le bouton \u00ab Arr\u00eater \u00bb remet flag \u00e0 0 et la boucle s'interrompt.","title":"Animations automatiques"},{"location":"Programmation/tkinter.html#exercices_5","text":"Dans la fonction start_it( ) , supprimer l'instruction if flag==0 : (et l'indentation des deux lignes suivantes). Cliquer plusieurs fois sur le bouton \u00ab D\u00e9marrer \u00bb. Observer ce qui se passe Modifier le programme de telle fa\u00e7on que la balle change de couleur \u00e0 chaque \u00ab virage \u00bb. Vous aurez besoin de l'instruction : can1.itemconfigure(oval1,fill='green')","title":"Exercices :"},{"location":"Programmation/tkinter.html#minis-projets","text":"Travaux de groupe Les groupes sont impos\u00e9s, vous rendrez un seul projet et aurez tous la m\u00eame note. DISCUTEZ ENTRE VOUS !! R\u00e9partissez vous le travail en vous mettant d'accord \u00e0 l'avance sur le nom des fonctions, des variables, des fichiers, ... Pr\u00e9voyez \u00e0 l'avance, qui fait quoi, o\u00f9 vous vous arr\u00eatez Lister TOUTES les fonctionnalit\u00e9s du programme Ne travaillez pas \u00e0 plusieurs en parall\u00e8le sur le m\u00eame fichier","title":"Minis projets"},{"location":"Programmation/tkinter.html#pacman","text":"Vous allez r\u00e9aliser une version simplifi\u00e9e de PacMan. Voici une petite d\u00e9monstration . Les objectifs minimums cr\u00e9er un rond jaune (30px de diametre) que l'on peut d\u00e9placer avec des fl\u00e8ches dans un canevas de 900 par 300. Placer 10 rectangles blancs (fantomes de 1px de large et 20 de haut) de fa\u00e7on al\u00e9atoire. Placer 50 pac-gommes (cercles noirs de rayon 5 px) de fa\u00e7on al\u00e9atoire. Quand pac-man touche une pac-gomme, elle disparait et le score augment de 1 Quand pac-man touche un fantome, il perd une vie et revient \u00e0 l'emplacement du d\u00e9but (sans remettre les pac-gomme d\u00e9j\u00e0 mang\u00e9es et sans r\u00e9initialiser le score) Le jeu se termine lorsque Pac-man a mang\u00e9 toutes les pac-gomme ou qu'il a perdu 3 vies !! info \"Niveau interm\u00e9diaire :\" 1 Faire d\u00e9placer les fant\u00f4mes de fa\u00e7on al\u00e9atoire et les faire rebondir sur les bords Niveau avanc\u00e9 : Placer tout ce petit monde dans un labyrinthe. Ajouter de la musique ... Au minimum vous devez obtenir ceci : Conseils Les fant\u00f4mes peuvent \u00eatre g\u00e9r\u00e9s par une liste. Utiliser les morceaux de code vus en activit\u00e9. Attention aux nombreux codes que vous trouverez sur internet que vous ne sauriez ni expliquer ni utiliser (notamment ceux r\u00e9alis\u00e9s en programmation orient\u00e9 objet). Faites simple mais efficace","title":"PacMan"},{"location":"Programmation/tkinter.html#repertoire-telephonique","text":"Vous allez cr\u00e9er une interface permettant de g\u00e9rer un r\u00e9pertoire t\u00e9l\u00e9phonique. Il faudra, dans un premier temps, cr\u00e9er en programmation classique la cr\u00e9ation et la modification du r\u00e9pertoire. Ensuite, cr\u00e9er une interface graphique permettant d'utiliser le r\u00e9pertoire. Voici les fichiers n\u00e9cessaires \u00e0 la r\u00e9alisation du projet. L'interface devra contenir les boutons AJOUTER, SUPPRIMER, RECHERCHER, QUITTER (qui devra enregistrer les modifications dans le fichier texte) La fonction d'affichage peut se faire par d\u00e9faut (comme sur votre smartphone) ou par action sur un bouton AFFICHER. Le Le document de fonctionnement du r\u00e9p\u00e8rtoire t\u00e9l\u00e9phonique , L'exemple sur les d\u00e9partements , Enregistrer un dictionnaire , r\u00e9cup\u00e9rer un dictionnaire , r\u00e9pertoire \u00e0 compl\u00e9ter , Vous pouvez aller voir par ici pour tenir compte de l'ergonomie de votre interface. conseil Pr\u00e9voir de faire une version qui fonctionne sans interface (l'interface sera plus facile \u00e0 cr\u00e9er ensuite en appelant le fichier existant).","title":"R\u00e9pertoire t\u00e9l\u00e9phonique"},{"location":"Programmation/tkinter.html#motus","text":"Vous ne connaissez pas ? Objectifs minimums utiliser le fichier dico propre qui contient une tr\u00e8s grande liste de mots et charger son contenu dans une liste (v\u00e9rifier en affichant les 10 premiers mots par exemple) Nettoyer la liste pour n'obtenir que les mots de 6 lettres Faire afficher la premi\u00e8re lettre et les cases vides une fois un mot propos\u00e9 par le joueur on d\u00e9termine (comme dans la vid\u00e9o) les lettres bien plac\u00e9es et mal plac\u00e9es L'utilisateur, s'il trouve le mot cumule un certain nombre de points : 6 points s'il trouve \u00e0 la premiere, 5 \u00e0 la deuxi\u00e8me, ... L'utilisateur peut jouer 5 fois. Niveau avanc\u00e9 Conserver le nom du joueur et le score dans un fichier ext\u00e9rieur (txt ou csv au choix) Faire afficher le nom du joueur ayant enregistr\u00e9 le meilleur score Conseil Pr\u00e9voir de faire une version qui fonctionne sans interface (l'interface sera plus facile \u00e0 cr\u00e9er ensuite en appelant le fichier existant).","title":"Motus"},{"location":"Programmation/type.html","text":"Types construits \u2693\ufe0e (chaines de caract\u00e8res, listes, dictionnaires et tuples) \u2693\ufe0e Les listes \u2693\ufe0e En python (pas avec les autres langages) une liste est un ensemble d\u2019\u00e9l\u00e9ments du m\u00eame type OU NON. Indexation (posistion dans la liste) \u2693\ufe0e L'index d'un \u00e9l\u00e9ment, correspond \u00e0 sa position. On compte \u00e0 partir de 0. 1 2 3 4 >>> print ( L2 [ 2 ]) #affiche l'\u00e9l\u00e9ment d'index 2 de la liste L2 4.5 >>> print ( L2 [ - 2 ]) #2e element en partant de la fin 4.5 Longueur d'une liste (nombre d'objets qu'elle contient) \u2693\ufe0e len() Longueur d\u2019une liste : renvoie le nombre d\u2019\u00e9l\u00e9ments 1 2 print ( len ( L2 )) >>> 4 Remarque Le denier index de la liste correspond donc \u00e0 la longueur -1. D\u00e9couper une liste \u2693\ufe0e On peut avoir besoin d'utiliser seulement une partie de la liste. Seulement de d\u00e9but, ou seulement la fin par exemple. On peut alors utiliser les slices pour ne prendre que certains \u00e9l\u00e9ments. L[a:b] correspond \u00e0 la partie de la liste dont les index sont commpris entre a et b-1 (attention b est exclu). Si a n'est pas rensign\u00e9, on commence au d\u00e9but, si b n'est pas renseign\u00e9, on va jusqu'\u00e0 la fin. !!! example 'exemples' 1 2 3 4 5 6 7 8 9 L = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] print ( L [ 2 : 6 ]) >>> [ 2 , 3 , 4 , 5 ] print ( L [: 6 ]) >>> [ 0 , 1 , 2 , 3 , 4 , 5 ] print ( L [ 5 :]) >>> [ 5 , 6 , 7 , 8 ] print ( L [ 1 : 2 : 7 ]) # index de 1 \u00e0 6 avec un pas de 2 >>> [ 1 , 3 , 5 ] Remarque L'utilisation du code L2=L[:] permet de faire une copie de la liste. Ce code n'est pas \u00e9quivalent \u00e0 L2=L qui se contente de faire pointer L2 vers L . Donc dans le dernier cas si on modifie L cela modifie \u00e9galement L2 alors qu'avec l'astuce du slice, on fait une copie dont la modification est ind\u00e9pendante. Cr\u00e9er une liste \u2693\ufe0e Une liste peut etre cr\u00e9er directement si l'on sait ce qu'elle doit contenir : 1 L = [ 1 , 'bon' , 'chocolat' , True , 24 , 6.7 ] On peut cr\u00e9er une boucle pour remplir une liste. il faut d'abord cr\u00e9er une liste de valeurs identiques par exemple de la taille que l'on souhaite, puis la parcourir pour remplacer les \u00e9l\u00e9ments. 1 >>> [ 0 , 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 ] Si on souhaite ajouter des \u00e9l\u00e9ments un par un, on peut utiliser la m\u00e9thode L.append(element) qui va ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste. 1 2 3 L = [ 1 , 'bon' , 'chocolat' , True , 24 , 6.7 ] L . append ( 345 ) print ( L ) 1 >>> L =[ 1 , 'bon' , 'chocolat' , True, 24 , 6 .7, 345 ] Plus difficile : Liste par commpr\u00e9hension On peut cr\u00e9er une liste de mani\u00e8re succinte en une seule ligne, qui correspond en fait \u00e0 la construction par boucle. [element boucle condition] 1 2 3 4 >>> [ i * 0.5 for i in range ( 1 , 10 )] #i va de 1 \u00e0 9 et les \u00e9l\u00e9ments de la liste sont la moiti\u00e9 de i [ 0.5 , 1 , 1.5 , 2 , 2.5 , 3 , 3.5 , 4 , 4.5 ] [ i * 0.5 for i in range ( 1 , 10 ) if i % 2 == 0 ] # m\u00eame chose sauf que i%2 doit \u00eatre \u00e9gal \u00e0 0 (c'est-\u00e0-dire que i doit etre pair) [ 1 , 2 , 3 , 4 ] Liste non exhaustive des m\u00e9thodes de listes liste.append(truc) : ajoute l\u2019\u00e9l\u00e9ment unique truc \u00e0 la fin de la liste liste1.extend(liste2) : rajoute en fin de liste1 la liste2. Equivaut \u00e0 faire liste1 = liste1 + liste2 min(liste) : retourne la valeur minimum d\u2019une liste max(liste) : retourne la valeur maximum d'une liste liste.sort() : trie une liste dans l\u2019ordre croissant (cf. doc pour l\u2019ordre d\u00e9croissant et les options) liste.remove(valeur) : supprime la premi\u00e8re occurrence de valeur dans la liste liste.insert(index, valeur) : ins\u00e8re valeur \u00e0 l\u2019indice index liste.reverse() : inverse les \u00e9l\u00e9ments de la liste a=liste.count(valeur) : la viaiable a prend pour valeur le nombre d\u2019occurrences de valeur dans la liste b=liste.index(valeur) : la variable b prend pour valeur l\u2019index de la premi\u00e8re occurrence de valeur dans la liste in() : permet de savoir si un \u00e9l\u00e9ment est dans une liste >>>2 in(L) renvoie True ou False Les tableaux : listes de listes \u2693\ufe0e Un tableau est une liste de liste. Chaque \u00e9l\u00e9ment de la liste est un ligne du tableau. 1 tab3x3 = [[ 1 , 2 , 3 ],[ 4 , 5 , 6 ],[ 7 , 8 , 9 ]] tab3x3[1] est la 2e ligne du tableau tab3x3[1][0] est le 1er \u00e9l\u00e9ment de la 2e ligne 1 2 3 4 print ( tab3x3 [ 1 ]) >>> [ 4 , 5 , 6 ] print ( tab3x3 [ 1 ][ 0 ]) >>> 4 Remarque Toutes les m\u00e9thodes de listes sont applicables aux tableaux puisque ce sont des listes. Cr\u00e9ation d'un tableau de N lignes et M colonnes On commence par cr\u00e9er un tableau vide dans lequel on ajoute N lignes vides. Puis on ajoute autant de fois qu'il y a de colonnes ce que l'on veut dans chaque ligne du tableau. 1 2 3 4 5 6 7 tab = [] #Cr\u00e9er le cadre du tableau for i in range ( N ) : #on r\u00e9p\u00e8te autant de fois qu\u2019on veut de lignes Tab . append ([]) # cr\u00e9ation d\u2019un ligne vide for i in range ( N ) : for j in range ( M ) : #on r\u00e9p\u00e8te autant de fois qu\u2019il y a de colonnes Tabl [ i ] . append ( UnTruc ) #on ajoute un truc \u00e0 la i\u00e8me ligne Parcourir un tableau dont on ne connait pas les dimensions 1 2 3 for i in range ( len ( tab )) : for j in range ( len ( tab [ i ])) : #on r\u00e9p\u00e8te autant de fois qu\u2019il y a de colonnes tab [ i ][ j ] += 1 tab[i][j] est l'\u00e9l\u00e9ment de tableau de la ligne d'indice i et de la colonne d'index j. Les cha\u00eenes de caract\u00e8res \u2693\ufe0e Un texte est un ensemble de caract\u00e8res (lettres). Tout ce qui concerne les listes s'applique aux cha\u00eenes de caract\u00e8res (sauf certaines des m\u00e9thodes cit\u00e9s). Cetaines m\u00e9thodes sont sp\u00e9cifiques aux cha\u00eenes de caract\u00e8res : chaine.split() qui permet de d\u00e9couper une ch\u00e2ine de caract\u00e8res. On choisit le s\u00e9parateur, par d\u00e9faut c\u2019est l\u2019espace : on obtient alors tous les mots de la ch\u00e2ine. On verra dans le chapitre sur les donn\u00e9es qu\u2019un autre s\u00e9parateur peut \u00eatre utile (souvent la virgule pour les fichier .csv). On pr\u00e9cise le s\u00e9parateur entre les parenth\u00e8ses. \u201cs\u00e9parateur\u201d.join(liste) fait l\u2019inverse du split. Il cr\u00e9e une cha\u00eene \u00e0 partir d\u2019une liste de cha\u00eenes. On peut l\u00e0 aussi pr\u00e9ciser le s\u00e9parateur. chaine.find(sousChaine) cherche la position d\u2019une sous-cha\u00eene \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene. chaine.index(caract\u00e8re) cherche la position d\u2019un caract\u00e8re \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene. chaine.count(sousChaine) compte le nombre d\u2019occurences d\u2019une sous-cha\u00eene \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene Chaine1+chaine2 : lie les chaines de caract\u00e8res sans s\u00e9parateur Et bien d'autres mais il est inutile ici de les r\u00e9pertorier toutes. Les dictionnaires \u2693\ufe0e Un dictionnaire en Python va aussi permettre de rassembler des \u00e9l\u00e9ments mais ceux-ci seront identifi\u00e9s par une cl\u00e9. On peut faire l\u2019analogie avec un dictionnaire de fran\u00e7ais o\u00f9 on acc\u00e8de \u00e0 une d\u00e9finition avec un mot. Contrairement aux listes qui sont d\u00e9limit\u00e9es par des crochets, on utilise des accolades pour les dictionnaires. Par exemple : Nombre_de_pneus : nom du dictionnaire \"voiture\" et \"v\u00e9lo\" sont des cl\u00e9s (keys) et 4 et 2 les valeurs (values) correspondantes. A chaque cl\u00e9 correspond une valeur . Un couple cl\u00e9 : valeur est appel\u00e9 item . 1 2 3 4 5 6 Nombre_de_pneus = {} # cr\u00e9ation du dictionnaire vide Nombre_de_pneus [ \"voiture\" ] = 4 Nombre_de_pneus [ \"v\u00e9lo\" ] = 2 Nombre_de_pneus [ \"tricycle\" ] = 3 print ( Nombre_de_pneus ) >>> { 'voiture' : 4 , 'v\u00e9lo' : 2 , 'tricycle' : 3 } M\u00e9thodes principales d'un dictionnaire \u2693\ufe0e 1 2 3 4 5 6 7 - dico.get (k) : permet d'acc\u00e9der \u00e0 la valeur dont la cl\u00e9 est k dans le dictionnaire dico - dico.items() : liste les items du dictionnaire - dico.values() : liste les valeurs du dictionnaire - dico.pop(k) : supprime l'item dont la cl\u00e9 est k du dictionnaire dico mais r\u00e9cup\u00e8re la valeur supprim\u00e9e contrairement \u00e0 del - dico.keys() : liste les cl\u00e9s du dictionnaire NB : les m\u00e9thodes keys, items, et values renvoient un objet que l'on peut transformer en liste par : list(nombre_de_roues.values()) Parcourir un dictionnaire : Pour parcourir un dictionnaire et r\u00e9cup\u00e9rer la cl\u00e9 et la valeur, on utilise : 1 2 for cle , valeur in Nombre_de_pneus . items (): print ( cle , 'poss\u00e8de ' , valeur , ' roues.' ) 1 2 3 4 >>> voiture poss\u00e8de 4 roues. v\u00e9lo poss\u00e8de 2 roues. tricycle poss\u00e8de 3 roues. Pour ne r\u00e9cup\u00e9rer que la cl\u00e9 : 1 2 for cle in Nombre_de_pneus . keys (): print ( cle ) 1 2 3 4 >>> voiture v\u00e9lo tricycle ou que la veleur: 1 2 for valeur in Nombre_de_pneus . values (): print ( valeur ) 1 2 3 4 >>> 4 2 3 Les tuples (ou n-uplets) \u2693\ufe0e Un tuple est un ensemble de plusieurs \u00e9l\u00e9ments (comme une liste). La diff\u00e9rence est qu'une fois qu'il a \u00e9t\u00e9 construit, il n'est plus modifiable. On ne peut pas modifier les valeurs, ni en ajouter, ni en enlever. Affectation et r\u00e9cup\u00e9ration des valeurs \u2693\ufe0e a=(3,4) est un tuple contenant 3 et 4. u,v=a permet de r\u00e9cup\u00e9rer 3 dans la variable u et 4 dans la variable v. (b,c)=(5,6) permet de r\u00e9cup\u00e9rer 5 dans la variable b et 6 dans la variable c. Les m\u00e9thodes de listes s'appliquent au tuples, sauf si elles en modifie le contenu.","title":"Types construits"},{"location":"Programmation/type.html#types-construits","text":"","title":"Types construits"},{"location":"Programmation/type.html#chaines-de-caracteres-listes-dictionnaires-et-tuples","text":"","title":"(chaines de caract\u00e8res, listes, dictionnaires et tuples)"},{"location":"Programmation/type.html#les-listes","text":"En python (pas avec les autres langages) une liste est un ensemble d\u2019\u00e9l\u00e9ments du m\u00eame type OU NON.","title":"Les listes"},{"location":"Programmation/type.html#indexation-posistion-dans-la-liste","text":"L'index d'un \u00e9l\u00e9ment, correspond \u00e0 sa position. On compte \u00e0 partir de 0. 1 2 3 4 >>> print ( L2 [ 2 ]) #affiche l'\u00e9l\u00e9ment d'index 2 de la liste L2 4.5 >>> print ( L2 [ - 2 ]) #2e element en partant de la fin 4.5","title":"Indexation (posistion dans la liste)"},{"location":"Programmation/type.html#longueur-dune-liste-nombre-dobjets-quelle-contient","text":"len() Longueur d\u2019une liste : renvoie le nombre d\u2019\u00e9l\u00e9ments 1 2 print ( len ( L2 )) >>> 4 Remarque Le denier index de la liste correspond donc \u00e0 la longueur -1.","title":"Longueur d'une liste (nombre d'objets qu'elle contient)"},{"location":"Programmation/type.html#decouper-une-liste","text":"On peut avoir besoin d'utiliser seulement une partie de la liste. Seulement de d\u00e9but, ou seulement la fin par exemple. On peut alors utiliser les slices pour ne prendre que certains \u00e9l\u00e9ments. L[a:b] correspond \u00e0 la partie de la liste dont les index sont commpris entre a et b-1 (attention b est exclu). Si a n'est pas rensign\u00e9, on commence au d\u00e9but, si b n'est pas renseign\u00e9, on va jusqu'\u00e0 la fin. !!! example 'exemples' 1 2 3 4 5 6 7 8 9 L = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] print ( L [ 2 : 6 ]) >>> [ 2 , 3 , 4 , 5 ] print ( L [: 6 ]) >>> [ 0 , 1 , 2 , 3 , 4 , 5 ] print ( L [ 5 :]) >>> [ 5 , 6 , 7 , 8 ] print ( L [ 1 : 2 : 7 ]) # index de 1 \u00e0 6 avec un pas de 2 >>> [ 1 , 3 , 5 ] Remarque L'utilisation du code L2=L[:] permet de faire une copie de la liste. Ce code n'est pas \u00e9quivalent \u00e0 L2=L qui se contente de faire pointer L2 vers L . Donc dans le dernier cas si on modifie L cela modifie \u00e9galement L2 alors qu'avec l'astuce du slice, on fait une copie dont la modification est ind\u00e9pendante.","title":"D\u00e9couper une liste"},{"location":"Programmation/type.html#creer-une-liste","text":"Une liste peut etre cr\u00e9er directement si l'on sait ce qu'elle doit contenir : 1 L = [ 1 , 'bon' , 'chocolat' , True , 24 , 6.7 ] On peut cr\u00e9er une boucle pour remplir une liste. il faut d'abord cr\u00e9er une liste de valeurs identiques par exemple de la taille que l'on souhaite, puis la parcourir pour remplacer les \u00e9l\u00e9ments. 1 >>> [ 0 , 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 ] Si on souhaite ajouter des \u00e9l\u00e9ments un par un, on peut utiliser la m\u00e9thode L.append(element) qui va ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste. 1 2 3 L = [ 1 , 'bon' , 'chocolat' , True , 24 , 6.7 ] L . append ( 345 ) print ( L ) 1 >>> L =[ 1 , 'bon' , 'chocolat' , True, 24 , 6 .7, 345 ] Plus difficile : Liste par commpr\u00e9hension On peut cr\u00e9er une liste de mani\u00e8re succinte en une seule ligne, qui correspond en fait \u00e0 la construction par boucle. [element boucle condition] 1 2 3 4 >>> [ i * 0.5 for i in range ( 1 , 10 )] #i va de 1 \u00e0 9 et les \u00e9l\u00e9ments de la liste sont la moiti\u00e9 de i [ 0.5 , 1 , 1.5 , 2 , 2.5 , 3 , 3.5 , 4 , 4.5 ] [ i * 0.5 for i in range ( 1 , 10 ) if i % 2 == 0 ] # m\u00eame chose sauf que i%2 doit \u00eatre \u00e9gal \u00e0 0 (c'est-\u00e0-dire que i doit etre pair) [ 1 , 2 , 3 , 4 ] Liste non exhaustive des m\u00e9thodes de listes liste.append(truc) : ajoute l\u2019\u00e9l\u00e9ment unique truc \u00e0 la fin de la liste liste1.extend(liste2) : rajoute en fin de liste1 la liste2. Equivaut \u00e0 faire liste1 = liste1 + liste2 min(liste) : retourne la valeur minimum d\u2019une liste max(liste) : retourne la valeur maximum d'une liste liste.sort() : trie une liste dans l\u2019ordre croissant (cf. doc pour l\u2019ordre d\u00e9croissant et les options) liste.remove(valeur) : supprime la premi\u00e8re occurrence de valeur dans la liste liste.insert(index, valeur) : ins\u00e8re valeur \u00e0 l\u2019indice index liste.reverse() : inverse les \u00e9l\u00e9ments de la liste a=liste.count(valeur) : la viaiable a prend pour valeur le nombre d\u2019occurrences de valeur dans la liste b=liste.index(valeur) : la variable b prend pour valeur l\u2019index de la premi\u00e8re occurrence de valeur dans la liste in() : permet de savoir si un \u00e9l\u00e9ment est dans une liste >>>2 in(L) renvoie True ou False","title":"Cr\u00e9er une liste"},{"location":"Programmation/type.html#les-tableaux-listes-de-listes","text":"Un tableau est une liste de liste. Chaque \u00e9l\u00e9ment de la liste est un ligne du tableau. 1 tab3x3 = [[ 1 , 2 , 3 ],[ 4 , 5 , 6 ],[ 7 , 8 , 9 ]] tab3x3[1] est la 2e ligne du tableau tab3x3[1][0] est le 1er \u00e9l\u00e9ment de la 2e ligne 1 2 3 4 print ( tab3x3 [ 1 ]) >>> [ 4 , 5 , 6 ] print ( tab3x3 [ 1 ][ 0 ]) >>> 4 Remarque Toutes les m\u00e9thodes de listes sont applicables aux tableaux puisque ce sont des listes. Cr\u00e9ation d'un tableau de N lignes et M colonnes On commence par cr\u00e9er un tableau vide dans lequel on ajoute N lignes vides. Puis on ajoute autant de fois qu'il y a de colonnes ce que l'on veut dans chaque ligne du tableau. 1 2 3 4 5 6 7 tab = [] #Cr\u00e9er le cadre du tableau for i in range ( N ) : #on r\u00e9p\u00e8te autant de fois qu\u2019on veut de lignes Tab . append ([]) # cr\u00e9ation d\u2019un ligne vide for i in range ( N ) : for j in range ( M ) : #on r\u00e9p\u00e8te autant de fois qu\u2019il y a de colonnes Tabl [ i ] . append ( UnTruc ) #on ajoute un truc \u00e0 la i\u00e8me ligne Parcourir un tableau dont on ne connait pas les dimensions 1 2 3 for i in range ( len ( tab )) : for j in range ( len ( tab [ i ])) : #on r\u00e9p\u00e8te autant de fois qu\u2019il y a de colonnes tab [ i ][ j ] += 1 tab[i][j] est l'\u00e9l\u00e9ment de tableau de la ligne d'indice i et de la colonne d'index j.","title":"Les tableaux : listes de listes"},{"location":"Programmation/type.html#les-chaines-de-caracteres","text":"Un texte est un ensemble de caract\u00e8res (lettres). Tout ce qui concerne les listes s'applique aux cha\u00eenes de caract\u00e8res (sauf certaines des m\u00e9thodes cit\u00e9s). Cetaines m\u00e9thodes sont sp\u00e9cifiques aux cha\u00eenes de caract\u00e8res : chaine.split() qui permet de d\u00e9couper une ch\u00e2ine de caract\u00e8res. On choisit le s\u00e9parateur, par d\u00e9faut c\u2019est l\u2019espace : on obtient alors tous les mots de la ch\u00e2ine. On verra dans le chapitre sur les donn\u00e9es qu\u2019un autre s\u00e9parateur peut \u00eatre utile (souvent la virgule pour les fichier .csv). On pr\u00e9cise le s\u00e9parateur entre les parenth\u00e8ses. \u201cs\u00e9parateur\u201d.join(liste) fait l\u2019inverse du split. Il cr\u00e9e une cha\u00eene \u00e0 partir d\u2019une liste de cha\u00eenes. On peut l\u00e0 aussi pr\u00e9ciser le s\u00e9parateur. chaine.find(sousChaine) cherche la position d\u2019une sous-cha\u00eene \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene. chaine.index(caract\u00e8re) cherche la position d\u2019un caract\u00e8re \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene. chaine.count(sousChaine) compte le nombre d\u2019occurences d\u2019une sous-cha\u00eene \u00e0 l\u2019int\u00e9rieur d\u2019une cha\u00eene Chaine1+chaine2 : lie les chaines de caract\u00e8res sans s\u00e9parateur Et bien d'autres mais il est inutile ici de les r\u00e9pertorier toutes.","title":"Les cha\u00eenes de caract\u00e8res"},{"location":"Programmation/type.html#les-dictionnaires","text":"Un dictionnaire en Python va aussi permettre de rassembler des \u00e9l\u00e9ments mais ceux-ci seront identifi\u00e9s par une cl\u00e9. On peut faire l\u2019analogie avec un dictionnaire de fran\u00e7ais o\u00f9 on acc\u00e8de \u00e0 une d\u00e9finition avec un mot. Contrairement aux listes qui sont d\u00e9limit\u00e9es par des crochets, on utilise des accolades pour les dictionnaires. Par exemple : Nombre_de_pneus : nom du dictionnaire \"voiture\" et \"v\u00e9lo\" sont des cl\u00e9s (keys) et 4 et 2 les valeurs (values) correspondantes. A chaque cl\u00e9 correspond une valeur . Un couple cl\u00e9 : valeur est appel\u00e9 item . 1 2 3 4 5 6 Nombre_de_pneus = {} # cr\u00e9ation du dictionnaire vide Nombre_de_pneus [ \"voiture\" ] = 4 Nombre_de_pneus [ \"v\u00e9lo\" ] = 2 Nombre_de_pneus [ \"tricycle\" ] = 3 print ( Nombre_de_pneus ) >>> { 'voiture' : 4 , 'v\u00e9lo' : 2 , 'tricycle' : 3 }","title":"Les dictionnaires"},{"location":"Programmation/type.html#les-tuples-ou-n-uplets","text":"Un tuple est un ensemble de plusieurs \u00e9l\u00e9ments (comme une liste). La diff\u00e9rence est qu'une fois qu'il a \u00e9t\u00e9 construit, il n'est plus modifiable. On ne peut pas modifier les valeurs, ni en ajouter, ni en enlever.","title":"Les tuples (ou n-uplets)"},{"location":"Programmation/type.html#affectation-et-recuperation-des-valeurs","text":"a=(3,4) est un tuple contenant 3 et 4. u,v=a permet de r\u00e9cup\u00e9rer 3 dans la variable u et 4 dans la variable v. (b,c)=(5,6) permet de r\u00e9cup\u00e9rer 5 dans la variable b et 6 dans la variable c. Les m\u00e9thodes de listes s'appliquent au tuples, sauf si elles en modifie le contenu.","title":"Affectation et r\u00e9cup\u00e9ration des valeurs"},{"location":"algorithmie/complexite.html","text":"Co\u00fbt temporel d'un programme \u2693\ufe0e Qu'est ce que la compl\u00e9xit\u00e9? \u2693\ufe0e Le probl\u00e8me de la complexit\u00e9 temporelle (le temps mis par le programme) est fondamental en informatique. Sur un petit exercice contenant seulement 20 valeurs, les ranger dans l'ordre croissant sera tr\u00e8s rapide quel que soit la m\u00e9thode. Mais s'il faut r\u00e9p\u00e9ter cela des milliers de fois ou que la taille de la liste est de 50000 valeurs, la qualit\u00e9 de l'algorithme est tr\u00e8s importante. Entre l'algorithme le plus performant et le moins performant nous aurons un \u00e9cart de 15 fois meilleur (dans le pire des cas) pour 20 valeurs et de 10640 fois pour 50000 valeurs! Pour \u00e9valuer la complexit\u00e9 d'un algorithme on calcule le nombre d'\u00e9tapes (comparaisons, calculs, affectations) n\u00e9cessaires pour n donn\u00e9es. Parcours d'un tableau Lorsqu'on parcourt un tableau pour lire toutes les valeurs, combien d'actions fait-on si on a 20 \u00e9l\u00e9ments dans le tableau ? 1 2 3 4 tab \u2190 tableau de 20 valeurs Pour i allant de 0 \u00e0 19 : afficher tab[i] fin pour Pour chaque case, on affiche la valeur, on r\u00e9alise donc une action par case du tableau. Donc ici 20 \u00e9tapes. et pour n cases? Si on ne fait qu'une instruction par case, on aura autant d'actions que de cases soit n \u00e9tapes. Et si on en fait plus? \u2693\ufe0e Pour chaque valeur du tableau, on additionne la valeur courante avec la suivante. 1 2 3 4 5 6 tab \u2190 tableau de 20 valeurs pour i allant de 0 \u00e0 18 : lire tab[i] lire tab[i+1] afficher (tab[i]+tab[i+1]) fin pour A chaque case (sauf pour la derni\u00e8re) on effectue ici 3 \u00e9tapes. Pour 20 valeurs on aura 3x(20-1) = 57 \u00e9tapes Pour n valeurs : 3x(n-1) On dit que l'algorithme est d'ordre n (O(n)) (on ne s'occupe pas des constantes). Une telle complexit\u00e9 est dite lin\u00e9aire. Si le calcul d'une complexit\u00e9 nous am\u00e8ne \u00e0 un ordre de 4n\u00b2+3n+1 on dira que la complexit\u00e9 est un O(n\u00b2) . Une complexit\u00e9 d'ordre O(n\u00b2) est une complexit\u00e9 quadratique. Une complexit\u00e9 de l'ordre O(nlog(n)) est dite quasi-lin\u00e9aire. On peut s'int\u00e9resser \u00e0 la complexit\u00e9 d'un algorithme dans: le meilleur des cas, le cas moyen et le pire des cas. Pour comparer des algorithme entre eux, on comparera en g\u00e9n\u00e9rale leur complexit\u00e9 dans le pire des cas. Qu'est ce qu'une instruction \u00e9l\u00e9mentaire qui doit compter comme une \u00e9tape? Une addition une soustraction Une multiplication, une division, Mod (%), Div Une op\u00e9ration arithm\u00e9tique simple (sans appel de fonctions) Une comparaison, les op\u00e9rations bool\u00e9ennes (et,ou,non) une affectation Des op\u00e9rations de lectures et d'\u00e9critures simples. A noter que l'incr\u00e9mentation pour passer d'un \u00e9l\u00e9ment \u00e0 l'autre dans une boucle n'est pas consid\u00e9r\u00e9e comme une \u00e9tape Calcul de la moyenne d'un tableau Voici un algorithme. Quel est le type de complexit\u00e9 pour l'ex\u00e9cuter? 1 2 3 4 \u27a6 initialiser total \u00e0 0 \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 additionner l'\u00e9l\u00e9ment \u00e0 total \u27a6 diviser le total par le nombre d'\u00e9l\u00e9ments lin\u00e9aire quasi-lin\u00e9aire quadratique Une seule \u00e9tape par \u00e9l\u00e9ment de la liste soit n puis la division finale : n+1 = O(n) Recherche de maximum Quelle est la complexit\u00e9 de cet algorithme ? La r\u00e9ponse attendue est un seul mot 1 2 3 4 5 \u27a6 initialiser maximum \u00e0 l'\u00e9l\u00e9ment 0 de la liste \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u00e0 partir du 2nd \u27a6 si l'\u00e9l\u00e9ment est plus grand que maximum \u27a6 mettre maximum \u00e0 la valeur de \u00e9l\u00e9ment \u27a6 afficher maximum 1+(n-1)*2+1 = 2n-2+1=2n-1=>O(n) complexit\u00e9 lin\u00e9aire affectation de la variable maximum et l'affichage du max correspondent aux deux 1 que l'on trouve dans le calcul. Comparer deux algorithmes de recherhce d'un \u00e9l\u00e9ment dans un tableau On cherche \u00e0 comparer les deux algorithmes : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## Algorithme 1 \u27a6 Soit T la valeur \u00e0 trouver \u27a6 initialiser trouve \u00e0 Faux \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 si l'\u00e9l\u00e9ment = T \u27a6trouve = Vrai \u27a6 afficher trouve ## Algorithme 2 \u27a6 soit T la valeur \u00e0 trouver \u27a6 soit L la longueur de la liste \u27a6 initialiser trouve \u00e0 Faux \u27a6 initialiser i \u00e0 0 \u27a6 tant que i < L et \u00e9l\u00e9ment i de liste pas \u00e9gal \u00e0 T \u27a6 incr\u00e9menter i \u27a6 si i < L alors \u27a6 trouve=True \u27a6 affiche trouve Pour une liste de 20 \u00e9l\u00e9ments : Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position . L'algorithme 1 dans le meilleur des cas fait op\u00e9rations. Le deuxi\u00e8me fait op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations op\u00e9rations . Le deuxi\u00e8me fait op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est et celle du 2 est . Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position 0 (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position 19. L'algorithme 1 dans le meilleur des cas fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 10 op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 67 op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est lin\u00e9aire et celle du 2 est lin\u00e9aire. Module time \u2693\ufe0e Le module time permet de g\u00e9rer le temps. Tout part du nombre de seconde (microsecondes m\u00eame) qui se sont \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 minuit. Cette date est appel\u00e9e Epoch Time. Affichage de l'heure locale Renvoie un objet contenant : tm_year : l'ann\u00e9e sous la forme d'un entier ; tm_mon : le num\u00e9ro du mois (entre 1 et 12) ; tm_mday : le num\u00e9ro du jour du mois (entre 1 et 31, variant d'un mois et d'une ann\u00e9e \u00e0 l'autre) ; tm_hour : l'heure du jour (entre 0 et 23) ; tm_min : le nombre de minutes (entre 0 et 59) ; tm_sec : le nombre de secondes (entre 0 et 61, m\u00eame si on n'utilisera ici que les valeurs de 0 \u00e0 59, c'est bien suffisant) ; tm_wday : un entier repr\u00e9sentant le jour de la semaine (entre 0 et 6, 0 correspond par d\u00e9faut au lundi) ; tm_yday : le jour de l'ann\u00e9e, entre 1 et 366 ; tm_isdst : un entier repr\u00e9sentant le changement d'heure locale. Module Matplotlib \u2693\ufe0e D\u00e9j\u00e0 probablement utilis\u00e9 en sciences physiques, le module matplotlib permet de tracer des graphiques. L'id\u00e9e ici est de comparer les complexit\u00e9s selon la taille du tableau. Voici comment tracer un graphique avec deux s\u00e9ries de valeurs (abscisses et ordonn\u00e9es) : 1 2 3 4 5 6 7 8 9 10 11 12 #importation du module import matplotlib.pyplot as plt #liste des valeurs d'abscisses x = [ 0 , 1 , - 1 , 0 ] #liste des valeurs d'ordonn\u00e9es y = [ 0 , 1 , 1 , 0 ] #trac\u00e9 du graphique plt . plot ( x , y ) #affichage du graphique plt . show () plt . close () Pour tracer plusieurs graphiques sur la m\u00eame fen\u00eatre : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import matplotlib.pyplot as plt x = [ 0 , 1 , 0 ] y = [ 0 , 1 , 2 ] x1 = [ 0 , 2 , 0 ] y1 = [ 2 , 1 , 0 ] x2 = [ 0 , 1 , 2 ] y2 = [ 0 , 1 , 2 ] plt . plot ( x , y ) plt . plot ( x1 , y1 ) plt . plot ( x2 , y2 ) plt . show () plt . close () Voici quelques propri\u00e9t\u00e9s des fen\u00eatres graphiques (mais il y en a plein d'autres) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt x = [ 0.25 , 0.25 , 1.25 , 0.5 , 1 , 0.25 , 0.6 , 0 , - 0.6 , - 0.25 , - 1 , - 0.5 , - 1.25 , - 0.25 , - 0.25 , 0.25 ] y = [ 0 , 0.5 , 0.5 , 1 , 1 , 1.5 , 1.5 , 2 , 1.5 , 1.5 , 1 , 1 , 0.5 , 0.5 , 0 , 0 ] #les prorpi\u00e9t\u00e9s permettent ici de d\u00e9finir la couleur le style de trait plt . plot ( x , y , '-.' , color = \"green\" ) #titre plt . title ( \"Mon beau sapin\" ) plt . axis ( 'equal' ) # titre des axes plt . xlabel ( \"C'est Noel\" ) plt . ylabel ( \"Vive le vent\" ) plt . show () plt . close () Exercices \u2693\ufe0e Exercice 1 \u2693\ufe0e \u00c9crire le programme qui calcule le maximum et le minimum d'un tableau en utilisant l'algorithme propos\u00e9 dans l'activit\u00e9 (recherche de maximum) Exercice 2 \u2693\ufe0e \u00c9crire les programmes de recherche de valeur avec les deux algorithmes. Faire afficher le nombre d'\u00e9tapes ex\u00e9cut\u00e9es et comparer \u00e0 la complexit\u00e9 dans le pire des cas. A-t-on autant d'\u00e9tapes que celles \u00e9valu\u00e9es sur la complexit\u00e9 ? Comparer les compl\u00e9xit\u00e9s Apr\u00e8s avoir cod\u00e9 la recherche de valeurs avec les deux algorithmes de recherche de valeur (exercice 2), r\u00e9cup\u00e9rer le nombre d'\u00e9tapes en fonction de la taille de la liste et tracer les deux graphiques dans la m\u00eame fen\u00eatre. Exercice 3 \u2693\ufe0e Codez une fonction qui cherche le maximum d'une liste en ne tenant pas compte des valeurs sup\u00e9rieures ou \u00e9gales \u00e0 10. Faire compter les \u00e9tapes au programme et comparer avec les camarades. Exercice 4 \u2693\ufe0e Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche le point le plus bas! R\u00e9alisez ce codage en recherchant la complexit\u00e9 minimum Exercice 5 \u2693\ufe0e Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche si un point de la liste a une abscisse donn\u00e9e, ou une ordonn\u00e9e donn\u00e9es ou une profondeur donn\u00e9e. function reactionText1(){ var msg; var reponse=document.getElementById(\"reponse1\"); if (reponse.value ==='20'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText1(){ document.getElementById(\"correctionText1\").style=\"display:block;\"; } function reactionText2(){ var msg; var reponse=document.getElementById(\"reponse2\"); if (reponse.value ==='n'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText2\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText2(){ document.getElementById(\"correctionText2\").style=\"display:block;\"; } function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test1\"); var rep=reponse.elements[\"test\"].value; console.log(rep); if (rep==\"A\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"';} document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU(){ document.getElementById(\"correctionQCU\").style=\"display:block;\"; } function reactionText3(){ var msg; var reponse=document.getElementById(\"reponse3\"); if (reponse.value =='lin\u00e9aire' || reponse.value =='lineaire' || reponse.value =='Lin\u00e9aire' || reponse.value =='Lineaire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText3\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText3(){ document.getElementById(\"correctionText3\").style=\"display:block;\"; } function reactionText4(){ var msg; console.log('fonction executee'); var reponse4=document.getElementById(\"reponse4\"); var reponse5=document.getElementById(\"reponse5\"); var reponse6=document.getElementById(\"reponse6\"); var reponse7=document.getElementById(\"reponse7\"); var reponse8=document.getElementById(\"reponse8\"); var reponse9=document.getElementById(\"reponse9\"); var reponse10=document.getElementById(\"reponse10\"); var reponse11=document.getElementById(\"reponse11\"); if (reponse4.value ==='0' && reponse5.value ==='19' && reponse6.value ==='43' && reponse7.value ==='10' && reponse8.value ==='43' && reponse9.value ==='67' && reponse10.value ==='lin\u00e9aire' && reponse11.value ==='lin\u00e9aire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\";}","title":"Compl\u00e9xit\u00e9"},{"location":"algorithmie/complexite.html#cout-temporel-dun-programme","text":"","title":"Co\u00fbt temporel d'un programme"},{"location":"algorithmie/complexite.html#quest-ce-que-la-complexite","text":"Le probl\u00e8me de la complexit\u00e9 temporelle (le temps mis par le programme) est fondamental en informatique. Sur un petit exercice contenant seulement 20 valeurs, les ranger dans l'ordre croissant sera tr\u00e8s rapide quel que soit la m\u00e9thode. Mais s'il faut r\u00e9p\u00e9ter cela des milliers de fois ou que la taille de la liste est de 50000 valeurs, la qualit\u00e9 de l'algorithme est tr\u00e8s importante. Entre l'algorithme le plus performant et le moins performant nous aurons un \u00e9cart de 15 fois meilleur (dans le pire des cas) pour 20 valeurs et de 10640 fois pour 50000 valeurs! Pour \u00e9valuer la complexit\u00e9 d'un algorithme on calcule le nombre d'\u00e9tapes (comparaisons, calculs, affectations) n\u00e9cessaires pour n donn\u00e9es. Parcours d'un tableau Lorsqu'on parcourt un tableau pour lire toutes les valeurs, combien d'actions fait-on si on a 20 \u00e9l\u00e9ments dans le tableau ? 1 2 3 4 tab \u2190 tableau de 20 valeurs Pour i allant de 0 \u00e0 19 : afficher tab[i] fin pour Pour chaque case, on affiche la valeur, on r\u00e9alise donc une action par case du tableau. Donc ici 20 \u00e9tapes. et pour n cases? Si on ne fait qu'une instruction par case, on aura autant d'actions que de cases soit n \u00e9tapes.","title":"Qu'est ce que la compl\u00e9xit\u00e9?"},{"location":"algorithmie/complexite.html#et-si-on-en-fait-plus","text":"Pour chaque valeur du tableau, on additionne la valeur courante avec la suivante. 1 2 3 4 5 6 tab \u2190 tableau de 20 valeurs pour i allant de 0 \u00e0 18 : lire tab[i] lire tab[i+1] afficher (tab[i]+tab[i+1]) fin pour A chaque case (sauf pour la derni\u00e8re) on effectue ici 3 \u00e9tapes. Pour 20 valeurs on aura 3x(20-1) = 57 \u00e9tapes Pour n valeurs : 3x(n-1) On dit que l'algorithme est d'ordre n (O(n)) (on ne s'occupe pas des constantes). Une telle complexit\u00e9 est dite lin\u00e9aire. Si le calcul d'une complexit\u00e9 nous am\u00e8ne \u00e0 un ordre de 4n\u00b2+3n+1 on dira que la complexit\u00e9 est un O(n\u00b2) . Une complexit\u00e9 d'ordre O(n\u00b2) est une complexit\u00e9 quadratique. Une complexit\u00e9 de l'ordre O(nlog(n)) est dite quasi-lin\u00e9aire. On peut s'int\u00e9resser \u00e0 la complexit\u00e9 d'un algorithme dans: le meilleur des cas, le cas moyen et le pire des cas. Pour comparer des algorithme entre eux, on comparera en g\u00e9n\u00e9rale leur complexit\u00e9 dans le pire des cas. Qu'est ce qu'une instruction \u00e9l\u00e9mentaire qui doit compter comme une \u00e9tape? Une addition une soustraction Une multiplication, une division, Mod (%), Div Une op\u00e9ration arithm\u00e9tique simple (sans appel de fonctions) Une comparaison, les op\u00e9rations bool\u00e9ennes (et,ou,non) une affectation Des op\u00e9rations de lectures et d'\u00e9critures simples. A noter que l'incr\u00e9mentation pour passer d'un \u00e9l\u00e9ment \u00e0 l'autre dans une boucle n'est pas consid\u00e9r\u00e9e comme une \u00e9tape Calcul de la moyenne d'un tableau Voici un algorithme. Quel est le type de complexit\u00e9 pour l'ex\u00e9cuter? 1 2 3 4 \u27a6 initialiser total \u00e0 0 \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 additionner l'\u00e9l\u00e9ment \u00e0 total \u27a6 diviser le total par le nombre d'\u00e9l\u00e9ments lin\u00e9aire quasi-lin\u00e9aire quadratique Une seule \u00e9tape par \u00e9l\u00e9ment de la liste soit n puis la division finale : n+1 = O(n) Recherche de maximum Quelle est la complexit\u00e9 de cet algorithme ? La r\u00e9ponse attendue est un seul mot 1 2 3 4 5 \u27a6 initialiser maximum \u00e0 l'\u00e9l\u00e9ment 0 de la liste \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u00e0 partir du 2nd \u27a6 si l'\u00e9l\u00e9ment est plus grand que maximum \u27a6 mettre maximum \u00e0 la valeur de \u00e9l\u00e9ment \u27a6 afficher maximum 1+(n-1)*2+1 = 2n-2+1=2n-1=>O(n) complexit\u00e9 lin\u00e9aire affectation de la variable maximum et l'affichage du max correspondent aux deux 1 que l'on trouve dans le calcul. Comparer deux algorithmes de recherhce d'un \u00e9l\u00e9ment dans un tableau On cherche \u00e0 comparer les deux algorithmes : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## Algorithme 1 \u27a6 Soit T la valeur \u00e0 trouver \u27a6 initialiser trouve \u00e0 Faux \u27a6 pour tous les \u00e9l\u00e9ments de la Liste \u27a6 si l'\u00e9l\u00e9ment = T \u27a6trouve = Vrai \u27a6 afficher trouve ## Algorithme 2 \u27a6 soit T la valeur \u00e0 trouver \u27a6 soit L la longueur de la liste \u27a6 initialiser trouve \u00e0 Faux \u27a6 initialiser i \u00e0 0 \u27a6 tant que i < L et \u00e9l\u00e9ment i de liste pas \u00e9gal \u00e0 T \u27a6 incr\u00e9menter i \u27a6 si i < L alors \u27a6 trouve=True \u27a6 affiche trouve Pour une liste de 20 \u00e9l\u00e9ments : Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position . L'algorithme 1 dans le meilleur des cas fait op\u00e9rations. Le deuxi\u00e8me fait op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations op\u00e9rations . Le deuxi\u00e8me fait op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est et celle du 2 est . Le meilleur des cas est le cas ou la valeur recherch\u00e9e est \u00e0 la position 0 (on attend l'index de la liste en python). Le pire des cas est celui o\u00f9 la valeur recherch\u00e9e est \u00e0 la position 19. L'algorithme 1 dans le meilleur des cas fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 10 op\u00e9rations. Dans le pire des cas, l'algorithme 1 fait op\u00e9rations 43 op\u00e9rations. Le deuxi\u00e8me fait 67 op\u00e9rations. La complexit\u00e9 de l'algorithme 1 est lin\u00e9aire et celle du 2 est lin\u00e9aire.","title":"Et si on en fait plus?"},{"location":"algorithmie/complexite.html#module-time","text":"Le module time permet de g\u00e9rer le temps. Tout part du nombre de seconde (microsecondes m\u00eame) qui se sont \u00e9coul\u00e9es depuis le 1er janvier 1970 \u00e0 minuit. Cette date est appel\u00e9e Epoch Time. Affichage de l'heure locale Renvoie un objet contenant : tm_year : l'ann\u00e9e sous la forme d'un entier ; tm_mon : le num\u00e9ro du mois (entre 1 et 12) ; tm_mday : le num\u00e9ro du jour du mois (entre 1 et 31, variant d'un mois et d'une ann\u00e9e \u00e0 l'autre) ; tm_hour : l'heure du jour (entre 0 et 23) ; tm_min : le nombre de minutes (entre 0 et 59) ; tm_sec : le nombre de secondes (entre 0 et 61, m\u00eame si on n'utilisera ici que les valeurs de 0 \u00e0 59, c'est bien suffisant) ; tm_wday : un entier repr\u00e9sentant le jour de la semaine (entre 0 et 6, 0 correspond par d\u00e9faut au lundi) ; tm_yday : le jour de l'ann\u00e9e, entre 1 et 366 ; tm_isdst : un entier repr\u00e9sentant le changement d'heure locale.","title":"Module time"},{"location":"algorithmie/complexite.html#module-matplotlib","text":"D\u00e9j\u00e0 probablement utilis\u00e9 en sciences physiques, le module matplotlib permet de tracer des graphiques. L'id\u00e9e ici est de comparer les complexit\u00e9s selon la taille du tableau. Voici comment tracer un graphique avec deux s\u00e9ries de valeurs (abscisses et ordonn\u00e9es) : 1 2 3 4 5 6 7 8 9 10 11 12 #importation du module import matplotlib.pyplot as plt #liste des valeurs d'abscisses x = [ 0 , 1 , - 1 , 0 ] #liste des valeurs d'ordonn\u00e9es y = [ 0 , 1 , 1 , 0 ] #trac\u00e9 du graphique plt . plot ( x , y ) #affichage du graphique plt . show () plt . close () Pour tracer plusieurs graphiques sur la m\u00eame fen\u00eatre : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import matplotlib.pyplot as plt x = [ 0 , 1 , 0 ] y = [ 0 , 1 , 2 ] x1 = [ 0 , 2 , 0 ] y1 = [ 2 , 1 , 0 ] x2 = [ 0 , 1 , 2 ] y2 = [ 0 , 1 , 2 ] plt . plot ( x , y ) plt . plot ( x1 , y1 ) plt . plot ( x2 , y2 ) plt . show () plt . close () Voici quelques propri\u00e9t\u00e9s des fen\u00eatres graphiques (mais il y en a plein d'autres) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt x = [ 0.25 , 0.25 , 1.25 , 0.5 , 1 , 0.25 , 0.6 , 0 , - 0.6 , - 0.25 , - 1 , - 0.5 , - 1.25 , - 0.25 , - 0.25 , 0.25 ] y = [ 0 , 0.5 , 0.5 , 1 , 1 , 1.5 , 1.5 , 2 , 1.5 , 1.5 , 1 , 1 , 0.5 , 0.5 , 0 , 0 ] #les prorpi\u00e9t\u00e9s permettent ici de d\u00e9finir la couleur le style de trait plt . plot ( x , y , '-.' , color = \"green\" ) #titre plt . title ( \"Mon beau sapin\" ) plt . axis ( 'equal' ) # titre des axes plt . xlabel ( \"C'est Noel\" ) plt . ylabel ( \"Vive le vent\" ) plt . show () plt . close ()","title":"Module Matplotlib"},{"location":"algorithmie/complexite.html#exercices","text":"","title":"Exercices"},{"location":"algorithmie/complexite.html#exercice-1","text":"\u00c9crire le programme qui calcule le maximum et le minimum d'un tableau en utilisant l'algorithme propos\u00e9 dans l'activit\u00e9 (recherche de maximum)","title":"Exercice 1"},{"location":"algorithmie/complexite.html#exercice-2","text":"\u00c9crire les programmes de recherche de valeur avec les deux algorithmes. Faire afficher le nombre d'\u00e9tapes ex\u00e9cut\u00e9es et comparer \u00e0 la complexit\u00e9 dans le pire des cas. A-t-on autant d'\u00e9tapes que celles \u00e9valu\u00e9es sur la complexit\u00e9 ? Comparer les compl\u00e9xit\u00e9s Apr\u00e8s avoir cod\u00e9 la recherche de valeurs avec les deux algorithmes de recherche de valeur (exercice 2), r\u00e9cup\u00e9rer le nombre d'\u00e9tapes en fonction de la taille de la liste et tracer les deux graphiques dans la m\u00eame fen\u00eatre.","title":"Exercice 2"},{"location":"algorithmie/complexite.html#exercice-3","text":"Codez une fonction qui cherche le maximum d'une liste en ne tenant pas compte des valeurs sup\u00e9rieures ou \u00e9gales \u00e0 10. Faire compter les \u00e9tapes au programme et comparer avec les camarades.","title":"Exercice 3"},{"location":"algorithmie/complexite.html#exercice-4","text":"Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche le point le plus bas! R\u00e9alisez ce codage en recherchant la complexit\u00e9 minimum","title":"Exercice 4"},{"location":"algorithmie/complexite.html#exercice-5","text":"Une liste contient des listes de coordonn\u00e9es dans l'espace (x,y,z). On cherche si un point de la liste a une abscisse donn\u00e9e, ou une ordonn\u00e9e donn\u00e9es ou une profondeur donn\u00e9e. function reactionText1(){ var msg; var reponse=document.getElementById(\"reponse1\"); if (reponse.value ==='20'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText1(){ document.getElementById(\"correctionText1\").style=\"display:block;\"; } function reactionText2(){ var msg; var reponse=document.getElementById(\"reponse2\"); if (reponse.value ==='n'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText2\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText2(){ document.getElementById(\"correctionText2\").style=\"display:block;\"; } function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test1\"); var rep=reponse.elements[\"test\"].value; console.log(rep); if (rep==\"A\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"';} document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU(){ document.getElementById(\"correctionQCU\").style=\"display:block;\"; } function reactionText3(){ var msg; var reponse=document.getElementById(\"reponse3\"); if (reponse.value =='lin\u00e9aire' || reponse.value =='lineaire' || reponse.value =='Lin\u00e9aire' || reponse.value =='Lineaire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"';} document.getElementById(\"messageText3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText3\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText3(){ document.getElementById(\"correctionText3\").style=\"display:block;\"; } function reactionText4(){ var msg; console.log('fonction executee'); var reponse4=document.getElementById(\"reponse4\"); var reponse5=document.getElementById(\"reponse5\"); var reponse6=document.getElementById(\"reponse6\"); var reponse7=document.getElementById(\"reponse7\"); var reponse8=document.getElementById(\"reponse8\"); var reponse9=document.getElementById(\"reponse9\"); var reponse10=document.getElementById(\"reponse10\"); var reponse11=document.getElementById(\"reponse11\"); if (reponse4.value ==='0' && reponse5.value ==='19' && reponse6.value ==='43' && reponse7.value ==='10' && reponse8.value ==='43' && reponse9.value ==='67' && reponse10.value ==='lin\u00e9aire' && reponse11.value ==='lin\u00e9aire'){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\";}","title":"Exercice 5"},{"location":"algorithmie/glouton.html","text":"Les Algorithmes gloutons \u2693\ufe0e Pr\u00e9sentation \u2693\ufe0e En programmation, on cherche \u00e0 optimiser le probl\u00e8me, c'est-\u00e0-dire \u00e0 trouver la meilleure solution. On cherche \u00e0 diminuer le temps de calcul, l'utilisation de la m\u00e9moire, et surtout l'efficacit\u00e9. On souhaite que la solution soit trouv\u00e9e \u00e0 chaque fois (ou au moins le plus souvent possible). Pour r\u00e9soudre un probl\u00e8me d'optimisation nous auront besoin : d'un probl\u00e8me aux multiples solutions d'une fonction permettant d'\u00e9valuer la r\u00e9solution l\u2019existence d'une solution optimale ou assez bonne Un petit exemple Un voyageur souhaite visiter plusieurs villes de France, dans n'importe quel ordre, mais en minimisant la distance parcourue. D\u00e9part et arriv\u00e9e \u00e0 Clermont-Ferrand. Villes \u00e0 visiter : Limoges, Lyon, Paris et Toulouse. Le tableau suivant donne les distances routi\u00e8res kilom\u00e9triques entre plusieurs villes de France : 1. D\u00e9terminer tous les trajets possibles et en d\u00e9duire le trajet optimal. On ne comptera pas deux fois les m\u00eames trajets effectu\u00e9s dans deux sens diff\u00e9rents Pour d\u00e9bloquer la solution entrer le code correspondant au nombre de trajets trouv\u00e9s : 2. Calculer le nombre de trajets possibles si le voyageur d\u00e9cide de visiter toutes les villes du tableau. On donnera que la fa\u00e7on de calculer le nombre de coombinaisons possibles avec n chiffres est nx(n-1)x(n-2)x...x1 = n! (factorrrielle n) compter le nombre de villes Probl\u00e8me de rendu de monnaie \u2693\ufe0e Le but est de programmer une caisse automatique pour qu'elle rende la monnaie de fa\u00e7on optimale, c'est-\u00e0- dire avec le nombre minimal de pi\u00e8ces et de billets. Nous disposons de toutes ces pi\u00e8ces et nous en avons autant que l'on veut ! Vous souhaitez acheter un objet d'une valeur de 53 \u20ac et vous payez avec un billet de 100 \u20ac. La caisse doit vous rendre : 100 - 53 = 47 \u20ac mais de quelle fa\u00e7on ! En effet, Il existe un grand nombre de possibilit\u00e9s pour vous rendre la monnaie : Nous pourrions ainsi lister l'ensemble de ces possibilit\u00e9s de fa\u00e7on \u201cm\u00e9thodique\u201d en utilisant un arbre mais cet algorithme serait tr\u00e8s \u201cco\u00fbteux\u201d en temps de calcul. Imaginons un exemple en partant simplement de la valeur 11 \u20ac Nous allons donc utiliser un algorithme \u201cglouton\u201d pour optimiser ce probl\u00e8me. D\u00e9finition : A chaque \u00e9tape, on effectue le choix qui semble le meilleur, sans jamais remettre en question les choix d\u00e9j\u00e0 effectu\u00e9s. Pour le rendu de monnaie, c'est assez simple, il suffit de prendre \u00e0 chaque \u00e9tape la plus grande valeur de billet ou de pi\u00e8ce. Dans notre syst\u00e8me mon\u00e9taire, cet algorithme est pratiquement toujours la solution la plus optimis\u00e9e mais nous allons verrons plus loin que ce n'est pas toujours le cas. Voici l'algorithme propos\u00e9, il sera \u00e0 impl\u00e9menter plus tard. La fonction renduMonnaie() prendra en argument la somme \u00e0 rendre et la liste des pi\u00e8ces et billets \u00e0 disposition. Cette fonction retournera la liste des pi\u00e8ces et billets \u00e0 rendre 1 2 3 4 5 6 7 8 9 def renduMonnaie(somme, liste): Initialisation d'un tableau monnaie \u00e0 la liste vide. Initialisation de somme_restante \u00e0 somme Tant que la somme_restante est >0 Choisir valeur_choisie dans la liste la plus grande valeur de monnaie qui ne d\u00e9passe pas somme_restante. Ajouter cette valeur_choisie \u00e0 monnaie Somme_restante = Somme_restante - valeur choisie Fin tant que renvoie monnaie Exemple 1 : on dispose de toutes les pi\u00e8ces Exemple 2 : L'algorithme est-il toujours optimis\u00e9 si vous ne disposez plus de toutes les pi\u00e8ces ... A vous de r\u00e9soudre cette situation \u00e0 la main dans un premier temps. somme = 63 liste = [1, 2, 20, 50, 100, 200]... Vous avez bien lu, il ne reste plus de pi\u00e8ces de 5 \u20ac , ni de billets de 10 \u20ac!! Pour d\u00e9bloquer la solution, trouver au moins le nombre de pi\u00e8ces rendues : Impl\u00e9mentation \u2693\ufe0e A faire Programmer le rendu de monnaie et v\u00e9rifier le r\u00e9sultat pour les exemples 1 et 2. Situation Canonique La situation du rendu de monnaie, ici, est canonique c'est \u00e0 dire qu'elle arrive toujours \u00e0 une solution optimale. Ceci est li\u00e9 \u00e0 notre syst\u00e8me de monnaie. Avec un autre syst\u00e8me mon\u00e9taire, on pourrait se retrouver avec des r\u00e9sultats qui ne seraient pas satisfaisants : la somme rendue peut \u00eatre sup\u00e9rieure ou inf\u00e9rieure \u00e0 la somme d\u00fbe. L'ancien syst\u00e8me mon\u00e9taire britannique \u00e9tait compos\u00e9 de pi\u00e8ces de (1,3,6,12,24,30). Modifier le syst\u00e8me de monnaie et v\u00e9rifier que le programme n'est plus optimal. Exercices \u2693\ufe0e Un TP est disponible si le temps le permet. Probl\u00e8me du sac \u00e0 dos \u2693\ufe0e Vous \u00eates chasseur de tr\u00e9sors ! Apr\u00e8s de longues heures d'aventure, des dangers \u00e9vit\u00e9s de justesse, et malgr\u00e9 une arm\u00e9e de pilleurs \u00e0 vos trousses, vous avez trouv\u00e9 un \u00e9norme TR\u00c9SOR ! Vous \u00eates heureux, vous sautez de joie et lancez des pi\u00e8ces en l'air ! Finalement vous retrouvez votre calme et commencez \u00e0 r\u00e9fl\u00e9chir vite (n'oubliez pas l'arm\u00e9e de pillards qui est sur vos traces...). Votre sac \u00e0 dos est assez solide pour n'emporter que 10 kg et le tr\u00e9sor p\u00e8se bien plus... Il va vous falloir choisir les objets \u00e0 emporter. Heureusement vous \u00eates pr\u00e9voyant et vous avez la liste des objets pr\u00e9sents dans le coffre ainsi que leur masse et leur valeur (Comment \u00e7a \u201cce n'est pas tr\u00e8s cr\u00e9dible\u201d ? Vous \u00eates vraiment chasseur de tr\u00e9sor vous ?). Le tr\u00e9sor ne contient qu'un exemplaire de chaque objet. En bon \u201cgeek\u201d que vous \u00eates, vous avez toujours votre IDE Python favorite sur vous. Il va falloir cr\u00e9er un algorithme de remplissage de votre sac \u00e0 dos et fissa si vous ne voulez pas finir ruin\u00e9 voire pire... Il s'agit de choisir les objets \u00e0 emporter dans le sac afin d'obtenir la valeur totale la plus grande tout en respectant la contrainte du poids maximal. C'est un probl\u00e8me d'optimisation avec contrainte. Ce probl\u00e8me peut se r\u00e9soudre par force brute, c'est-\u00e0-dire en testant tous les cas possibles. Mais ce type de r\u00e9solution pr\u00e9sente un probl\u00e8me de complexit\u00e9. Son co\u00fbt en fonction du nombre d'objets disponibles cro\u00eet de mani\u00e8re exponentielle. Vous envisagerez plut\u00f4t une strat\u00e9gie gloutonne (m\u00e9thode heuristique dans la vid\u00e9o suivante). Le principe d'un algorithme glouton est de faire le meilleur choix pour le premier objet, puis le meilleur choix pour le deuxi\u00e8me, et ainsi de suite sans jamais remettre en cause le choix pr\u00e9c\u00e9dent ! Que faut-il entendre par \u201cmeilleur choix\u201d ? - Est-ce prendre l'objet qui a la plus grande valeur ? - Est-ce prendre l'objet qui a la plus petite masse ? - Est-ce prendre l'objet le rapport valeur/poids le plus grand ? - Le choix le plus \u201cspontan\u00e9\u201d serait de prendre les objets qui ont les valeurs les plus \u00e9lev\u00e9es ? - Est ce vraiment le bon ? Bien sur, si vous \u00eates joueur, vous pouvez essayer de tout tester mais nous vous conseillons vivement de regarder cette vid\u00e9o avant de vous lancer dans la programmation : A vous de l'impl\u00e9menter \u2693\ufe0e Vous disposez de plusieurs programme \u201csquelette\u201d qui contient l'ossature de vos diff\u00e9rentes fonctions. Elles sont document\u00e9es (docstring) et test\u00e9es (assert) . Vous disposez \u00e9galement d'une liste des objets pr\u00e9sents pour tester vos diff\u00e9rentes fonctions : La fonction (valeur) permet de trier la liste des objets en fonction de leur valeur. Cette fonction est d\u00e9j\u00e0 compl\u00e9t\u00e9e Sac_v1.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 ## Chasse au tr\u00e9sor : glouton sac a dos ## liste des objets dispo chaque objet est repr\u00e9sent\u00e9 par une liste ## item 0 : nom de l 'objet en str ## item 1 : valeur de l'objet en float ## item 2 : masse de l'objet en int from operator import itemgetter # pour utiliser la fonction sorted en choisissant l'\u00e9l\u00e9ment qui sert au tri objets = [[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]] def valeur ( liste ) : \"\"\" trie les objets de la liste par valeur d\u00e9croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" liste = sorted ( liste , key = itemgetter ( 1 ), reverse = True ) return liste assert ( valeur ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def sacGlouton ( liste , maxSac ) : \"\"\" parametres : liste : la liste des objets \u00e0 choisir c'est une liste de liste maxSac : masse max que peut supporte le sac (int) return : objetsSac : la liste des objets s\u00e9lectionn\u00e9s masseTotale : la masse du sac valeurTotale : la valeur du contenu \"\"\" ## A COMPLETER return objetsSac , masseTotale , valeurTotale assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 ) == ([[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ]], 10 ) Une version plus subtile vous permettra de tester diff\u00e9rentes m\u00e9thodes heuristiques pour optimiser votre choix. (soit par valeur, soit par masse ou rapport valeur/masse) La derni\u00e8re fonction sacGlouton est la partie du programme qui s\u00e9lectionne les tr\u00e9sors \u00e0 emporter. Sac_v2.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # glouton sac a dos ## liste des objets dispo chaque objet est repr\u00e9sent\u00e9 par une liste ## item 0 : nom de l 'objet en str ## item 1 : valeur de l'objet en float ## item 2 : masse de l'objet en float from operator import itemgetter # pour utiliser la fonction sorted en choisissant l'\u00e9l\u00e9ment qui sert au tri objets = [[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]] def valeur ( liste ) : \"\"\" trie les objets de la liste par valeur d\u00e9croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" liste = sorted ( liste , key = itemgetter ( 1 ), reverse = True ) return liste assert ( valeur ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def masse ( liste ) : \"\"\" trie les objets par masse croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" ### A COMPLETER return liste assert ( masse ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'bracelet' , 30 , 2 ], [ 'lingot' , 50 , 3 ], [ 'd\u00e9chets' , 1 , 4 ], [ 'couronne' , 80 , 4 ]] def rapport ( liste ) : \"\"\" trie les objets par leur rapport valeur/masse, en cas d'\u00e9galit\u00e9, on pourra favoriser l'objet le plus l\u00e9ger parametre : liste : la liste des objets \u00e0 trier return : listeTriee : la liste tri\u00e9e \"\"\" ## A COMPLETER return listeTriee assert ( rapport ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'collier' , 20 , 1 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def sacGlouton ( liste , maxSac , choixTri ) : \"\"\" parametres : liste : la liste des objets \u00e0 choisir c'est une liste de liste maxSac : masse max que peut supporte le sac (int) choixTri : si on choisit de faire un tri des objets par masse, valeur ou rapport (str) return : objetsSac : la liste des objets s\u00e9lectionn\u00e9s masseTotale : la masse du sac valeurTotale : la valeur du contenu \"\"\" ## A COMPLETER return objetsSac , masseTotale , valeurTotale assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , rapport )) == ([[ 'couronne' , 80 , 4 ], [ 'collier' , 20 , 1 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ]], 10 , 180 ) assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , masse )) == ([[ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'bracelet' , 30 , 2 ], [ 'lingot' , 50 , 3 ]], 8 , 105 ) assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , valeur )) == ([[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ]], 10 , 180 ) Si vous commencez par la version simple (Sac_v1.py), vous ne perdrez absolument pas votre temps car votre travail va vous permettra d'impl\u00e9menter assez facilement la version adaptative qui permet de faire des comparaisons ( Sac_v2.py ) A vous de les compl\u00e9ter pour emporter les meilleurs pi\u00e8ces du tr\u00e9sor avant l'arriv\u00e9e de vos ennemis ! Vous pr\u00e9senterez vos r\u00e9sultats sous la forme d'une phrase en fran\u00e7ais indiquant la valeur dans le sac \u00e0 dos, sa masse et la liste des objets ! function AccesProtege1() { self.location.href=prompt(\"Mot de passe (nombre de solutions trouv\u00e9es) :\",\"\") + \".html\"; } function AccesProtege2() { self.location.href=prompt(\"Mot de passe (nombre de solutions trouv\u00e9es) :\",\"\") + \".html\"; }","title":"Algorithme glouton"},{"location":"algorithmie/glouton.html#les-algorithmes-gloutons","text":"","title":"Les Algorithmes gloutons"},{"location":"algorithmie/glouton.html#presentation","text":"En programmation, on cherche \u00e0 optimiser le probl\u00e8me, c'est-\u00e0-dire \u00e0 trouver la meilleure solution. On cherche \u00e0 diminuer le temps de calcul, l'utilisation de la m\u00e9moire, et surtout l'efficacit\u00e9. On souhaite que la solution soit trouv\u00e9e \u00e0 chaque fois (ou au moins le plus souvent possible). Pour r\u00e9soudre un probl\u00e8me d'optimisation nous auront besoin : d'un probl\u00e8me aux multiples solutions d'une fonction permettant d'\u00e9valuer la r\u00e9solution l\u2019existence d'une solution optimale ou assez bonne Un petit exemple Un voyageur souhaite visiter plusieurs villes de France, dans n'importe quel ordre, mais en minimisant la distance parcourue. D\u00e9part et arriv\u00e9e \u00e0 Clermont-Ferrand. Villes \u00e0 visiter : Limoges, Lyon, Paris et Toulouse. Le tableau suivant donne les distances routi\u00e8res kilom\u00e9triques entre plusieurs villes de France : 1. D\u00e9terminer tous les trajets possibles et en d\u00e9duire le trajet optimal. On ne comptera pas deux fois les m\u00eames trajets effectu\u00e9s dans deux sens diff\u00e9rents Pour d\u00e9bloquer la solution entrer le code correspondant au nombre de trajets trouv\u00e9s : 2. Calculer le nombre de trajets possibles si le voyageur d\u00e9cide de visiter toutes les villes du tableau. On donnera que la fa\u00e7on de calculer le nombre de coombinaisons possibles avec n chiffres est nx(n-1)x(n-2)x...x1 = n! (factorrrielle n) compter le nombre de villes","title":"Pr\u00e9sentation"},{"location":"algorithmie/glouton.html#probleme-de-rendu-de-monnaie","text":"Le but est de programmer une caisse automatique pour qu'elle rende la monnaie de fa\u00e7on optimale, c'est-\u00e0- dire avec le nombre minimal de pi\u00e8ces et de billets. Nous disposons de toutes ces pi\u00e8ces et nous en avons autant que l'on veut ! Vous souhaitez acheter un objet d'une valeur de 53 \u20ac et vous payez avec un billet de 100 \u20ac. La caisse doit vous rendre : 100 - 53 = 47 \u20ac mais de quelle fa\u00e7on ! En effet, Il existe un grand nombre de possibilit\u00e9s pour vous rendre la monnaie : Nous pourrions ainsi lister l'ensemble de ces possibilit\u00e9s de fa\u00e7on \u201cm\u00e9thodique\u201d en utilisant un arbre mais cet algorithme serait tr\u00e8s \u201cco\u00fbteux\u201d en temps de calcul. Imaginons un exemple en partant simplement de la valeur 11 \u20ac Nous allons donc utiliser un algorithme \u201cglouton\u201d pour optimiser ce probl\u00e8me. D\u00e9finition : A chaque \u00e9tape, on effectue le choix qui semble le meilleur, sans jamais remettre en question les choix d\u00e9j\u00e0 effectu\u00e9s. Pour le rendu de monnaie, c'est assez simple, il suffit de prendre \u00e0 chaque \u00e9tape la plus grande valeur de billet ou de pi\u00e8ce. Dans notre syst\u00e8me mon\u00e9taire, cet algorithme est pratiquement toujours la solution la plus optimis\u00e9e mais nous allons verrons plus loin que ce n'est pas toujours le cas. Voici l'algorithme propos\u00e9, il sera \u00e0 impl\u00e9menter plus tard. La fonction renduMonnaie() prendra en argument la somme \u00e0 rendre et la liste des pi\u00e8ces et billets \u00e0 disposition. Cette fonction retournera la liste des pi\u00e8ces et billets \u00e0 rendre 1 2 3 4 5 6 7 8 9 def renduMonnaie(somme, liste): Initialisation d'un tableau monnaie \u00e0 la liste vide. Initialisation de somme_restante \u00e0 somme Tant que la somme_restante est >0 Choisir valeur_choisie dans la liste la plus grande valeur de monnaie qui ne d\u00e9passe pas somme_restante. Ajouter cette valeur_choisie \u00e0 monnaie Somme_restante = Somme_restante - valeur choisie Fin tant que renvoie monnaie Exemple 1 : on dispose de toutes les pi\u00e8ces Exemple 2 : L'algorithme est-il toujours optimis\u00e9 si vous ne disposez plus de toutes les pi\u00e8ces ... A vous de r\u00e9soudre cette situation \u00e0 la main dans un premier temps. somme = 63 liste = [1, 2, 20, 50, 100, 200]... Vous avez bien lu, il ne reste plus de pi\u00e8ces de 5 \u20ac , ni de billets de 10 \u20ac!! Pour d\u00e9bloquer la solution, trouver au moins le nombre de pi\u00e8ces rendues :","title":"Probl\u00e8me de rendu de monnaie"},{"location":"algorithmie/glouton.html#implementation","text":"A faire Programmer le rendu de monnaie et v\u00e9rifier le r\u00e9sultat pour les exemples 1 et 2. Situation Canonique La situation du rendu de monnaie, ici, est canonique c'est \u00e0 dire qu'elle arrive toujours \u00e0 une solution optimale. Ceci est li\u00e9 \u00e0 notre syst\u00e8me de monnaie. Avec un autre syst\u00e8me mon\u00e9taire, on pourrait se retrouver avec des r\u00e9sultats qui ne seraient pas satisfaisants : la somme rendue peut \u00eatre sup\u00e9rieure ou inf\u00e9rieure \u00e0 la somme d\u00fbe. L'ancien syst\u00e8me mon\u00e9taire britannique \u00e9tait compos\u00e9 de pi\u00e8ces de (1,3,6,12,24,30). Modifier le syst\u00e8me de monnaie et v\u00e9rifier que le programme n'est plus optimal.","title":"Impl\u00e9mentation"},{"location":"algorithmie/glouton.html#exercices","text":"Un TP est disponible si le temps le permet.","title":"Exercices"},{"location":"algorithmie/glouton.html#probleme-du-sac-a-dos","text":"Vous \u00eates chasseur de tr\u00e9sors ! Apr\u00e8s de longues heures d'aventure, des dangers \u00e9vit\u00e9s de justesse, et malgr\u00e9 une arm\u00e9e de pilleurs \u00e0 vos trousses, vous avez trouv\u00e9 un \u00e9norme TR\u00c9SOR ! Vous \u00eates heureux, vous sautez de joie et lancez des pi\u00e8ces en l'air ! Finalement vous retrouvez votre calme et commencez \u00e0 r\u00e9fl\u00e9chir vite (n'oubliez pas l'arm\u00e9e de pillards qui est sur vos traces...). Votre sac \u00e0 dos est assez solide pour n'emporter que 10 kg et le tr\u00e9sor p\u00e8se bien plus... Il va vous falloir choisir les objets \u00e0 emporter. Heureusement vous \u00eates pr\u00e9voyant et vous avez la liste des objets pr\u00e9sents dans le coffre ainsi que leur masse et leur valeur (Comment \u00e7a \u201cce n'est pas tr\u00e8s cr\u00e9dible\u201d ? Vous \u00eates vraiment chasseur de tr\u00e9sor vous ?). Le tr\u00e9sor ne contient qu'un exemplaire de chaque objet. En bon \u201cgeek\u201d que vous \u00eates, vous avez toujours votre IDE Python favorite sur vous. Il va falloir cr\u00e9er un algorithme de remplissage de votre sac \u00e0 dos et fissa si vous ne voulez pas finir ruin\u00e9 voire pire... Il s'agit de choisir les objets \u00e0 emporter dans le sac afin d'obtenir la valeur totale la plus grande tout en respectant la contrainte du poids maximal. C'est un probl\u00e8me d'optimisation avec contrainte. Ce probl\u00e8me peut se r\u00e9soudre par force brute, c'est-\u00e0-dire en testant tous les cas possibles. Mais ce type de r\u00e9solution pr\u00e9sente un probl\u00e8me de complexit\u00e9. Son co\u00fbt en fonction du nombre d'objets disponibles cro\u00eet de mani\u00e8re exponentielle. Vous envisagerez plut\u00f4t une strat\u00e9gie gloutonne (m\u00e9thode heuristique dans la vid\u00e9o suivante). Le principe d'un algorithme glouton est de faire le meilleur choix pour le premier objet, puis le meilleur choix pour le deuxi\u00e8me, et ainsi de suite sans jamais remettre en cause le choix pr\u00e9c\u00e9dent ! Que faut-il entendre par \u201cmeilleur choix\u201d ? - Est-ce prendre l'objet qui a la plus grande valeur ? - Est-ce prendre l'objet qui a la plus petite masse ? - Est-ce prendre l'objet le rapport valeur/poids le plus grand ? - Le choix le plus \u201cspontan\u00e9\u201d serait de prendre les objets qui ont les valeurs les plus \u00e9lev\u00e9es ? - Est ce vraiment le bon ? Bien sur, si vous \u00eates joueur, vous pouvez essayer de tout tester mais nous vous conseillons vivement de regarder cette vid\u00e9o avant de vous lancer dans la programmation :","title":"Probl\u00e8me du sac \u00e0 dos"},{"location":"algorithmie/glouton.html#a-vous-de-limplementer","text":"Vous disposez de plusieurs programme \u201csquelette\u201d qui contient l'ossature de vos diff\u00e9rentes fonctions. Elles sont document\u00e9es (docstring) et test\u00e9es (assert) . Vous disposez \u00e9galement d'une liste des objets pr\u00e9sents pour tester vos diff\u00e9rentes fonctions : La fonction (valeur) permet de trier la liste des objets en fonction de leur valeur. Cette fonction est d\u00e9j\u00e0 compl\u00e9t\u00e9e Sac_v1.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 ## Chasse au tr\u00e9sor : glouton sac a dos ## liste des objets dispo chaque objet est repr\u00e9sent\u00e9 par une liste ## item 0 : nom de l 'objet en str ## item 1 : valeur de l'objet en float ## item 2 : masse de l'objet en int from operator import itemgetter # pour utiliser la fonction sorted en choisissant l'\u00e9l\u00e9ment qui sert au tri objets = [[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]] def valeur ( liste ) : \"\"\" trie les objets de la liste par valeur d\u00e9croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" liste = sorted ( liste , key = itemgetter ( 1 ), reverse = True ) return liste assert ( valeur ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def sacGlouton ( liste , maxSac ) : \"\"\" parametres : liste : la liste des objets \u00e0 choisir c'est une liste de liste maxSac : masse max que peut supporte le sac (int) return : objetsSac : la liste des objets s\u00e9lectionn\u00e9s masseTotale : la masse du sac valeurTotale : la valeur du contenu \"\"\" ## A COMPLETER return objetsSac , masseTotale , valeurTotale assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 ) == ([[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ]], 10 ) Une version plus subtile vous permettra de tester diff\u00e9rentes m\u00e9thodes heuristiques pour optimiser votre choix. (soit par valeur, soit par masse ou rapport valeur/masse) La derni\u00e8re fonction sacGlouton est la partie du programme qui s\u00e9lectionne les tr\u00e9sors \u00e0 emporter. Sac_v2.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 # glouton sac a dos ## liste des objets dispo chaque objet est repr\u00e9sent\u00e9 par une liste ## item 0 : nom de l 'objet en str ## item 1 : valeur de l'objet en float ## item 2 : masse de l'objet en float from operator import itemgetter # pour utiliser la fonction sorted en choisissant l'\u00e9l\u00e9ment qui sert au tri objets = [[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]] def valeur ( liste ) : \"\"\" trie les objets de la liste par valeur d\u00e9croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" liste = sorted ( liste , key = itemgetter ( 1 ), reverse = True ) return liste assert ( valeur ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def masse ( liste ) : \"\"\" trie les objets par masse croissante parametre : liste : la liste des objets \u00e0 trier return : liste : la liste tri\u00e9e \"\"\" ### A COMPLETER return liste assert ( masse ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'bracelet' , 30 , 2 ], [ 'lingot' , 50 , 3 ], [ 'd\u00e9chets' , 1 , 4 ], [ 'couronne' , 80 , 4 ]] def rapport ( liste ) : \"\"\" trie les objets par leur rapport valeur/masse, en cas d'\u00e9galit\u00e9, on pourra favoriser l'objet le plus l\u00e9ger parametre : liste : la liste des objets \u00e0 trier return : listeTriee : la liste tri\u00e9e \"\"\" ## A COMPLETER return listeTriee assert ( rapport ([[ \"lingot\" , 50 , 3 ], [ \"couronne\" , 80 , 4 ], [ \"bracelet\" , 30 , 2 ], [ \"collier\" , 20 , 1 ], [ \"assiette\" , 5 , 2 ], [ \"d\u00e9chets\" , 1 , 4 ]])) == [[ 'couronne' , 80 , 4 ], [ 'collier' , 20 , 1 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]] def sacGlouton ( liste , maxSac , choixTri ) : \"\"\" parametres : liste : la liste des objets \u00e0 choisir c'est une liste de liste maxSac : masse max que peut supporte le sac (int) choixTri : si on choisit de faire un tri des objets par masse, valeur ou rapport (str) return : objetsSac : la liste des objets s\u00e9lectionn\u00e9s masseTotale : la masse du sac valeurTotale : la valeur du contenu \"\"\" ## A COMPLETER return objetsSac , masseTotale , valeurTotale assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , rapport )) == ([[ 'couronne' , 80 , 4 ], [ 'collier' , 20 , 1 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ]], 10 , 180 ) assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , masse )) == ([[ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'bracelet' , 30 , 2 ], [ 'lingot' , 50 , 3 ]], 8 , 105 ) assert ( sacGlouton ([[ 'lingot' , 50 , 3 ], [ 'couronne' , 80 , 4 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ], [ 'assiette' , 5 , 2 ], [ 'd\u00e9chets' , 1 , 4 ]], 10 , valeur )) == ([[ 'couronne' , 80 , 4 ], [ 'lingot' , 50 , 3 ], [ 'bracelet' , 30 , 2 ], [ 'collier' , 20 , 1 ]], 10 , 180 ) Si vous commencez par la version simple (Sac_v1.py), vous ne perdrez absolument pas votre temps car votre travail va vous permettra d'impl\u00e9menter assez facilement la version adaptative qui permet de faire des comparaisons ( Sac_v2.py ) A vous de les compl\u00e9ter pour emporter les meilleurs pi\u00e8ces du tr\u00e9sor avant l'arriv\u00e9e de vos ennemis ! Vous pr\u00e9senterez vos r\u00e9sultats sous la forme d'une phrase en fran\u00e7ais indiquant la valeur dans le sac \u00e0 dos, sa masse et la liste des objets ! function AccesProtege1() { self.location.href=prompt(\"Mot de passe (nombre de solutions trouv\u00e9es) :\",\"\") + \".html\"; } function AccesProtege2() { self.location.href=prompt(\"Mot de passe (nombre de solutions trouv\u00e9es) :\",\"\") + \".html\"; }","title":"A vous de l'impl\u00e9menter"},{"location":"algorithmie/intro_algo.html","text":"Introduction \u00e0 l'algorithmie \u2693\ufe0e Recette des cr\u00e8pes \u2693\ufe0e poser 500g de farine en tas creuser un trou au somment casser 3 \u0153ufs dans le trou malaxer \u00e0 la main dans un saladier, ajouter un demi litre de lait m\u00e9langer au fouet cuire les cr\u00eapes \u00e0 feu doux Ceci est une liste d'\u00e9tapes \u00e0 r\u00e9aliser dans l'ordre et en respectant les quantit\u00e9s afin de r\u00e9ussir sa recette. Les consignes sont pr\u00e9cises et si une seule \u00e9tape n'est pas r\u00e9alis\u00e9e comme demand\u00e9, le r\u00e9sultat ne sera pas celui attendu. Les labyrinthes Pour sortir d'un labyrinthe \u00e0 coup sur, poser la main droite sur le mur et longer le mur sans jamais d\u00e9coller la main. Lorsqu'il n'y a plus de mur, vous \u00eates sorti. Cet m\u00e9thode permet-elle de sortir des labyrinthes propos\u00e9s ? oui non Cette m\u00e9thode peut \u00eatre longue dans le cas du 2eme labyrinthe notamment mais elle est fiable \u00e0 100% ! ! D\u00e9finition : L'algorithme Un algorithme est une suite d'instruction pr\u00e9cises et sans ambigu\u00eft\u00e9 permettant de r\u00e9soudre un probl\u00e8me \u00e0 partir de certaines donn\u00e9es. Algorithmes de la vie quotidienne \u2693\ufe0e Ma journ\u00e9e Mettre dans l'ordre les \u00e9tapes \u00e0 suivre pour aller au travail. \u00e9tape 1 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 2 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 3 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 4 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 5 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 6 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint Dans l'ordre, je me l\u00e8ve, je monte dans ma voiture je prends la 3e sortie au rond-point, je me gare je sors de ma voiture et le m'installe \u00e0 mon poste de travail. Cr\u00e9er un algorithme de calcul mettre dans l'ordre les \u00e9tiquettes d'\u00e9tapes de l'algorithme \u00e9tape 1 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 2 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 3 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 4 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat Prendre R = 2 et le mattre au carr\u00e9. Multiplier le tout par 3,14 puis aficher le r\u00e9sultat. Que fait cet algorithme? Question Que fait cet algorithme? V\u00e9rifier Il calcule l'aire dans disque de rayon R. Conventions \u2693\ufe0e Lorsqu'on \u00e9crit un algorithme, on prendra soin de commencer par le nommer, de lister les variables qu'il utilise puis de mettre les instructions encadr\u00e9es par les mots DEBUT et FIN : 1 2 3 4 5 6 7 Algo Aire du disque : variables : R Debut : R prend la valeur 2 on \u00e9l\u00e8ve au carr\u00e9 on multiplie par 3,14 Fin Variables et affectation \u2693\ufe0e Une variable correspond \u00e0 un emplacement en m\u00e9moire de l'ordinateur. On peut la repr\u00e9senter par une boite qui aurait un nom et qui contiendrait une valeur. affectation Pour affecter une valeur \u00e0 une variable on utilise cette notation : a\u21903 Mais on peut aussi utiliser d'autres variables pour affecter une valeur \u00e0 une autre : d\u00e9but : b\u2190a*2 c\u2190b+a fin Ex\u00e9cuter un algorithme A la fin de l'ex\u00e9cution de : l'algorithme 1, la variable A contient et la variable B contient . l'algorithme 2, la variable A contient , la variable B contient et la variable C contient . l'algorithme 3, la variable A contient , la variable B contient et la variable C contient . L'algorithme 1, la variable A contient 3 et la variable B contient 4. l'algorithme 2, la variable A contient 2, la variable B contient 3 et la variable C contient 1. l'algorithme 3, la variable A contient 8, la variable B contient 4 et la variable C contient 7. les instructions d'entr\u00e9e et de sortie \u2693\ufe0e Les entr\u00e9es \u2693\ufe0e On peut avoir besoin de r\u00e9cup\u00e9rer un valeur entr\u00e9e au clavier par l'utilisateur. On utilise alors la syntaxe 1 LIRE a Le programme demandera \u00e0 l'utilisateur d'entrer quelque chose (un mot ou un nombre) et l'affectera \u00e0 la variable a. Par exemple : 1 2 3 4 5 6 Algo Aire_Disque : Variable R nombre DEBUT : LIRE R A\u2190R*R*3.14 FIN Cr\u00e9er un algorithme \u2693\ufe0e remplir les champs avec les variables Compl\u00e9ter l\u2019algorithme ci-dessous pour qu'il calcule la moyenne de 4 nombres entr\u00e9s par l'utilisateur. Algo moyenne : variables , nb1, nb2, nb3, nb4, s, m sont des nombres DEBUT : LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 ... nb1 nb2 s m <- ... nb1+nb2+nb3+nb4 nb1/4 s/4 m/4 ... s m <- ... nb1+nb2+nb3+nb4 s/4 m/4 FIN DEBUT : LIRE nb1 LIRE nb2 LIRE nb3 LIRE nb4 s\u2190nb1+nb2+nb3+nb4 m\u2190s/4 Les sorties \u2693\ufe0e Le dernier algorithme calcule l'aire d'un disque dont le rayon est entr\u00e9 par l'utilisateur mais ne le renseigne pas sur le r\u00e9sultat. Il faut ensuite afficher le r\u00e9sultat du calcul avec : AFFICHER A Ce qui donne : Algo Aire_Disque : Variable R nombre DEBUT : LIRE R A\u2190R*R*3.14 AFFICHER A FIN Passer de l'algorithme au langage Python \u2693\ufe0e Toutes les instructions qui ont \u00e9t\u00e9 vue peuvent \u00eatre traduites en langage de programmation : python ou autre. Affections de variables \u2693\ufe0e En python, les variables sont cr\u00e9\u00e9es au moment o\u00f9 on leur affecte une valeur. Il n'est pas utile de les d\u00e9clarer pr\u00e9alablement comme dans la plupart des langages. Entr\u00e9es et sorties \u2693\ufe0e Pour demander \u00e0 l'utilisateur de rentrer une valeur, on utilise la commande input(). Lorsque l'on \u00e9crit cette commande, le programme attend que l'utilisateur \u00e9crive quelque chose avant de poursuivre. En ajoutant du texte entre guillemets dans la parenth\u00e8se, on peut \u00e9crire un message destin\u00e9 \u00e0 l'utilisateur. Pour faire afficher les donn\u00e9es au langage python, on utilise la commande print() . Soit on afficher un message et on doit mettre des guillemets, soit on affiche le contenu d'une variable et on en met pas. On peut affecter \u00e0 une variable, les informations entr\u00e9es par l'utilisateur. Tester et comprendre le code ci-dessous : Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test\"); var rep=reponse.elements[\"test\"].value; if (rep==\"oui\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU1(){ document.getElementById(\"correctionQCU1\").style=\"display:block;\"; } function reactionListe2(){ var msg; var style; var selectElmt1 = document.getElementById(\"liste1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"liste2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"liste3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"liste4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; var selectElmt5 = document.getElementById(\"liste5\"); var valeurselectionnee5 = selectElmt5.options[selectElmt5.selectedIndex].value; var selectElmt6 = document.getElementById(\"liste6\"); var valeurselectionnee6 = selectElmt6.options[selectElmt6.selectedIndex].value; if (valeurselectionnee1==\"lever\" && valeurselectionnee2==\"monter\" && valeurselectionnee3==\"rondpoint\" && valeurselectionnee4==\"garer\" && valeurselectionnee5==\"sortir\" && valeurselectionnee6==\"installer\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"lever\" || valeurselectionnee2==\"monter\" || valeurselectionnee3==\"rondpoint\" || valeurselectionnee4==\"garer\" || valeurselectionnee5==\"sortir\" || valeurselectionnee6==\"installer\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe2').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe2(){ document.getElementById(\"correctionListe2\").style=\"display:block;\"; } function reactionListe3(){ var msg; var style; var selectElmt1 = document.getElementById(\"list1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"list2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"list3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"list4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; if (valeurselectionnee1==\"r2\" && valeurselectionnee2==\"carre\" && valeurselectionnee3==\"multiplier\" && valeurselectionnee4==\"afficher\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"r2\" || valeurselectionnee2==\"carre\" || valeurselectionnee3==\"multiplier\" || valeurselectionnee4==\"afficher\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe3').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe3(){ document.getElementById(\"correctionListe3\").style=\"display:block;\"; } function reactionText4(){ var msg; var style; var reponse41=document.getElementById(\"reponse41\"); console.log(reponse41.value); var reponse42=document.getElementById(\"reponse42\"); var reponse43=document.getElementById(\"reponse43\"); var reponse44=document.getElementById(\"reponse44\"); var reponse45=document.getElementById(\"reponse45\"); var reponse46=document.getElementById(\"reponse46\"); var reponse47=document.getElementById(\"reponse47\"); var reponse48=document.getElementById(\"reponse48\"); if ((((((((reponse41.value =='3' && reponse42.value =='4') && reponse43.value =='2') && reponse44.value =='3' )&& reponse45.value =='1') && reponse46.value =='8') && reponse47.value =='4') && reponse48.value =='7')){ msg='bravo'; style='style=\"color:green;\"'; } else if (reponse41.value =='3' || reponse42.value =='4' || reponse43.value =='2' || reponse44.value =='3' || reponse45.value =='1' || reponse46.value =='8' || reponse47.value =='4' || reponse48.value =='7'){ msg='R\u00e9ponse partiellement correcte!'; style='style=\"color:orange;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"'; } document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText4\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText4(){ document.getElementById(\"correctionText4\").style=\"display:block;\"; } function reactionListe5(){ var msg; var style; var selectElmt1 = document.getElementById(\"lis1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"lis2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"lis3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"lis4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; var selectElmt5 = document.getElementById(\"lis5\"); var valeurselectionnee5 = selectElmt5.options[selectElmt5.selectedIndex].value; var selectElmt6 = document.getElementById(\"lis6\"); var valeurselectionnee6 = selectElmt6.options[selectElmt6.selectedIndex].value; var selectElmt7 = document.getElementById(\"lis7\"); var valeurselectionnee7 = selectElmt7.options[selectElmt7.selectedIndex].value; var selectElmt8 = document.getElementById(\"lis8\"); var valeurselectionnee8 = selectElmt8.options[selectElmt8.selectedIndex].value; if (valeurselectionnee1==\"nb1\" && valeurselectionnee2==\"nb2\" && valeurselectionnee3==\"nb3\" && valeurselectionnee4==\"nb4\" && valeurselectionnee5==\"s\" && valeurselectionnee6==\"somme\" && valeurselectionnee7==\"m\" && valeurselectionnee8==\"s/4\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"nb1\" || valeurselectionnee2==\"nb2\" || valeurselectionnee3==\"nb3\" || valeurselectionnee4==\"nb4\" || valeurselectionnee5==\"s\" || valeurselectionnee6==\"somme\" || valeurselectionnee7==\"m\" || valeurselectionnee8==\"s/4\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe5\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe5').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe5(){ document.getElementById(\"correctionListe5\").style=\"display:block;\"; }","title":"Introduction \u00e0 l'algorithmie"},{"location":"algorithmie/intro_algo.html#introduction-a-lalgorithmie","text":"","title":"Introduction \u00e0 l'algorithmie"},{"location":"algorithmie/intro_algo.html#recette-des-crepes","text":"poser 500g de farine en tas creuser un trou au somment casser 3 \u0153ufs dans le trou malaxer \u00e0 la main dans un saladier, ajouter un demi litre de lait m\u00e9langer au fouet cuire les cr\u00eapes \u00e0 feu doux Ceci est une liste d'\u00e9tapes \u00e0 r\u00e9aliser dans l'ordre et en respectant les quantit\u00e9s afin de r\u00e9ussir sa recette. Les consignes sont pr\u00e9cises et si une seule \u00e9tape n'est pas r\u00e9alis\u00e9e comme demand\u00e9, le r\u00e9sultat ne sera pas celui attendu. Les labyrinthes Pour sortir d'un labyrinthe \u00e0 coup sur, poser la main droite sur le mur et longer le mur sans jamais d\u00e9coller la main. Lorsqu'il n'y a plus de mur, vous \u00eates sorti. Cet m\u00e9thode permet-elle de sortir des labyrinthes propos\u00e9s ? oui non Cette m\u00e9thode peut \u00eatre longue dans le cas du 2eme labyrinthe notamment mais elle est fiable \u00e0 100% ! ! D\u00e9finition : L'algorithme Un algorithme est une suite d'instruction pr\u00e9cises et sans ambigu\u00eft\u00e9 permettant de r\u00e9soudre un probl\u00e8me \u00e0 partir de certaines donn\u00e9es.","title":"Recette des cr\u00e8pes"},{"location":"algorithmie/intro_algo.html#algorithmes-de-la-vie-quotidienne","text":"Ma journ\u00e9e Mettre dans l'ordre les \u00e9tapes \u00e0 suivre pour aller au travail. \u00e9tape 1 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 2 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 3 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 4 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 5 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint \u00e9tape 6 : ... S'installer \u00e0 son poste de travail Sortir de sa voiture se garer Se lever Monter dans sa voiture prendre la 3e sortie au rondpoint Dans l'ordre, je me l\u00e8ve, je monte dans ma voiture je prends la 3e sortie au rond-point, je me gare je sors de ma voiture et le m'installe \u00e0 mon poste de travail. Cr\u00e9er un algorithme de calcul mettre dans l'ordre les \u00e9tiquettes d'\u00e9tapes de l'algorithme \u00e9tape 1 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 2 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 3 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat \u00e9tape 4 : ... Multiplier le tout par 3,14 Prendre R=2 Mettre R au carr\u00e9 Afficher le r\u00e9sultat Prendre R = 2 et le mattre au carr\u00e9. Multiplier le tout par 3,14 puis aficher le r\u00e9sultat. Que fait cet algorithme? Question Que fait cet algorithme? V\u00e9rifier Il calcule l'aire dans disque de rayon R.","title":"Algorithmes de la vie quotidienne"},{"location":"algorithmie/intro_algo.html#conventions","text":"Lorsqu'on \u00e9crit un algorithme, on prendra soin de commencer par le nommer, de lister les variables qu'il utilise puis de mettre les instructions encadr\u00e9es par les mots DEBUT et FIN : 1 2 3 4 5 6 7 Algo Aire du disque : variables : R Debut : R prend la valeur 2 on \u00e9l\u00e8ve au carr\u00e9 on multiplie par 3,14 Fin","title":"Conventions"},{"location":"algorithmie/intro_algo.html#variables-et-affectation","text":"Une variable correspond \u00e0 un emplacement en m\u00e9moire de l'ordinateur. On peut la repr\u00e9senter par une boite qui aurait un nom et qui contiendrait une valeur. affectation Pour affecter une valeur \u00e0 une variable on utilise cette notation : a\u21903 Mais on peut aussi utiliser d'autres variables pour affecter une valeur \u00e0 une autre : d\u00e9but : b\u2190a*2 c\u2190b+a fin Ex\u00e9cuter un algorithme A la fin de l'ex\u00e9cution de : l'algorithme 1, la variable A contient et la variable B contient . l'algorithme 2, la variable A contient , la variable B contient et la variable C contient . l'algorithme 3, la variable A contient , la variable B contient et la variable C contient . L'algorithme 1, la variable A contient 3 et la variable B contient 4. l'algorithme 2, la variable A contient 2, la variable B contient 3 et la variable C contient 1. l'algorithme 3, la variable A contient 8, la variable B contient 4 et la variable C contient 7.","title":"Variables et affectation"},{"location":"algorithmie/intro_algo.html#les-instructions-dentree-et-de-sortie","text":"","title":"les instructions d'entr\u00e9e et de sortie"},{"location":"algorithmie/intro_algo.html#les-entrees","text":"On peut avoir besoin de r\u00e9cup\u00e9rer un valeur entr\u00e9e au clavier par l'utilisateur. On utilise alors la syntaxe 1 LIRE a Le programme demandera \u00e0 l'utilisateur d'entrer quelque chose (un mot ou un nombre) et l'affectera \u00e0 la variable a. Par exemple : 1 2 3 4 5 6 Algo Aire_Disque : Variable R nombre DEBUT : LIRE R A\u2190R*R*3.14 FIN","title":"Les entr\u00e9es"},{"location":"algorithmie/intro_algo.html#creer-un-algorithme","text":"remplir les champs avec les variables Compl\u00e9ter l\u2019algorithme ci-dessous pour qu'il calcule la moyenne de 4 nombres entr\u00e9s par l'utilisateur. Algo moyenne : variables , nb1, nb2, nb3, nb4, s, m sont des nombres DEBUT : LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 LIRE : ... nb1 nb2 nb3 nb4 ... nb1 nb2 s m <- ... nb1+nb2+nb3+nb4 nb1/4 s/4 m/4 ... s m <- ... nb1+nb2+nb3+nb4 s/4 m/4 FIN DEBUT : LIRE nb1 LIRE nb2 LIRE nb3 LIRE nb4 s\u2190nb1+nb2+nb3+nb4 m\u2190s/4","title":"Cr\u00e9er un algorithme"},{"location":"algorithmie/intro_algo.html#les-sorties","text":"Le dernier algorithme calcule l'aire d'un disque dont le rayon est entr\u00e9 par l'utilisateur mais ne le renseigne pas sur le r\u00e9sultat. Il faut ensuite afficher le r\u00e9sultat du calcul avec : AFFICHER A Ce qui donne : Algo Aire_Disque : Variable R nombre DEBUT : LIRE R A\u2190R*R*3.14 AFFICHER A FIN","title":"Les sorties"},{"location":"algorithmie/intro_algo.html#passer-de-lalgorithme-au-langage-python","text":"Toutes les instructions qui ont \u00e9t\u00e9 vue peuvent \u00eatre traduites en langage de programmation : python ou autre.","title":"Passer de l'algorithme au langage Python"},{"location":"algorithmie/intro_algo.html#affections-de-variables","text":"En python, les variables sont cr\u00e9\u00e9es au moment o\u00f9 on leur affecte une valeur. Il n'est pas utile de les d\u00e9clarer pr\u00e9alablement comme dans la plupart des langages.","title":"Affections de variables"},{"location":"algorithmie/intro_algo.html#entrees-et-sorties","text":"Pour demander \u00e0 l'utilisateur de rentrer une valeur, on utilise la commande input(). Lorsque l'on \u00e9crit cette commande, le programme attend que l'utilisateur \u00e9crive quelque chose avant de poursuivre. En ajoutant du texte entre guillemets dans la parenth\u00e8se, on peut \u00e9crire un message destin\u00e9 \u00e0 l'utilisateur. Pour faire afficher les donn\u00e9es au langage python, on utilise la commande print() . Soit on afficher un message et on doit mettre des guillemets, soit on affiche le contenu d'une variable et on en met pas. On peut affecter \u00e0 une variable, les informations entr\u00e9es par l'utilisateur. Tester et comprendre le code ci-dessous : Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC function reactionQCU1(){ var style; var msg; var reponse = document.getElementById(\"test\"); var rep=reponse.elements[\"test\"].value; if (rep==\"oui\"){msg='bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else {msg='mauvaise reponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageQCU1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffQCU1\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affiche la r\u00e9ponse si on clique sur le bouton correction*/ function AfficheQCU1(){ document.getElementById(\"correctionQCU1\").style=\"display:block;\"; } function reactionListe2(){ var msg; var style; var selectElmt1 = document.getElementById(\"liste1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"liste2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"liste3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"liste4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; var selectElmt5 = document.getElementById(\"liste5\"); var valeurselectionnee5 = selectElmt5.options[selectElmt5.selectedIndex].value; var selectElmt6 = document.getElementById(\"liste6\"); var valeurselectionnee6 = selectElmt6.options[selectElmt6.selectedIndex].value; if (valeurselectionnee1==\"lever\" && valeurselectionnee2==\"monter\" && valeurselectionnee3==\"rondpoint\" && valeurselectionnee4==\"garer\" && valeurselectionnee5==\"sortir\" && valeurselectionnee6==\"installer\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"lever\" || valeurselectionnee2==\"monter\" || valeurselectionnee3==\"rondpoint\" || valeurselectionnee4==\"garer\" || valeurselectionnee5==\"sortir\" || valeurselectionnee6==\"installer\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe2').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe2(){ document.getElementById(\"correctionListe2\").style=\"display:block;\"; } function reactionListe3(){ var msg; var style; var selectElmt1 = document.getElementById(\"list1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"list2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"list3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"list4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; if (valeurselectionnee1==\"r2\" && valeurselectionnee2==\"carre\" && valeurselectionnee3==\"multiplier\" && valeurselectionnee4==\"afficher\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"r2\" || valeurselectionnee2==\"carre\" || valeurselectionnee3==\"multiplier\" || valeurselectionnee4==\"afficher\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe3').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe3(){ document.getElementById(\"correctionListe3\").style=\"display:block;\"; } function reactionText4(){ var msg; var style; var reponse41=document.getElementById(\"reponse41\"); console.log(reponse41.value); var reponse42=document.getElementById(\"reponse42\"); var reponse43=document.getElementById(\"reponse43\"); var reponse44=document.getElementById(\"reponse44\"); var reponse45=document.getElementById(\"reponse45\"); var reponse46=document.getElementById(\"reponse46\"); var reponse47=document.getElementById(\"reponse47\"); var reponse48=document.getElementById(\"reponse48\"); if ((((((((reponse41.value =='3' && reponse42.value =='4') && reponse43.value =='2') && reponse44.value =='3' )&& reponse45.value =='1') && reponse46.value =='8') && reponse47.value =='4') && reponse48.value =='7')){ msg='bravo'; style='style=\"color:green;\"'; } else if (reponse41.value =='3' || reponse42.value =='4' || reponse43.value =='2' || reponse44.value =='3' || reponse45.value =='1' || reponse46.value =='8' || reponse47.value =='4' || reponse48.value =='7'){ msg='R\u00e9ponse partiellement correcte!'; style='style=\"color:orange;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"'; } document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText4\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText4(){ document.getElementById(\"correctionText4\").style=\"display:block;\"; } function reactionListe5(){ var msg; var style; var selectElmt1 = document.getElementById(\"lis1\"); var valeurselectionnee1 = selectElmt1.options[selectElmt1.selectedIndex].value; var selectElmt2 = document.getElementById(\"lis2\"); var valeurselectionnee2 = selectElmt2.options[selectElmt2.selectedIndex].value; var selectElmt3 = document.getElementById(\"lis3\"); var valeurselectionnee3 = selectElmt3.options[selectElmt3.selectedIndex].value; var selectElmt4 = document.getElementById(\"lis4\"); var valeurselectionnee4 = selectElmt4.options[selectElmt4.selectedIndex].value; var selectElmt5 = document.getElementById(\"lis5\"); var valeurselectionnee5 = selectElmt5.options[selectElmt5.selectedIndex].value; var selectElmt6 = document.getElementById(\"lis6\"); var valeurselectionnee6 = selectElmt6.options[selectElmt6.selectedIndex].value; var selectElmt7 = document.getElementById(\"lis7\"); var valeurselectionnee7 = selectElmt7.options[selectElmt7.selectedIndex].value; var selectElmt8 = document.getElementById(\"lis8\"); var valeurselectionnee8 = selectElmt8.options[selectElmt8.selectedIndex].value; if (valeurselectionnee1==\"nb1\" && valeurselectionnee2==\"nb2\" && valeurselectionnee3==\"nb3\" && valeurselectionnee4==\"nb4\" && valeurselectionnee5==\"s\" && valeurselectionnee6==\"somme\" && valeurselectionnee7==\"m\" && valeurselectionnee8==\"s/4\"){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee1==\"nb1\" || valeurselectionnee2==\"nb2\" || valeurselectionnee3==\"nb3\" || valeurselectionnee4==\"nb4\" || valeurselectionnee5==\"s\" || valeurselectionnee6==\"somme\" || valeurselectionnee7==\"m\" || valeurselectionnee8==\"s/4\"){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe5\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe5').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe5(){ document.getElementById(\"correctionListe5\").style=\"display:block;\"; }","title":"Entr\u00e9es et sorties"},{"location":"algorithmie/knn.html","text":"Algorithme des k plus proches voisins \u2693\ufe0e Qu'est-ce que le machine learning (algorithme d'apprentissage) ? \u2693\ufe0e Visionner cette conf\u00e9rence jusque au moins 17min30s Dans l'exemple de la vid\u00e9o, l'objectif est de reconna\u00eetre une cl\u00e9mentine d'une orange en mesurant simplement son diam\u00e8tre. Si tous les voisins sont des cl\u00e9mentines ou des oranges, la pr\u00e9diction est assez simple. Cependant en cas de \"cas limite\" il faut faire un choix sur la d\u00e9termination. Est-on au-dessus ou en-dessous de la moyenne ? Quel est le fruit le plus proche ? Autre solution, que sont les 3 ou 5 plus proches voisins ? Causalit\u00e9 ou corr\u00e9lation? La causalit\u00e9 entre deux donn\u00e9es \u00e9tablit une relation de \u00e0 . Alors que la corr\u00e9lation se contente de faire le entre deux donn\u00e9es. La causalit\u00e9 entre deux donn\u00e9es \u00e9tablit une relation de cause \u00e0 effets. Alors que la corr\u00e9lation se contente de faire le lien entre deux donn\u00e9es. Apprentissage Dans quel ordre se fait l'apprentissage? \u00e9tape 1 : ... Pr\u00e9diction Validation Entrainement \u00e9tape 2 : ... Pr\u00e9diction Validation Entrainement \u00e9tape 3 : ... Pr\u00e9diction Validation Entrainement Dans l'ordre, on s'entraine, on valide avec des tests puis on l'utilise pour les pr\u00e9dictions. Algorithme des kppv (ou Knn K nearest neighbors) \u2693\ufe0e Dans le cas pr\u00e9c\u00e9dent, il n'y a qu'un seul param\u00e8tre d'entr\u00e9e (le diam\u00e8tre). Dans le cas de l'\u00e9tude de papillon, par exemple, on classe les m\u00e2les et es femelles en les caract\u00e9risant par leur largeur et leur longueur. Voici la r\u00e9partitions des donn\u00e9es : On utilise ensuite des donn\u00e9es de papillons, dont on souhaite identifier le sexe. 1er cas : pas de doute les donn\u00e9es le font se trouver au milieu des femelles. On peut pr\u00e9voir que celui-ci est une femelle. 2e cas : L'h\u00e9sitation est permise. On n'est pas sur de le classer correctement. On utilise alors l'algorithme des k plus proches voisins. On observe sur K voisins combien sont des m\u00e2les et combien sont des femelles. Sur le document ci-dessous, en cliquant sur cercle (cercle centre-point) chercher \u00e0 d\u00e9terminer que sont les plus proches voisins et r\u00e9pondez \u00e0 la question : Choix du nombre de voisins Si k = 1 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 3 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 5 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 6 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k= 1 on a une majotrit\u00e9 de m\u00e2le on suppose donc que c'est un m\u00e2le. Si k=3 une majorit\u00e9 de voisins sont des femmelles, on suppose donc que c'est une femelle. Si k=5 une majorit\u00e9 de voisins sont des m\u00e2les, on suppose donc que c'est un m\u00e2le. Si k=6 on a une \u00e9galit\u00e9 entre les m\u00e2les et les femmelles on ne peut pas conclure. Nombre de voisins On attend ici une r\u00e9ponse en un mot uniquement. Pourquoi choisit on entre 1, 3, 5, ... pour le nombre de plus proches voisins ? Qu'est ce que ces valeurs ont de particulier ? Elles sont ... Les valeurs sont impaires. Si on choisit un nombre pair, en cas d'\u00e9galit\u00e9, le programme sera incapable de choisir entre les deux cat\u00e9gories. grand jeu de donn\u00e9es L'avantage d'utiliser un grand jeu de donn\u00e9es est que la pr\u00e9diction est plus mais que l'apprentissage est plus . Plus le jeu de donn\u00e9es est grand plus la pr\u00e9diction est fiable mais plus l'apprentissage est long. La m\u00e9trique \u2693\ufe0e La m\u00e9trique est la \"distance\" que l'on se fixe. Dans le cas pr\u00e9c\u00e9dent, la m\u00e9trique est Dans l'exemple ci-dessous, on a classer des maisons, selon si les enfants sont scolaris\u00e9s dans l'\u00e9cole bleue ou dans l'\u00e9cole verte. Une nouvelle maison a \u00e9t\u00e9 construite. Choisir l'\u00e9cole Dans le cas ou la m\u00e9trique est a distance \u00e0 vol d'oiseau, en choisissant k =5, les enfants iront dans l'\u00e9cole ... bleue verte On d\u00e9cide cette fois que le quadrillage repr\u00e9sente les routes. La maison 1 est \u00e0 4 de distance de la maison \u00e0 classer. En utilisant, comme nouvelle m\u00e9trique la distance sur le quadrillage et k =7, les enfants iront dans l'\u00e9cole : ... bleue verte A vol d'oiseau, les enfants iront dans l'\u00e9cole bleue et avec le quadrillage dans la verte. Conclusion \u2693\ufe0e L'algorithme des k plus proches voisins est un des plus simples algorithmes d'apprentissage. Malgr\u00e9 sa simplicit\u00e9, pour qu'il puisse contribuer \u00e0 des pr\u00e9visions correctes, il faut avoir un jeu de donn\u00e9es important (d'o\u00f9 l'enjeu des donn\u00e9es personnelles dont les GAFAM sont si gourmandes). Le principe \u00e9tant de disposer d'un jeu d'apprentissage et d'un jeu de test (un ensemble de donn\u00e9es sur lesquelles ont conna\u00eet la r\u00e9ponse et on \u00e9value la fiabilit\u00e9 de la pr\u00e9diction). Le travail de mise au point (choix de k ici est fondamental). L'algorithme \u2693\ufe0e Apprentissage : \u2693\ufe0e A partir d'un jeu de donn\u00e9es importants, extraire la m\u00e9trique. associer la valeur de la m\u00e9trique \u00e0 une cat\u00e9gorie. Utilisation : \u2693\ufe0e Entrer une valeur de m\u00e9trique et un nombre de voisins k Chercher dans le tableau d'apprentissage les k valeurs les plus proches de la m\u00e9trique d'entr\u00e9e extraire les cat\u00e9gories correspondantes chercher le nombre d\u2019occurrences de chaque cat\u00e9gories Renvoyer la cat\u00e9gorie ayant le plus grand nombre d\u2019occurrences TP : Application \u2693\ufe0e Pour mettre en application cet algorithme rendez-vous sur capytale avec le code : 123b-604638 Projet : Le choixpeau magique \u2693\ufe0e L'id\u00e9e est de programmer le choixpeau magique. choixpeau magique Une premi\u00e8re partie permet d'affecter une maison selon des scores d'ambition, de courage, de bont\u00e9 et d'intelligence. voir capytale code : 85b9-1576377. La deuxi\u00e8me partie pour les plus rapide sera de cr\u00e9er le questionnaire permettant de g\u00e9n\u00e9rer les notes. Il faudra que le programme pose les questions, g\u00e8re les r\u00e9ponses et renvoie un score. Vous pouvez inventer les questions ou vous aider de questionnaires existant. Bonus : Si vraiment vous vous ennuyez, essayer de cr\u00e9er un programme en .exe que l'on pourrait donner \u00e0 quelqu'un pour qu'il r\u00e9ponde aux questions et se voit affecter une maison. function reactionText1(){ var msg; console.log('fonction executee'); var reponse1=document.getElementById(\"reponse1\"); var reponse2=document.getElementById(\"reponse2\"); var reponse3=document.getElementById(\"reponse3\"); if ((reponse1.value =='cause' )&& reponse2.value =='effets' || reponse2.value =='effet' && reponse3.value =='lien' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\"; document.getElementById(\"correction1\").style=\"font-style:italic;\";} function reactionListe2(){ var msg; var style; var selectElmt21 = document.getElementById(\"liste1\"); var valeurselectionnee21 = selectElmt21.options[selectElmt21.selectedIndex].value; var selectElmt22 = document.getElementById(\"liste2\"); var valeurselectionnee22 = selectElmt22.options[selectElmt22.selectedIndex].value; var selectElmt23 = document.getElementById(\"liste3\"); var valeurselectionnee23 = selectElmt23.options[selectElmt23.selectedIndex].value; if (valeurselectionnee21==\"entrainement\" && valeurselectionnee22==\"validation\" && valeurselectionnee23==\"prediction\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee21==\"entrainement\" || valeurselectionnee22==\"validation\" || valeurselectionnee23==\"prediction\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe2').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe2(){ document.getElementById(\"correctionListe2\").style=\"display:block;\"; document.getElementById(\"correctionListe2\").style=\"font-style:italic;\"; } function reactionListe3(){ var msg; var style; var selectElmt31 = document.getElementById(\"liste31\"); var valeurselectionnee31 = selectElmt31.options[selectElmt31.selectedIndex].value; var selectElmt32 = document.getElementById(\"liste32\"); var valeurselectionnee32 = selectElmt32.options[selectElmt32.selectedIndex].value; var selectElmt33 = document.getElementById(\"liste33\"); var valeurselectionnee33 = selectElmt33.options[selectElmt33.selectedIndex].value; var selectElmt34 = document.getElementById(\"liste34\"); var valeurselectionnee34 = selectElmt34.options[selectElmt34.selectedIndex].value; if (valeurselectionnee31==\"male\" && valeurselectionnee32==\"femelle\" && valeurselectionnee33==\"male\" && valeurselectionnee34==\"indetermine\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee31==\"male\" || valeurselectionnee32==\"femelle\" || valeurselectionnee33==\"male\" || valeurselectionnee34==\"indetermine\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe3').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe3(){ document.getElementById(\"correctionListe3\").style=\"display:block;\"; document.getElementById(\"correctionListe3\").style=\"font-style:italic;\"; } function reactionText4(){ var msg; var style; var reponse=document.getElementById(\"reponse4\"); if (reponse.value =='impaires' || reponse.value =='impaire' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"'; } document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText4\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText4(){ document.getElementById(\"correctionText4\").style=\"display:block;\"; document.getElementById(\"correctionText4\").style=\"font-style:italic;\"; } function reactionText5(){ var msg; console.log('fonction executee'); var reponse51=document.getElementById(\"reponse51\"); var reponse52=document.getElementById(\"reponse52\"); if ((reponse51.value =='pr\u00e9cise' || reponse51.value =='precise' || reponse51.value =='fiable')&& reponse52.value =='lent' || reponse52.value =='long' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText5\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection5\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche5(){ document.getElementById(\"correction5\").style=\"display:block;\"; document.getElementById(\"correction5\").style=\"font-style:italic;\";} function reactionListe6(){ var msg; var style; var selectElmt61 = document.getElementById(\"liste61\"); var valeurselectionnee61 = selectElmt61.options[selectElmt61.selectedIndex].value; var selectElmt62 = document.getElementById(\"liste62\"); var valeurselectionnee62 = selectElmt62.options[selectElmt62.selectedIndex].value; if (valeurselectionnee61==\"bleue\" && valeurselectionnee62==\"verte\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee61==\"bleue\" || valeurselectionnee62==\"verte\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe6\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe6').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe6(){ document.getElementById(\"correctionListe6\").style=\"display:block;\"; document.getElementById(\"correctionListe6\").style=\"font-style:italic;\"; }","title":"K plus proches voisins"},{"location":"algorithmie/knn.html#algorithme-des-k-plus-proches-voisins","text":"","title":"Algorithme des k plus proches voisins"},{"location":"algorithmie/knn.html#quest-ce-que-le-machine-learning-algorithme-dapprentissage","text":"Visionner cette conf\u00e9rence jusque au moins 17min30s Dans l'exemple de la vid\u00e9o, l'objectif est de reconna\u00eetre une cl\u00e9mentine d'une orange en mesurant simplement son diam\u00e8tre. Si tous les voisins sont des cl\u00e9mentines ou des oranges, la pr\u00e9diction est assez simple. Cependant en cas de \"cas limite\" il faut faire un choix sur la d\u00e9termination. Est-on au-dessus ou en-dessous de la moyenne ? Quel est le fruit le plus proche ? Autre solution, que sont les 3 ou 5 plus proches voisins ? Causalit\u00e9 ou corr\u00e9lation? La causalit\u00e9 entre deux donn\u00e9es \u00e9tablit une relation de \u00e0 . Alors que la corr\u00e9lation se contente de faire le entre deux donn\u00e9es. La causalit\u00e9 entre deux donn\u00e9es \u00e9tablit une relation de cause \u00e0 effets. Alors que la corr\u00e9lation se contente de faire le lien entre deux donn\u00e9es. Apprentissage Dans quel ordre se fait l'apprentissage? \u00e9tape 1 : ... Pr\u00e9diction Validation Entrainement \u00e9tape 2 : ... Pr\u00e9diction Validation Entrainement \u00e9tape 3 : ... Pr\u00e9diction Validation Entrainement Dans l'ordre, on s'entraine, on valide avec des tests puis on l'utilise pour les pr\u00e9dictions.","title":"Qu'est-ce que le machine learning (algorithme d'apprentissage) ?"},{"location":"algorithmie/knn.html#algorithme-des-kppv-ou-knn-k-nearest-neighbors","text":"Dans le cas pr\u00e9c\u00e9dent, il n'y a qu'un seul param\u00e8tre d'entr\u00e9e (le diam\u00e8tre). Dans le cas de l'\u00e9tude de papillon, par exemple, on classe les m\u00e2les et es femelles en les caract\u00e9risant par leur largeur et leur longueur. Voici la r\u00e9partitions des donn\u00e9es : On utilise ensuite des donn\u00e9es de papillons, dont on souhaite identifier le sexe. 1er cas : pas de doute les donn\u00e9es le font se trouver au milieu des femelles. On peut pr\u00e9voir que celui-ci est une femelle. 2e cas : L'h\u00e9sitation est permise. On n'est pas sur de le classer correctement. On utilise alors l'algorithme des k plus proches voisins. On observe sur K voisins combien sont des m\u00e2les et combien sont des femelles. Sur le document ci-dessous, en cliquant sur cercle (cercle centre-point) chercher \u00e0 d\u00e9terminer que sont les plus proches voisins et r\u00e9pondez \u00e0 la question : Choix du nombre de voisins Si k = 1 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 3 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 5 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k = 6 ce papillon est : ... Un male Une femelle On ne peut pas savoir Si k= 1 on a une majotrit\u00e9 de m\u00e2le on suppose donc que c'est un m\u00e2le. Si k=3 une majorit\u00e9 de voisins sont des femmelles, on suppose donc que c'est une femelle. Si k=5 une majorit\u00e9 de voisins sont des m\u00e2les, on suppose donc que c'est un m\u00e2le. Si k=6 on a une \u00e9galit\u00e9 entre les m\u00e2les et les femmelles on ne peut pas conclure. Nombre de voisins On attend ici une r\u00e9ponse en un mot uniquement. Pourquoi choisit on entre 1, 3, 5, ... pour le nombre de plus proches voisins ? Qu'est ce que ces valeurs ont de particulier ? Elles sont ... Les valeurs sont impaires. Si on choisit un nombre pair, en cas d'\u00e9galit\u00e9, le programme sera incapable de choisir entre les deux cat\u00e9gories. grand jeu de donn\u00e9es L'avantage d'utiliser un grand jeu de donn\u00e9es est que la pr\u00e9diction est plus mais que l'apprentissage est plus . Plus le jeu de donn\u00e9es est grand plus la pr\u00e9diction est fiable mais plus l'apprentissage est long.","title":"Algorithme des kppv (ou Knn K nearest neighbors)"},{"location":"algorithmie/knn.html#la-metrique","text":"La m\u00e9trique est la \"distance\" que l'on se fixe. Dans le cas pr\u00e9c\u00e9dent, la m\u00e9trique est Dans l'exemple ci-dessous, on a classer des maisons, selon si les enfants sont scolaris\u00e9s dans l'\u00e9cole bleue ou dans l'\u00e9cole verte. Une nouvelle maison a \u00e9t\u00e9 construite. Choisir l'\u00e9cole Dans le cas ou la m\u00e9trique est a distance \u00e0 vol d'oiseau, en choisissant k =5, les enfants iront dans l'\u00e9cole ... bleue verte On d\u00e9cide cette fois que le quadrillage repr\u00e9sente les routes. La maison 1 est \u00e0 4 de distance de la maison \u00e0 classer. En utilisant, comme nouvelle m\u00e9trique la distance sur le quadrillage et k =7, les enfants iront dans l'\u00e9cole : ... bleue verte A vol d'oiseau, les enfants iront dans l'\u00e9cole bleue et avec le quadrillage dans la verte.","title":"La m\u00e9trique"},{"location":"algorithmie/knn.html#conclusion","text":"L'algorithme des k plus proches voisins est un des plus simples algorithmes d'apprentissage. Malgr\u00e9 sa simplicit\u00e9, pour qu'il puisse contribuer \u00e0 des pr\u00e9visions correctes, il faut avoir un jeu de donn\u00e9es important (d'o\u00f9 l'enjeu des donn\u00e9es personnelles dont les GAFAM sont si gourmandes). Le principe \u00e9tant de disposer d'un jeu d'apprentissage et d'un jeu de test (un ensemble de donn\u00e9es sur lesquelles ont conna\u00eet la r\u00e9ponse et on \u00e9value la fiabilit\u00e9 de la pr\u00e9diction). Le travail de mise au point (choix de k ici est fondamental).","title":"Conclusion"},{"location":"algorithmie/knn.html#lalgorithme","text":"","title":"L'algorithme"},{"location":"algorithmie/knn.html#apprentissage","text":"A partir d'un jeu de donn\u00e9es importants, extraire la m\u00e9trique. associer la valeur de la m\u00e9trique \u00e0 une cat\u00e9gorie.","title":"Apprentissage :"},{"location":"algorithmie/knn.html#utilisation","text":"Entrer une valeur de m\u00e9trique et un nombre de voisins k Chercher dans le tableau d'apprentissage les k valeurs les plus proches de la m\u00e9trique d'entr\u00e9e extraire les cat\u00e9gories correspondantes chercher le nombre d\u2019occurrences de chaque cat\u00e9gories Renvoyer la cat\u00e9gorie ayant le plus grand nombre d\u2019occurrences","title":"Utilisation :"},{"location":"algorithmie/knn.html#tp-application","text":"Pour mettre en application cet algorithme rendez-vous sur capytale avec le code : 123b-604638","title":"TP : Application"},{"location":"algorithmie/knn.html#projet-le-choixpeau-magique","text":"L'id\u00e9e est de programmer le choixpeau magique. choixpeau magique Une premi\u00e8re partie permet d'affecter une maison selon des scores d'ambition, de courage, de bont\u00e9 et d'intelligence. voir capytale code : 85b9-1576377. La deuxi\u00e8me partie pour les plus rapide sera de cr\u00e9er le questionnaire permettant de g\u00e9n\u00e9rer les notes. Il faudra que le programme pose les questions, g\u00e8re les r\u00e9ponses et renvoie un score. Vous pouvez inventer les questions ou vous aider de questionnaires existant. Bonus : Si vraiment vous vous ennuyez, essayer de cr\u00e9er un programme en .exe que l'on pourrait donner \u00e0 quelqu'un pour qu'il r\u00e9ponde aux questions et se voit affecter une maison. function reactionText1(){ var msg; console.log('fonction executee'); var reponse1=document.getElementById(\"reponse1\"); var reponse2=document.getElementById(\"reponse2\"); var reponse3=document.getElementById(\"reponse3\"); if ((reponse1.value =='cause' )&& reponse2.value =='effets' || reponse2.value =='effet' && reponse3.value =='lien' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText1\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche1(){ document.getElementById(\"correction1\").style=\"display:block;\"; document.getElementById(\"correction1\").style=\"font-style:italic;\";} function reactionListe2(){ var msg; var style; var selectElmt21 = document.getElementById(\"liste1\"); var valeurselectionnee21 = selectElmt21.options[selectElmt21.selectedIndex].value; var selectElmt22 = document.getElementById(\"liste2\"); var valeurselectionnee22 = selectElmt22.options[selectElmt22.selectedIndex].value; var selectElmt23 = document.getElementById(\"liste3\"); var valeurselectionnee23 = selectElmt23.options[selectElmt23.selectedIndex].value; if (valeurselectionnee21==\"entrainement\" && valeurselectionnee22==\"validation\" && valeurselectionnee23==\"prediction\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee21==\"entrainement\" || valeurselectionnee22==\"validation\" || valeurselectionnee23==\"prediction\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe2\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe2').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe2(){ document.getElementById(\"correctionListe2\").style=\"display:block;\"; document.getElementById(\"correctionListe2\").style=\"font-style:italic;\"; } function reactionListe3(){ var msg; var style; var selectElmt31 = document.getElementById(\"liste31\"); var valeurselectionnee31 = selectElmt31.options[selectElmt31.selectedIndex].value; var selectElmt32 = document.getElementById(\"liste32\"); var valeurselectionnee32 = selectElmt32.options[selectElmt32.selectedIndex].value; var selectElmt33 = document.getElementById(\"liste33\"); var valeurselectionnee33 = selectElmt33.options[selectElmt33.selectedIndex].value; var selectElmt34 = document.getElementById(\"liste34\"); var valeurselectionnee34 = selectElmt34.options[selectElmt34.selectedIndex].value; if (valeurselectionnee31==\"male\" && valeurselectionnee32==\"femelle\" && valeurselectionnee33==\"male\" && valeurselectionnee34==\"indetermine\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee31==\"male\" || valeurselectionnee32==\"femelle\" || valeurselectionnee33==\"male\" || valeurselectionnee34==\"indetermine\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe3\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe3').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe3(){ document.getElementById(\"correctionListe3\").style=\"display:block;\"; document.getElementById(\"correctionListe3\").style=\"font-style:italic;\"; } function reactionText4(){ var msg; var style; var reponse=document.getElementById(\"reponse4\"); if (reponse.value =='impaires' || reponse.value =='impaire' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='non, essaye encore'; style='style=\"color:red;\"'; } document.getElementById(\"messageText4\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"bouAffText4\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function AfficheText4(){ document.getElementById(\"correctionText4\").style=\"display:block;\"; document.getElementById(\"correctionText4\").style=\"font-style:italic;\"; } function reactionText5(){ var msg; console.log('fonction executee'); var reponse51=document.getElementById(\"reponse51\"); var reponse52=document.getElementById(\"reponse52\"); if ((reponse51.value =='pr\u00e9cise' || reponse51.value =='precise' || reponse51.value =='fiable')&& reponse52.value =='lent' || reponse52.value =='long' ){ msg='bravo'; style='style=\"color:green;\"'; } else{msg='Vous avez des erreurs'; style='style=\"color:red;\"';} document.getElementById(\"messageText5\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById(\"boutoncorrection5\").style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } function affiche5(){ document.getElementById(\"correction5\").style=\"display:block;\"; document.getElementById(\"correction5\").style=\"font-style:italic;\";} function reactionListe6(){ var msg; var style; var selectElmt61 = document.getElementById(\"liste61\"); var valeurselectionnee61 = selectElmt61.options[selectElmt61.selectedIndex].value; var selectElmt62 = document.getElementById(\"liste62\"); var valeurselectionnee62 = selectElmt62.options[selectElmt62.selectedIndex].value; if (valeurselectionnee61==\"bleue\" && valeurselectionnee62==\"verte\" ){ msg='Bonne r\u00e9ponse'; style='style=\"color:green;\"'; } else if (valeurselectionnee61==\"bleue\" || valeurselectionnee62==\"verte\" ){ msg='R\u00e9ponse partiellement correcte'; style='style=\"color:orange;\"'; } else{msg='Mauvaise r\u00e9ponse'; style='style=\"color:red;\"'; } document.getElementById(\"messageListe6\").innerHTML='<p '+style+'>'+msg+'</p>'; document.getElementById('bouAffListe6').style=\"margin:5px; padding:5px; background-color : lightblue; border : solid 2px blue; border-radius : 5px;display:inline;\"; } /*affichage de la r\u00e9ponse*/ function AfficheListe6(){ document.getElementById(\"correctionListe6\").style=\"display:block;\"; document.getElementById(\"correctionListe6\").style=\"font-style:italic;\"; }","title":"Projet : Le choixpeau magique"},{"location":"algorithmie/tris.html","text":"Algorithmes de tris \u2693\ufe0e Dis moi comment tu tries... \u2693\ufe0e Trier un tableau Trier le tableau donn\u00e9 dans l'ordre croissant et \u00e9rire l'algorithme utilis\u00e9 sur le tableau blanc. Une fois l'algorithme r\u00e9dig\u00e9, l'essayer sur ces tableaux : D\u00e9couvrir les tris \u2693\ufe0e Tris par s\u00e9lection \u2693\ufe0e Une petite vid\u00e9o pour comprendre L'algorithme de tri par s\u00e9lection : On trouve le plus petit \u00e9l\u00e9ment de la liste puis on le place en premier. On recommence en partant du 2\u00e8me \u00e9l\u00e9ment : on trouve le minimum de la liste restante et on le place en 2\u00e8me,et ainsi de suite. Tri par insertion \u2693\ufe0e Une petite vid\u00e9o pour comprendre L'algorithme de tri par insertion : C\u2019est le tri qu\u2019on utilise quand on range des cartes : On parcourt la liste \u00e0 trier du d\u00e9but \u00e0 la fin. Au moment o\u00f9 l\u2019on consid\u00e8re le i\u00e8me \u00e9l\u00e9ment,les i\u22121 premiers sont d\u00e9j\u00e0 tri\u00e9s, et on ins\u00e8re ce i\u00e8me \u00e9l\u00e9ment \u00e0 la bonne place parmi les i\u22121 En pratique, on fait \u00abremonter\u00bb ce i\u00e8me \u00e9l\u00e9ment en l\u2019\u00e9changeant avec son pr\u00e9d\u00e9cesseur tant qu\u2019il est plus grand que lui. Question Un de ces tris correspond-il \u00e0 celui que vous avez utilis\u00e9? D\u00e9rouler l'algorithme En partant des tableaux ci-dessous, \u00e9crire la modification du tableau \u00e0 chaque \u00e9tape de chaque tri. Selection : t = [5, 4, 3, 2, 1] Insertion : t = [12, 8, 23, 10, 15] Impl\u00e9menter les tris \u2693\ufe0e Compl\u00e9ter la fonction tri_selection(L) qui prend en param\u00e8tre un tableau L et le trie par ordre croissant. 1 2 3 4 5 from random import randint def tri_selection ( L ): #todo print ( tri_selection ([ randint ( 0 , 10 ) for i in range ( 10 )])) Compl\u00e9ter la fonction tri_insertion(L) qui prend en param\u00e8tre un tableau L et le trie par ordre croissant. 1 2 3 4 5 from random import randint def tri_insertion ( L ): #todo print ( tri_insertion ([ randint ( 0 , 10 ) for i in range ( 10 )])) Ajouter les tests unitaires das les deux fonctions pour trier : [2,5,4,3,0,8] [21,15,44,13,30,84] [9,8,7,5,5,4,3,2] Modifier les fonctions pr\u00e9c\u00e9dentes de fa\u00e7on \u00e0 ce que la fonction renvoie le tableau tri\u00e9 mais aussi le nombre d'\u00e9tapes. Une \u00e9tape c'est une inversion ou une comparaison. Afficher le nombre d'\u00e9tapes maximales (c'est-\u00e0-dire dans le pire des cas) pour un tableau de taille 10, 50 et 100. NB : le pire des cas, ici, est un tableau tri\u00e9 dans l'ordre d\u00e9croissant. Recherche dicothomique \u2693\ufe0e La recherche d'un \u00e9l\u00e9ment dans un tableau peut se faire par dichotomie. La condition d'utilisation de cette recherche est que le tableau soit d\u00e9j\u00e0 tri\u00e9. Elle consiste \u00e0 comparer la valeur recherch\u00e9e \u00e0 la valeur du ilieu de la liste. Si la valeur recherch\u00e9e est inf\u00e9rieure \u00e0 la moiti\u00e9, on fait la meme recherche avec le demi tableau inf\u00e9rieur, etc ... exemple 1: exemple2: Algorithme : Impl\u00e9menter l'algorithme pr\u00e9c\u00e9dent et faites le test avec : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9 puis avec des valeurs figurant dans le tableau. Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC","title":"Algorithmes de tris"},{"location":"algorithmie/tris.html#algorithmes-de-tris","text":"","title":"Algorithmes de tris"},{"location":"algorithmie/tris.html#dis-moi-comment-tu-tries","text":"Trier un tableau Trier le tableau donn\u00e9 dans l'ordre croissant et \u00e9rire l'algorithme utilis\u00e9 sur le tableau blanc. Une fois l'algorithme r\u00e9dig\u00e9, l'essayer sur ces tableaux :","title":"Dis moi comment tu tries..."},{"location":"algorithmie/tris.html#decouvrir-les-tris","text":"","title":"D\u00e9couvrir les tris"},{"location":"algorithmie/tris.html#tris-par-selection","text":"Une petite vid\u00e9o pour comprendre L'algorithme de tri par s\u00e9lection : On trouve le plus petit \u00e9l\u00e9ment de la liste puis on le place en premier. On recommence en partant du 2\u00e8me \u00e9l\u00e9ment : on trouve le minimum de la liste restante et on le place en 2\u00e8me,et ainsi de suite.","title":"Tris par s\u00e9lection"},{"location":"algorithmie/tris.html#tri-par-insertion","text":"Une petite vid\u00e9o pour comprendre L'algorithme de tri par insertion : C\u2019est le tri qu\u2019on utilise quand on range des cartes : On parcourt la liste \u00e0 trier du d\u00e9but \u00e0 la fin. Au moment o\u00f9 l\u2019on consid\u00e8re le i\u00e8me \u00e9l\u00e9ment,les i\u22121 premiers sont d\u00e9j\u00e0 tri\u00e9s, et on ins\u00e8re ce i\u00e8me \u00e9l\u00e9ment \u00e0 la bonne place parmi les i\u22121 En pratique, on fait \u00abremonter\u00bb ce i\u00e8me \u00e9l\u00e9ment en l\u2019\u00e9changeant avec son pr\u00e9d\u00e9cesseur tant qu\u2019il est plus grand que lui. Question Un de ces tris correspond-il \u00e0 celui que vous avez utilis\u00e9? D\u00e9rouler l'algorithme En partant des tableaux ci-dessous, \u00e9crire la modification du tableau \u00e0 chaque \u00e9tape de chaque tri. Selection : t = [5, 4, 3, 2, 1] Insertion : t = [12, 8, 23, 10, 15]","title":"Tri par insertion"},{"location":"algorithmie/tris.html#implementer-les-tris","text":"Compl\u00e9ter la fonction tri_selection(L) qui prend en param\u00e8tre un tableau L et le trie par ordre croissant. 1 2 3 4 5 from random import randint def tri_selection ( L ): #todo print ( tri_selection ([ randint ( 0 , 10 ) for i in range ( 10 )])) Compl\u00e9ter la fonction tri_insertion(L) qui prend en param\u00e8tre un tableau L et le trie par ordre croissant. 1 2 3 4 5 from random import randint def tri_insertion ( L ): #todo print ( tri_insertion ([ randint ( 0 , 10 ) for i in range ( 10 )])) Ajouter les tests unitaires das les deux fonctions pour trier : [2,5,4,3,0,8] [21,15,44,13,30,84] [9,8,7,5,5,4,3,2] Modifier les fonctions pr\u00e9c\u00e9dentes de fa\u00e7on \u00e0 ce que la fonction renvoie le tableau tri\u00e9 mais aussi le nombre d'\u00e9tapes. Une \u00e9tape c'est une inversion ou une comparaison. Afficher le nombre d'\u00e9tapes maximales (c'est-\u00e0-dire dans le pire des cas) pour un tableau de taille 10, 50 et 100. NB : le pire des cas, ici, est un tableau tri\u00e9 dans l'ordre d\u00e9croissant.","title":"Impl\u00e9menter les tris"},{"location":"algorithmie/tris.html#recherche-dicothomique","text":"La recherche d'un \u00e9l\u00e9ment dans un tableau peut se faire par dichotomie. La condition d'utilisation de cette recherche est que le tableau soit d\u00e9j\u00e0 tri\u00e9. Elle consiste \u00e0 comparer la valeur recherch\u00e9e \u00e0 la valeur du ilieu de la liste. Si la valeur recherch\u00e9e est inf\u00e9rieure \u00e0 la moiti\u00e9, on fait la meme recherche avec le demi tableau inf\u00e9rieur, etc ... exemple 1: exemple2: Algorithme : Impl\u00e9menter l'algorithme pr\u00e9c\u00e9dent et faites le test avec : t = [5, 7, 12, 14, 23, 27, 35, 40, 41, 45] et x = 9 puis avec des valeurs figurant dans le tableau. Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC","title":"Recherche dicothomique"},{"location":"algorithmie/corrections_glouton/corr_dist.html","text":"Correction du petit exemple \u2693\ufe0e Il y a 4X3x2x1/2 trajets possibles (soit 12 trajets car on ne tient pas compte de Limoges Lyon Paris Toulouse et Toulouse paris Lyon Limoges puisque c'est la m\u00eame distance)","title":"Correction du petit exemple"},{"location":"algorithmie/corrections_glouton/corr_dist.html#correction-du-petit-exemple","text":"Il y a 4X3x2x1/2 trajets possibles (soit 12 trajets car on ne tient pas compte de Limoges Lyon Paris Toulouse et Toulouse paris Lyon Limoges puisque c'est la m\u00eame distance)","title":"Correction du petit exemple"},{"location":"archi/OS/OS.html","text":"Les syst\u00e8mes d'exploitation \u2693\ufe0e Rep\u00e8res historiques \u2693\ufe0e A quoi sert un OS ? \u2693\ufe0e Visionner la vid\u00e9o ci-dessous : Un syst\u00e8me d'exploitation, souvent appel\u00e9 OS est un logiciel qui permet \u00e0 l'utilisateur d'acc\u00e9der aux ressousrces d'un ordinateurs et aux p\u00e9riph\u00e9riques. Il est le chef d'orchestre des programmes en d\u00e9finissant les acc\u00e8s aux p\u00e9riph\u00e9riques et \u00e0 la m\u00e9moire et l'ordre des op\u00e9rations \u00e0 effectuer. Questions 1.Que signifie OS? 2.Citer les OS que vous connaissez. 3.Quels sont les services rendus par un OS? Libre, propri\u00e9taire ou gratuit \u2693\ufe0e D'apr\u00e8s la Free Software fondation , un logiciel libre (free software) d\u00e9signe un logiciel qui rspecte la libert\u00e9 des utilisateurs. Ceux-ci ont la libert\u00e9 d'ex\u00e9cuter, de copier, de distribuer, d'\u00e9tudier, de modifier et enfin d'am\u00e9liorer ce logiciel. Ainsi \"logiciel libre\" fait r\u00e9f\u00e9rence \u00e0 la \"libert\u00e9 d'expression\". Un logiciel propri\u00e9taire est un logiciel qui est la propri\u00e9t\u00e9 exclusive de la soci\u00e9t\u00e9 qui l'a con\u00e7uet qui le commercialise. Celui-ci est distribu\u00e9 uniquement en version \"ex\u00e9cutable\", alors que les logiciels libres ont un \"code source\" enti\u00e8rement accessible. Quesions 4.Chercher des noms de logiciels libres. 5.Une application comme Sapchat sur smartphone est gratuite. Est-elle n\u00e9cessairement libre? Histoire de UNIX \u2693\ufe0e Le syst\u00e8me UNIX est un syst\u00e8me dit \"propri\u00e9taire\" (certaines personnes disent \"privateur\"), c'est-\u00e0-dire un syst\u00e8me non libre. Mais plus g\u00e9n\u00e9ralement, qu'est-ce qu'un logiciel libre ? D'apr\u00e8s Wikip\u00e9dia : \"Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et l\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus\". Le syst\u00e8me UNIX ne respecte pas ces droits (par exemple le code source d'UNIX n'est pas disponible, l'\u00e9tude d'UNIX est donc impossible), UNIX est donc un syst\u00e8me \"propri\u00e9taire\" (le contraire de \"libre\"). Attention qui dit logiciel libre ne veut pas forcement dire logiciel gratuit (m\u00eame si c'est souvent le cas), la confusion entre \"libre\" et \"gratuit\" vient de l'anglais puisque \"free\" veut \u00e0 la fois dire \"libre\", mais aussi gratuit. Questions 6.Citer des logiciels libres que vous connaissez. 7.Parmis les OS cit\u00e9s dans la premi\u00e8re partie, lesquels sont libres? Lesquels sont gratuits?. 8.Quelle est la cons\u00e9quence du statut propri\u00e9taire de Windows? Et les autres \u2693\ufe0e Microsoft a \u00e9t\u00e9 cr\u00e9\u00e9e par Bill Gates et Paul Allen en 1975. Microsoft est surtout connue pour son syst\u00e8me d'exploitation Windows. Windows est un syst\u00e8me d'exploitation \"propri\u00e9taire\", la premi\u00e8re version de Windows date 1983, mais \u00e0 cette date Windows n'est qu'un ajout sur un autre syst\u00e8me d'exploitation nomm\u00e9 MS-DOS. Aujourd'hui Windows reste le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde sur les ordinateurs grand public. Enfin pour terminer, quelques mots sur le syst\u00e8me d'exploitation des ordinateurs de marque Apple : tous les ordinateurs d'Apple sont livr\u00e9s avec le syst\u00e8me d'exploitation macOS. Ce syst\u00e8me macOS est un syst\u00e8me d'exploitation UNIX, c'est donc un syst\u00e8me d'exploitation propri\u00e9taire. Questions 9.O\u00f9 retrouve-t-on presque syst\u00e9matiquement un OS linux? 10.Pourquoi ces objets ci-dessous necessitent-ls tous un syst\u00e8me d'exploitation","title":"Syst\u00e8mes d'exploitation"},{"location":"archi/OS/OS.html#les-systemes-dexploitation","text":"","title":"Les syst\u00e8mes d'exploitation"},{"location":"archi/OS/OS.html#reperes-historiques","text":"","title":"Rep\u00e8res historiques"},{"location":"archi/OS/OS.html#a-quoi-sert-un-os","text":"Visionner la vid\u00e9o ci-dessous : Un syst\u00e8me d'exploitation, souvent appel\u00e9 OS est un logiciel qui permet \u00e0 l'utilisateur d'acc\u00e9der aux ressousrces d'un ordinateurs et aux p\u00e9riph\u00e9riques. Il est le chef d'orchestre des programmes en d\u00e9finissant les acc\u00e8s aux p\u00e9riph\u00e9riques et \u00e0 la m\u00e9moire et l'ordre des op\u00e9rations \u00e0 effectuer. Questions 1.Que signifie OS? 2.Citer les OS que vous connaissez. 3.Quels sont les services rendus par un OS?","title":"A quoi sert un OS ?"},{"location":"archi/OS/OS.html#libre-proprietaire-ou-gratuit","text":"D'apr\u00e8s la Free Software fondation , un logiciel libre (free software) d\u00e9signe un logiciel qui rspecte la libert\u00e9 des utilisateurs. Ceux-ci ont la libert\u00e9 d'ex\u00e9cuter, de copier, de distribuer, d'\u00e9tudier, de modifier et enfin d'am\u00e9liorer ce logiciel. Ainsi \"logiciel libre\" fait r\u00e9f\u00e9rence \u00e0 la \"libert\u00e9 d'expression\". Un logiciel propri\u00e9taire est un logiciel qui est la propri\u00e9t\u00e9 exclusive de la soci\u00e9t\u00e9 qui l'a con\u00e7uet qui le commercialise. Celui-ci est distribu\u00e9 uniquement en version \"ex\u00e9cutable\", alors que les logiciels libres ont un \"code source\" enti\u00e8rement accessible. Quesions 4.Chercher des noms de logiciels libres. 5.Une application comme Sapchat sur smartphone est gratuite. Est-elle n\u00e9cessairement libre?","title":"Libre, propri\u00e9taire ou gratuit"},{"location":"archi/OS/OS.html#histoire-de-unix","text":"Le syst\u00e8me UNIX est un syst\u00e8me dit \"propri\u00e9taire\" (certaines personnes disent \"privateur\"), c'est-\u00e0-dire un syst\u00e8me non libre. Mais plus g\u00e9n\u00e9ralement, qu'est-ce qu'un logiciel libre ? D'apr\u00e8s Wikip\u00e9dia : \"Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et l\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus\". Le syst\u00e8me UNIX ne respecte pas ces droits (par exemple le code source d'UNIX n'est pas disponible, l'\u00e9tude d'UNIX est donc impossible), UNIX est donc un syst\u00e8me \"propri\u00e9taire\" (le contraire de \"libre\"). Attention qui dit logiciel libre ne veut pas forcement dire logiciel gratuit (m\u00eame si c'est souvent le cas), la confusion entre \"libre\" et \"gratuit\" vient de l'anglais puisque \"free\" veut \u00e0 la fois dire \"libre\", mais aussi gratuit. Questions 6.Citer des logiciels libres que vous connaissez. 7.Parmis les OS cit\u00e9s dans la premi\u00e8re partie, lesquels sont libres? Lesquels sont gratuits?. 8.Quelle est la cons\u00e9quence du statut propri\u00e9taire de Windows?","title":"Histoire de UNIX"},{"location":"archi/OS/OS.html#et-les-autres","text":"Microsoft a \u00e9t\u00e9 cr\u00e9\u00e9e par Bill Gates et Paul Allen en 1975. Microsoft est surtout connue pour son syst\u00e8me d'exploitation Windows. Windows est un syst\u00e8me d'exploitation \"propri\u00e9taire\", la premi\u00e8re version de Windows date 1983, mais \u00e0 cette date Windows n'est qu'un ajout sur un autre syst\u00e8me d'exploitation nomm\u00e9 MS-DOS. Aujourd'hui Windows reste le syst\u00e8me d'exploitation le plus utilis\u00e9 au monde sur les ordinateurs grand public. Enfin pour terminer, quelques mots sur le syst\u00e8me d'exploitation des ordinateurs de marque Apple : tous les ordinateurs d'Apple sont livr\u00e9s avec le syst\u00e8me d'exploitation macOS. Ce syst\u00e8me macOS est un syst\u00e8me d'exploitation UNIX, c'est donc un syst\u00e8me d'exploitation propri\u00e9taire. Questions 9.O\u00f9 retrouve-t-on presque syst\u00e9matiquement un OS linux? 10.Pourquoi ces objets ci-dessous necessitent-ls tous un syst\u00e8me d'exploitation","title":"Et les autres"},{"location":"archi/OS/assembleur.html","text":"L'ASSEMBLEUR \u2693\ufe0e Avant de commencer cette activit\u00e9, assurez-vous d'avoir fait celle sur la logique combinatoire Le processeur et la m\u00e9moire \u2693\ufe0e Les ordinateurs plus modernes, sont principalement compos\u00e9s de deux grands circuits : le processeur et la m\u00e9moire. Ces deux circuits sont reli\u00e9s entre eux par des fils qui constituent un ou plusieurs bus de communication, parmi lesquels un bus de donn\u00e9es et un bus d'adresses. Le processeur est compos\u00e9 de deux unit\u00e9s. L'unit\u00e9 de contr\u00f4le lit en m\u00e9moire un programme et donne \u00e0 l'unit\u00e9 de calcul la s\u00e9quence des instructions \u00e0 effectuer. Le processeur dispose par ailleurs de bus d'entr\u00e9es et de sorties permettant d'acc\u00e9der aux autres parties de l'ordinateur, que l'on nomme les p\u00e9riph\u00e9riques (clavier, \u00e9cran, souris, disques....). Cette organisation g\u00e9n\u00e9rale, l'architecture de Von Neumann, est \u00e9tonnamment stable depuis les ann\u00e9es quarante. La m\u00e9moire est compos\u00e9e de plusieurs milliards de circuits m\u00e9moires de un bit. Ces circuits sont organis\u00e9s en agr\u00e9gats de huit, seize, trente deux, soixante quatre bits, et parfois davantage, que l'on appelle des cases m\u00e9moires, et qui peuvent donc m\u00e9moriser des mots de huit, seize, trente deux, soixante quatre bits, etc. Le nombre de ces cases d\u00e9finit la taille de la m\u00e9moire de l'ordinateur. Comme il faut distinguer ces cases les unes des autres, on donne \u00e0 chacune un num\u00e9ro : son adresse. La m\u00e9moire contient les donn\u00e9es sur lesquelles on calcule et le programme qui d\u00e9crit le calcul effectu\u00e9, donn\u00e9 sous la forme d'un ensemble d'instructions. Le processeur de son c\u00f4t\u00e9 n'a qu'un tr\u00e8s petit nombre de cases m\u00e9moires que l'on appelle des registres. Les registres peuvent contenir des donn\u00e9es, mais aussi des adresses de cases m\u00e9moire. Lorsque l'on parle de processeurs 32 bits ou 64 bits, on fait r\u00e9f\u00e9rence \u00e0 la taille de ces registres. Le langage machine n'\u00e9tant pas facile \u00e0 manipuler, on a con\u00e7u des langages plus facile \u00e0 utiliser par l'homme (C, java, \u2026) . Un compilateur traduit ensuite le programme en langage machine. Extrait de Informatique et sciences du num\u00e9rique de Gilles Dowek Langage Assembleur \u2693\ufe0e Toutes les instructions trait\u00e9es par le CPU sont cod\u00e9es en binaire. C'est le langage machine. Indigeste et tr\u00e8s complexe \u00e0 lire. L'assembleur est un langage assez proche du langage machine mais compr\u00e9hensible par un \u00eatre humain. Nous allons donc utiliser le langage assembleur dans la suite de l'activit\u00e9. Toutes les instructions sont \u00e9crites de la m\u00eame fa\u00e7on : le champ \"code op\u00e9ration\" qui indique au processeur le type de traitement \u00e0 r\u00e9aliser. Par exemple le code \"00100110\" donne l'ordre au CPU d'effectuer une multiplication. le champ \"op\u00e9randes\" indique la nature des donn\u00e9es sur lesquelles l'op\u00e9ration d\u00e9sign\u00e9e par le \"code op\u00e9ration\" doit \u00eatre effectu\u00e9e. Les instructions machines sont relativement basiques (on parle d'instructions de bas niveau), voici quelques exemples : les instructions arithm\u00e9tiques (addition, soustraction, multiplication...). Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"additionne la valeur contenue dans le registre R1 et le nombre 789 et range le r\u00e9sultat dans le registre R0\" (l'adresse m\u00e9moire est donn\u00e9e en base 10 pour souci de simplicit\u00e9, n'oubliez pas qu'en interne elle est cod\u00e9e en binaire) les instructions de transfert de donn\u00e9es qui permettent de transf\u00e9rer une donn\u00e9e d'un registre du CPU vers la m\u00e9moire vive et vice versa. Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"prendre la valeur situ\u00e9e \u00e0 l'adresse m\u00e9moire 487 et la placer dans la registre R2\" ou encore \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\" les instructions de rupture de s\u00e9quence : les instructions machines sont situ\u00e9es en m\u00e9moire vive, si, par exemple, l'instruction n\u00b01 est situ\u00e9e \u00e0 l'adresse m\u00e9moire 343, l'instruction n\u00b02 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 344, l'instruction n\u00b03 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 345... Au cours de l'ex\u00e9cution d'un programme, le CPU passe d'une instruction \u00e0 une autre en passant d'une adresse m\u00e9moire \u00e0 l'adresse m\u00e9moire imm\u00e9diatement sup\u00e9rieure : apr\u00e8s avoir ex\u00e9cut\u00e9 l'instruction n\u00b02 (situ\u00e9 \u00e0 l'adresse m\u00e9moire 344), le CPU \"va chercher\" l'instruction suivante \u00e0 l'adresse m\u00e9moire 344+1=345. Les instructions de rupture de s\u00e9quence d'ex\u00e9cution encore appel\u00e9es instructions de saut ou de branchement permettent d'interrompre l'ordre initial sous certaines conditions en passant \u00e0 une instruction situ\u00e9e une adresse m\u00e9moire donn\u00e9e, par exemple, nous pouvons avoir une instruction qui ressemble \u00e0 cela : imaginons qu'\u00e0 l'adresse m\u00e9moire 354 nous avons l'instruction \"si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors ex\u00e9cuter l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 4521\". Si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors la prochaine instruction \u00e0 ex\u00e9cuter est l'adresse m\u00e9moire 4521, dans le contraire, la prochaine instruction \u00e0 ex\u00e9cuter est \u00e0 l'adresse m\u00e9moire 355. Comme d\u00e9j\u00e0 dit, les op\u00e9randes d\u00e9signent les donn\u00e9es sur lesquelles le code op\u00e9ration de l'instruction doit \u00eatre r\u00e9alis\u00e9e. Un op\u00e9rande peut \u00eatre de 3 natures diff\u00e9rentes : l'op\u00e9rande est une valeur imm\u00e9diate : l'op\u00e9ration est effectu\u00e9e directement sur la valeur donn\u00e9e dans l'op\u00e9rande l'op\u00e9rande est un registre du CPU : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e dans un des registres (R0,R1, R2,...), l'op\u00e9rande indique de quel registre il s'agit l'op\u00e9rande est une donn\u00e9e situ\u00e9e en m\u00e9moire vive : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e en m\u00e9moire vive \u00e0 l'adresse XXXXX. Cette adresse est indiqu\u00e9e dans l'op\u00e9rande. Exemples Quand on consid\u00e8re l'instruction machine : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", nous avons 2 valeurs : le \"nombre 125\" (qui est une valeur imm\u00e9diate, nous sommes dans le cas n\u00b01) et \"la valeur situ\u00e9e dans le registre R2\" (nous sommes dans le cas n\u00b02) Quand on consid\u00e8re l'instruction machine : \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\", nous avons 2 valeurs : \"\u00e0 l'adresse m\u00e9moire 512\" (nous sommes dans le cas n\u00b03) et \"la valeur situ\u00e9e dans le registre R1\" (nous sommes toujours dans le cas n\u00b02). Simulateur \u2693\ufe0e Ouvrir le simulateur de langage assembleur RISC . Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur : \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\") au centre, on trouve le microprocesseur \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur A faire 1.Saisir le programme suivant dans la partie d'\u00e9dition Pour d\u00e9marrer le programme il suffit de cliquer sur SUBMIT puis RUN et le regarder travailler. On peut voir qu'\u00e0 l'\u00e9xecution de ce programme, il charge bien la valeur 42 dans le registre R0 puis le stocke en m\u00e9moire \u00e0 l'adresse 150. ATTENTION Pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton \"RESET\" afin de remettre les registres R0 \u00e0 R12 \u00e0 0, ainsi que le registre PC (il faut que l'unit\u00e9 de commande pointe de nouveau sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000). La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton \"RESET\", pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton \"OPTIONS\" et choisir \"clr memory\". Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme. On peut mettre des commentaires en ajoutant / \u00e0 la fin de la ligne puis le commentaire : MOV R0,#42 / ajoute 42 au registre R0 Quelques exemples d'instructions \u2693\ufe0e 1 LDR R1,78 Place la valeur stock\u00e9e \u00e0 l'adresse m\u00e9moire 78 dans le registre R1 (par souci de simplification, nous continuons \u00e0 utiliser des adresses m\u00e9moire cod\u00e9es en base 10) 1 STR R3,125 Place la valeur stock\u00e9e dans le registre R3 en m\u00e9moire vive \u00e0 l'adresse 125 1 ADD R1,R0,#128 Additionne le nombre 128 (une valeur imm\u00e9diate est identifi\u00e9e gr\u00e2ce au symbole #) et la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1 1 ADD R0,R1,R2 Additionne la valeur stock\u00e9e dans le registre R1 et la valeur stock\u00e9e dans le registre R2, place le r\u00e9sultat dans le registre R0 1 SUB R1,R0,#128 Soustrait le nombre 128 de la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1 1 SUB R0,R1,R2 Soustrait la valeur stock\u00e9e dans le registre R2 de la valeur stock\u00e9e dans le registre R1, place le r\u00e9sultat dans le registre R0 1 MOV R1, #23 Place le nombre 23 dans le registre R1 1 MOV R0, R3 Place la valeur stock\u00e9e dans le registre R3 dans le registre R0 A faire 2.Modifiez le premier programme pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place du registre R0. Testez vos modifications en ex\u00e9cutant la simulation. 3.Entrer la s\u00e9rie d'instructions suivante et dire ce qu'elle fait. Rupture de s\u00e9quences (branchements) \u2693\ufe0e Le code peut ne pas s'\u00e9x\u00e9cuter de mani\u00e8re lin\u00e9aire, mais se \"brancher\" \u00e0 un autre endroit de la m\u00e9moire. Vous ne pourrez pas tester directement ce qui suit mais lisez attentivement. 1 B 45 Nous avons une structure de rupture de s\u00e9quence, la prochaine instruction \u00e0 ex\u00e9cuter se situe en m\u00e9moire vive \u00e0 l'adresse 45 1 CMP R0, #23 Compare la valeur stock\u00e9e dans le registre R0 et le nombre 23. Cette instruction CMP doit pr\u00e9c\u00e9der une instruction de branchement conditionnel BEQ, BNE, BGT, BLT (voir ci-dessous) 1 CMP R0, R1 Compare la valeur stock\u00e9e dans le registre R0 et la valeur stock\u00e9e dans le registre R1. 1 2 CMP R0, #23 BEQ 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 (on utilisera des labels pour aller chercher le programme \u00e0 \u00e9x\u00e9cuter) si la valeur stock\u00e9e dans le registre R0 est \u00e9gale \u00e0 23 1 2 CMP R0, #23 BNE 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 n'est pas \u00e9gale \u00e0 23 1 2 CMP R0, #23 BGT 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus grand que 23 1 2 CMP R0, #23 BLT 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus petit que 23 1 HALT Arr\u00eate l'ex\u00e9cution du programme r\u00e9capitulatif des instructions de base Utilisation des labels \u2693\ufe0e En fait, les instructions assembleur B, BEQ, BNE, BGT et BLT n'utilisent pas directement l'adresse m\u00e9moire de la prochaine instruction \u00e0 ex\u00e9cuter, mais des \"labels\". Un label correspond \u00e0 une adresse en m\u00e9moire vive (c'est l'assembleur qui fera la traduction \"label\"->\"adresse m\u00e9moire\"). L'utilisation d'un label \u00e9vite donc d'avoir \u00e0 manipuler des adresses m\u00e9moires en binaire ou en hexad\u00e9cimale. Voici un exemple qui montre comment utiliser un label : 1 2 3 4 5 6 7 CMP R4, #18 BGT monLabel MOV R0,#14 HALT monLabel: MOV R0,#18 HALT Dans l'exemple ci-dessus, nous avons choisi \"monLabel\" comme nom de label. La ligne `MOV R0,#18 ` a pour label \"monLabel\" car elle est situ\u00e9e juste apr\u00e8s la ligne \"monLabel:\". Concr\u00e8tement, voici ce qui se passe avec ce programme : si la valeur stock\u00e9e dans le registre R4 est sup\u00e9rieure \u00e0 18 on place le nombre 18 dans le registre R0 sinon on place le nombre 14 dans le registre R0. Warning Il ne faut pas mettre d'espace avant les ':' sinon le programme ne comprend pas que c'est un label. ATTENTION La pr\u00e9sence du \"HALT\" juste apr\u00e8s la ligne \"MOV R0,#14\" est indispensable, car sinon, la ligne \"MOV R0,#18\" sera aussi ex\u00e9cut\u00e9e (m\u00eame si la valeur stock\u00e9e dans le registre R4 est inf\u00e9rieure \u00e0 18). A faire 4.Faites en sorte que dans la m\u00e9moire 100, il y ait le r\u00e9sultat de la somme de 42 et 54. On peut \u00e9galement faire des boucles en assembleur. Le programme ci-contre compare deux valeur et se \"branche\" sur une autre partie du programme selon le r\u00e9sultat de la comparaison. BNE nonegal va ex\u00e9cuter la partie du programme \u00e0 partir du lable 'nonegal' si la comparaison n'est pas \u00e9gale. En revanche, si c'est \u00e9gal (BEQ : Branch if Equal) le programme continue au label correspondant, ici 'egal'. Les labels peuvent \u00eatre choisis comme on veut. A faire 5.Compl\u00e9ter le code assembleur pour qu'il traduise le programme python. Tester le...","title":"Assembleur"},{"location":"archi/OS/assembleur.html#lassembleur","text":"Avant de commencer cette activit\u00e9, assurez-vous d'avoir fait celle sur la logique combinatoire","title":"L'ASSEMBLEUR"},{"location":"archi/OS/assembleur.html#le-processeur-et-la-memoire","text":"Les ordinateurs plus modernes, sont principalement compos\u00e9s de deux grands circuits : le processeur et la m\u00e9moire. Ces deux circuits sont reli\u00e9s entre eux par des fils qui constituent un ou plusieurs bus de communication, parmi lesquels un bus de donn\u00e9es et un bus d'adresses. Le processeur est compos\u00e9 de deux unit\u00e9s. L'unit\u00e9 de contr\u00f4le lit en m\u00e9moire un programme et donne \u00e0 l'unit\u00e9 de calcul la s\u00e9quence des instructions \u00e0 effectuer. Le processeur dispose par ailleurs de bus d'entr\u00e9es et de sorties permettant d'acc\u00e9der aux autres parties de l'ordinateur, que l'on nomme les p\u00e9riph\u00e9riques (clavier, \u00e9cran, souris, disques....). Cette organisation g\u00e9n\u00e9rale, l'architecture de Von Neumann, est \u00e9tonnamment stable depuis les ann\u00e9es quarante. La m\u00e9moire est compos\u00e9e de plusieurs milliards de circuits m\u00e9moires de un bit. Ces circuits sont organis\u00e9s en agr\u00e9gats de huit, seize, trente deux, soixante quatre bits, et parfois davantage, que l'on appelle des cases m\u00e9moires, et qui peuvent donc m\u00e9moriser des mots de huit, seize, trente deux, soixante quatre bits, etc. Le nombre de ces cases d\u00e9finit la taille de la m\u00e9moire de l'ordinateur. Comme il faut distinguer ces cases les unes des autres, on donne \u00e0 chacune un num\u00e9ro : son adresse. La m\u00e9moire contient les donn\u00e9es sur lesquelles on calcule et le programme qui d\u00e9crit le calcul effectu\u00e9, donn\u00e9 sous la forme d'un ensemble d'instructions. Le processeur de son c\u00f4t\u00e9 n'a qu'un tr\u00e8s petit nombre de cases m\u00e9moires que l'on appelle des registres. Les registres peuvent contenir des donn\u00e9es, mais aussi des adresses de cases m\u00e9moire. Lorsque l'on parle de processeurs 32 bits ou 64 bits, on fait r\u00e9f\u00e9rence \u00e0 la taille de ces registres. Le langage machine n'\u00e9tant pas facile \u00e0 manipuler, on a con\u00e7u des langages plus facile \u00e0 utiliser par l'homme (C, java, \u2026) . Un compilateur traduit ensuite le programme en langage machine. Extrait de Informatique et sciences du num\u00e9rique de Gilles Dowek","title":"Le processeur et la m\u00e9moire"},{"location":"archi/OS/assembleur.html#langage-assembleur","text":"Toutes les instructions trait\u00e9es par le CPU sont cod\u00e9es en binaire. C'est le langage machine. Indigeste et tr\u00e8s complexe \u00e0 lire. L'assembleur est un langage assez proche du langage machine mais compr\u00e9hensible par un \u00eatre humain. Nous allons donc utiliser le langage assembleur dans la suite de l'activit\u00e9. Toutes les instructions sont \u00e9crites de la m\u00eame fa\u00e7on : le champ \"code op\u00e9ration\" qui indique au processeur le type de traitement \u00e0 r\u00e9aliser. Par exemple le code \"00100110\" donne l'ordre au CPU d'effectuer une multiplication. le champ \"op\u00e9randes\" indique la nature des donn\u00e9es sur lesquelles l'op\u00e9ration d\u00e9sign\u00e9e par le \"code op\u00e9ration\" doit \u00eatre effectu\u00e9e. Les instructions machines sont relativement basiques (on parle d'instructions de bas niveau), voici quelques exemples : les instructions arithm\u00e9tiques (addition, soustraction, multiplication...). Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"additionne la valeur contenue dans le registre R1 et le nombre 789 et range le r\u00e9sultat dans le registre R0\" (l'adresse m\u00e9moire est donn\u00e9e en base 10 pour souci de simplicit\u00e9, n'oubliez pas qu'en interne elle est cod\u00e9e en binaire) les instructions de transfert de donn\u00e9es qui permettent de transf\u00e9rer une donn\u00e9e d'un registre du CPU vers la m\u00e9moire vive et vice versa. Par exemple, on peut avoir une instruction qui ressemble \u00e0 \"prendre la valeur situ\u00e9e \u00e0 l'adresse m\u00e9moire 487 et la placer dans la registre R2\" ou encore \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\" les instructions de rupture de s\u00e9quence : les instructions machines sont situ\u00e9es en m\u00e9moire vive, si, par exemple, l'instruction n\u00b01 est situ\u00e9e \u00e0 l'adresse m\u00e9moire 343, l'instruction n\u00b02 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 344, l'instruction n\u00b03 sera situ\u00e9e \u00e0 l'adresse m\u00e9moire 345... Au cours de l'ex\u00e9cution d'un programme, le CPU passe d'une instruction \u00e0 une autre en passant d'une adresse m\u00e9moire \u00e0 l'adresse m\u00e9moire imm\u00e9diatement sup\u00e9rieure : apr\u00e8s avoir ex\u00e9cut\u00e9 l'instruction n\u00b02 (situ\u00e9 \u00e0 l'adresse m\u00e9moire 344), le CPU \"va chercher\" l'instruction suivante \u00e0 l'adresse m\u00e9moire 344+1=345. Les instructions de rupture de s\u00e9quence d'ex\u00e9cution encore appel\u00e9es instructions de saut ou de branchement permettent d'interrompre l'ordre initial sous certaines conditions en passant \u00e0 une instruction situ\u00e9e une adresse m\u00e9moire donn\u00e9e, par exemple, nous pouvons avoir une instruction qui ressemble \u00e0 cela : imaginons qu'\u00e0 l'adresse m\u00e9moire 354 nous avons l'instruction \"si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors ex\u00e9cuter l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 4521\". Si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors la prochaine instruction \u00e0 ex\u00e9cuter est l'adresse m\u00e9moire 4521, dans le contraire, la prochaine instruction \u00e0 ex\u00e9cuter est \u00e0 l'adresse m\u00e9moire 355. Comme d\u00e9j\u00e0 dit, les op\u00e9randes d\u00e9signent les donn\u00e9es sur lesquelles le code op\u00e9ration de l'instruction doit \u00eatre r\u00e9alis\u00e9e. Un op\u00e9rande peut \u00eatre de 3 natures diff\u00e9rentes : l'op\u00e9rande est une valeur imm\u00e9diate : l'op\u00e9ration est effectu\u00e9e directement sur la valeur donn\u00e9e dans l'op\u00e9rande l'op\u00e9rande est un registre du CPU : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e dans un des registres (R0,R1, R2,...), l'op\u00e9rande indique de quel registre il s'agit l'op\u00e9rande est une donn\u00e9e situ\u00e9e en m\u00e9moire vive : l'op\u00e9ration est effectu\u00e9e sur la valeur situ\u00e9e en m\u00e9moire vive \u00e0 l'adresse XXXXX. Cette adresse est indiqu\u00e9e dans l'op\u00e9rande. Exemples Quand on consid\u00e8re l'instruction machine : \"additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1\", nous avons 2 valeurs : le \"nombre 125\" (qui est une valeur imm\u00e9diate, nous sommes dans le cas n\u00b01) et \"la valeur situ\u00e9e dans le registre R2\" (nous sommes dans le cas n\u00b02) Quand on consid\u00e8re l'instruction machine : \"prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l'adresse m\u00e9moire 512\", nous avons 2 valeurs : \"\u00e0 l'adresse m\u00e9moire 512\" (nous sommes dans le cas n\u00b03) et \"la valeur situ\u00e9e dans le registre R1\" (nous sommes toujours dans le cas n\u00b02).","title":"Langage Assembleur"},{"location":"archi/OS/assembleur.html#simulateur","text":"Ouvrir le simulateur de langage assembleur RISC . Il est relativement facile de distinguer les diff\u00e9rentes parties du simulateur : \u00e0 droite, on trouve la m\u00e9moire vive (\"main memory\") au centre, on trouve le microprocesseur \u00e0 gauche on trouve la zone d'\u00e9dition (\"Assembly Language\"), c'est dans cette zone que nous allons saisir nos programmes en assembleur A faire 1.Saisir le programme suivant dans la partie d'\u00e9dition Pour d\u00e9marrer le programme il suffit de cliquer sur SUBMIT puis RUN et le regarder travailler. On peut voir qu'\u00e0 l'\u00e9xecution de ce programme, il charge bien la valeur 42 dans le registre R0 puis le stocke en m\u00e9moire \u00e0 l'adresse 150. ATTENTION Pour relancer la simulation, il est n\u00e9cessaire d'appuyer sur le bouton \"RESET\" afin de remettre les registres R0 \u00e0 R12 \u00e0 0, ainsi que le registre PC (il faut que l'unit\u00e9 de commande pointe de nouveau sur l'instruction situ\u00e9e \u00e0 l'adresse m\u00e9moire 000). La m\u00e9moire n'est pas modifi\u00e9e par un appui sur le bouton \"RESET\", pour remettre la m\u00e9moire \u00e0 0, il faut cliquer sur le bouton \"OPTIONS\" et choisir \"clr memory\". Si vous remettez votre m\u00e9moire \u00e0 0, il faudra cliquer sur le bouton \"ASSEMBLE\" avant de pouvoir ex\u00e9cuter de nouveau votre programme. On peut mettre des commentaires en ajoutant / \u00e0 la fin de la ligne puis le commentaire : MOV R0,#42 / ajoute 42 au registre R0","title":"Simulateur"},{"location":"archi/OS/assembleur.html#quelques-exemples-dinstructions","text":"1 LDR R1,78 Place la valeur stock\u00e9e \u00e0 l'adresse m\u00e9moire 78 dans le registre R1 (par souci de simplification, nous continuons \u00e0 utiliser des adresses m\u00e9moire cod\u00e9es en base 10) 1 STR R3,125 Place la valeur stock\u00e9e dans le registre R3 en m\u00e9moire vive \u00e0 l'adresse 125 1 ADD R1,R0,#128 Additionne le nombre 128 (une valeur imm\u00e9diate est identifi\u00e9e gr\u00e2ce au symbole #) et la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1 1 ADD R0,R1,R2 Additionne la valeur stock\u00e9e dans le registre R1 et la valeur stock\u00e9e dans le registre R2, place le r\u00e9sultat dans le registre R0 1 SUB R1,R0,#128 Soustrait le nombre 128 de la valeur stock\u00e9e dans le registre R0, place le r\u00e9sultat dans le registre R1 1 SUB R0,R1,R2 Soustrait la valeur stock\u00e9e dans le registre R2 de la valeur stock\u00e9e dans le registre R1, place le r\u00e9sultat dans le registre R0 1 MOV R1, #23 Place le nombre 23 dans le registre R1 1 MOV R0, R3 Place la valeur stock\u00e9e dans le registre R3 dans le registre R0 A faire 2.Modifiez le premier programme pour qu'\u00e0 la fin de l'ex\u00e9cution on trouve le nombre 54 \u00e0 l'adresse m\u00e9moire 50. On utilisera le registre R1 \u00e0 la place du registre R0. Testez vos modifications en ex\u00e9cutant la simulation. 3.Entrer la s\u00e9rie d'instructions suivante et dire ce qu'elle fait.","title":"Quelques exemples d'instructions"},{"location":"archi/OS/assembleur.html#rupture-de-sequences-branchements","text":"Le code peut ne pas s'\u00e9x\u00e9cuter de mani\u00e8re lin\u00e9aire, mais se \"brancher\" \u00e0 un autre endroit de la m\u00e9moire. Vous ne pourrez pas tester directement ce qui suit mais lisez attentivement. 1 B 45 Nous avons une structure de rupture de s\u00e9quence, la prochaine instruction \u00e0 ex\u00e9cuter se situe en m\u00e9moire vive \u00e0 l'adresse 45 1 CMP R0, #23 Compare la valeur stock\u00e9e dans le registre R0 et le nombre 23. Cette instruction CMP doit pr\u00e9c\u00e9der une instruction de branchement conditionnel BEQ, BNE, BGT, BLT (voir ci-dessous) 1 CMP R0, R1 Compare la valeur stock\u00e9e dans le registre R0 et la valeur stock\u00e9e dans le registre R1. 1 2 CMP R0, #23 BEQ 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 (on utilisera des labels pour aller chercher le programme \u00e0 \u00e9x\u00e9cuter) si la valeur stock\u00e9e dans le registre R0 est \u00e9gale \u00e0 23 1 2 CMP R0, #23 BNE 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 n'est pas \u00e9gale \u00e0 23 1 2 CMP R0, #23 BGT 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus grand que 23 1 2 CMP R0, #23 BLT 78 La prochaine instruction \u00e0 ex\u00e9cuter se situe \u00e0 l'adresse m\u00e9moire 78 si la valeur stock\u00e9e dans le registre R0 est plus petit que 23 1 HALT Arr\u00eate l'ex\u00e9cution du programme r\u00e9capitulatif des instructions de base","title":"Rupture de s\u00e9quences (branchements)"},{"location":"archi/OS/assembleur.html#utilisation-des-labels","text":"En fait, les instructions assembleur B, BEQ, BNE, BGT et BLT n'utilisent pas directement l'adresse m\u00e9moire de la prochaine instruction \u00e0 ex\u00e9cuter, mais des \"labels\". Un label correspond \u00e0 une adresse en m\u00e9moire vive (c'est l'assembleur qui fera la traduction \"label\"->\"adresse m\u00e9moire\"). L'utilisation d'un label \u00e9vite donc d'avoir \u00e0 manipuler des adresses m\u00e9moires en binaire ou en hexad\u00e9cimale. Voici un exemple qui montre comment utiliser un label : 1 2 3 4 5 6 7 CMP R4, #18 BGT monLabel MOV R0,#14 HALT monLabel: MOV R0,#18 HALT Dans l'exemple ci-dessus, nous avons choisi \"monLabel\" comme nom de label. La ligne `MOV R0,#18 ` a pour label \"monLabel\" car elle est situ\u00e9e juste apr\u00e8s la ligne \"monLabel:\". Concr\u00e8tement, voici ce qui se passe avec ce programme : si la valeur stock\u00e9e dans le registre R4 est sup\u00e9rieure \u00e0 18 on place le nombre 18 dans le registre R0 sinon on place le nombre 14 dans le registre R0. Warning Il ne faut pas mettre d'espace avant les ':' sinon le programme ne comprend pas que c'est un label. ATTENTION La pr\u00e9sence du \"HALT\" juste apr\u00e8s la ligne \"MOV R0,#14\" est indispensable, car sinon, la ligne \"MOV R0,#18\" sera aussi ex\u00e9cut\u00e9e (m\u00eame si la valeur stock\u00e9e dans le registre R4 est inf\u00e9rieure \u00e0 18). A faire 4.Faites en sorte que dans la m\u00e9moire 100, il y ait le r\u00e9sultat de la somme de 42 et 54. On peut \u00e9galement faire des boucles en assembleur. Le programme ci-contre compare deux valeur et se \"branche\" sur une autre partie du programme selon le r\u00e9sultat de la comparaison. BNE nonegal va ex\u00e9cuter la partie du programme \u00e0 partir du lable 'nonegal' si la comparaison n'est pas \u00e9gale. En revanche, si c'est \u00e9gal (BEQ : Branch if Equal) le programme continue au label correspondant, ici 'egal'. Les labels peuvent \u00eatre choisis comme on veut. A faire 5.Compl\u00e9ter le code assembleur pour qu'il traduise le programme python. Tester le...","title":"Utilisation des labels"},{"location":"archi/OS/linux.html","text":"Apprendre la ligne de commande avec Linux \u2693\ufe0e Chemin relatif et absolu \u2693\ufe0e Chemin absolu \u2693\ufe0e Le chemin absolu d'un fichier (appel\u00e9 path) est l'endroit exact o\u00f9 l'on peut trouver le fichier sur la machine. Par exemple un fichier \u00ab CeQueJeVaisFaireDemain.pdf \u00bb qui serait plac\u00e9 dans un dossier appel\u00e9 \u00ab Mes projets d'avenir \u00bb lui-m\u00eame plac\u00e9 dans MesDocuments du PC a un chemin absolu : C:\\Users\\NomUtilisateur\\Documents\\Mes projets d'avenir\\CeQueJeVaisFaireDemain.pdf Pour l'appel \u00e0 un fichier on peut utiliser le chemin absolu avec la certitude de ne pas faire d'erreur... sauf si on d\u00e9place notre dossier de travail, sur une cl\u00e9, sur un autre pc ... Chemin relatif \u2693\ufe0e Le chemin relatif est le chemin o\u00f9 l'on peut trouver un ficher \u00e0 partir du r\u00e9oertoire courant (le r\u00e9pertoire o\u00f9 l'on se trouve). Dans l'exemple ci-dessus, en admettant que l'on soit dans le repertoire Documents le fichier \u00ab CeQueJeVaisFaireDemain.pdf est accessible par le chemin Mes projets d'avenir\\CeQueJeVaisFaireDemain.pdf . Autre exmemple, dans l'arborescence ci-dessous , on se place dans le r\u00e9pertoire Mes projets d'avenir . Pour acc\u00e9der au fichier essai.py il faudra d'abord sortir du r\u00e9pertoire. Le chemin est donc ../essai.py . Les commandes de bases \u2693\ufe0e Pour vous entrainer \u00e0 l'utilisation des lignes de commande, rendez-vous sur l'\u00e9mulateur Voici une liste non exhaustive des commandes de linux. Note Le r\u00e9peroire courant est le r\u00e9pertoire dans lequel on se trouve. ls \u2693\ufe0e Quote liste les \u00e9l\u00e9ments contenu dans le r\u00e9pertoire courant. pwd \u2693\ufe0e Quote Affiche le nom du r\u00e9pertoire courant. whoami \u2693\ufe0e Quote Qui sui-je ?Affiche le nom de l'utilisateur connect\u00e9. cd \u2693\ufe0e Quote Change directory. Permet de changer de r\u00e9pertoire en indiquant le chemin. Pour remonter dans le dossier parent on utilisera ../ mkdir \u2693\ufe0e Quote Make directory. Cr\u00e9ation d'un r\u00e9pertoire dans le r\u00e9pertoire courant. Il faudra pr\u00e9ciser le nom ou le chemin du dossier cr\u00e9\u00e9. touch \u2693\ufe0e Quote Cr\u00e9e un fichier dont le nom est sp\u00e9cifi\u00e9 en param\u00e8tre de la commande cp \u2693\ufe0e Quote Copy. Copie un fichier dans un autre r\u00e9pertoire ou dans le m\u00eame. Le premier param\u00e8tre est le chemin du fichier \u00e0 copier et le second est le chemin de la copie. mv \u2693\ufe0e Quote Move. D\u00e9place un fichier. On precise d'abord le fichier \u00e0 d\u00e9placer puis le chemin de la cible. Si on d\u00e9place un fichier dans le m\u00eame r\u00e9pertoire, cela revient \u00e0 le renommer. rm \u2693\ufe0e Quote Remove. Supprime un fichier ou un dossier Warning Linux ne demande pas si on est sur de vouloir supprimer. Attention \u00e0 l'utilisation de cette commande. Permissions \u2693\ufe0e Les permissions d'un utilisateur ou d'un groupe d'utilisateurs concernent ce que l'on peut faire ou non avec un fichier. On peut \u00e9crire, lire ou ex\u00e9cuter le fichier. Bien \u00e9videmment, tous les utilisateurs ne doivent pas pouvoir modifier tous les documents. La commande ls -l permet de lister les \u00e9l\u00e9ments du r\u00e9pertoire courant et les permissions des diff\u00e9rents utilisateurs. Chaque ligne correspond \u00e0 un \u00e9l\u00e9ment du dossier, le premier caract\u00e8re indique s'il s'agit d'un dossier ou non, les 3 caract\u00e8res suivants correspondent aux permissions de l'utilisateur connect\u00e9. r s'il peut lire - sinon, puis w s'il peut \u00e9crire (modifier) ou - sinon et x s'il peut ex\u00e9cuter - sinon. Les trois caract\u00e8res suivants sont les droits de lecture, \u00e9criture et ex\u00e9cution des membres du meme groupe que l'utilisateur et enfin ceux des autres utilisateurs que ceux du groupe. La suite de la ligne indique le propri\u00e9taire du fichier et le nom du groupe auquel appartient le propri\u00e9taire. Changer les permissions \u2693\ufe0e Cette action ne peut se faire qu'en tant qu'administrateur (appel\u00e9 root ). chmod u+w nom_du_fichier Ajoute le droit en \u00e9criture pour l'utilisateur cit\u00e9 chmod o-rw nom_du_fichier Retire le droit en lecture et \u00e9criture pour les autres Changer de propri\u00e9taire \u2693\ufe0e chown nv_propri\u00e9taire nom_du_fichier Remplace le pr\u00e9c\u00e9dent propri\u00e9taire du fichier par nv_propri\u00e9taire R\u00e9capitulatif des principales commandes \u2693\ufe0e pwd indique le dossier dans lequel on se trouve whoami : indique le nom de l'utilisateur (impossible d'utiliser LINUX sans \u00eatre loguer) ls : indique ce que contient le dossier courant (-l avec les permissions) cd : permet de changer de r\u00e9pertoire mkdir : cr\u00e9er un dossier dans le r\u00e9pertoire courant touch : cr\u00e9er un fichier dans le r\u00e9pertoire courant rm : effacer un fichier ou un dossier (-p pour un dossier et \u2013rf pour un dossier non vide) mv : d\u00e9placer/renommer un fichier ou un dossier cp : copier un fichier cat, less : ouvrir un fichier texte chmod : change les permissions des diff\u00e9rents utilisateurs chown : change l'utilisateur et le groupe propri\u00e9taire su, sudo : permet de passer en mode root (\u00e0 condition de connaitre le mot de passe)","title":"Utilisation de la ligne de commande"},{"location":"archi/OS/linux.html#apprendre-la-ligne-de-commande-avec-linux","text":"","title":"Apprendre la ligne de commande avec Linux"},{"location":"archi/OS/linux.html#chemin-relatif-et-absolu","text":"","title":"Chemin relatif et absolu"},{"location":"archi/OS/linux.html#chemin-absolu","text":"Le chemin absolu d'un fichier (appel\u00e9 path) est l'endroit exact o\u00f9 l'on peut trouver le fichier sur la machine. Par exemple un fichier \u00ab CeQueJeVaisFaireDemain.pdf \u00bb qui serait plac\u00e9 dans un dossier appel\u00e9 \u00ab Mes projets d'avenir \u00bb lui-m\u00eame plac\u00e9 dans MesDocuments du PC a un chemin absolu : C:\\Users\\NomUtilisateur\\Documents\\Mes projets d'avenir\\CeQueJeVaisFaireDemain.pdf Pour l'appel \u00e0 un fichier on peut utiliser le chemin absolu avec la certitude de ne pas faire d'erreur... sauf si on d\u00e9place notre dossier de travail, sur une cl\u00e9, sur un autre pc ...","title":"Chemin absolu"},{"location":"archi/OS/linux.html#chemin-relatif","text":"Le chemin relatif est le chemin o\u00f9 l'on peut trouver un ficher \u00e0 partir du r\u00e9oertoire courant (le r\u00e9pertoire o\u00f9 l'on se trouve). Dans l'exemple ci-dessus, en admettant que l'on soit dans le repertoire Documents le fichier \u00ab CeQueJeVaisFaireDemain.pdf est accessible par le chemin Mes projets d'avenir\\CeQueJeVaisFaireDemain.pdf . Autre exmemple, dans l'arborescence ci-dessous , on se place dans le r\u00e9pertoire Mes projets d'avenir . Pour acc\u00e9der au fichier essai.py il faudra d'abord sortir du r\u00e9pertoire. Le chemin est donc ../essai.py .","title":"Chemin relatif"},{"location":"archi/OS/linux.html#les-commandes-de-bases","text":"Pour vous entrainer \u00e0 l'utilisation des lignes de commande, rendez-vous sur l'\u00e9mulateur Voici une liste non exhaustive des commandes de linux. Note Le r\u00e9peroire courant est le r\u00e9pertoire dans lequel on se trouve.","title":"Les commandes de bases"},{"location":"archi/OS/linux.html#ls","text":"Quote liste les \u00e9l\u00e9ments contenu dans le r\u00e9pertoire courant.","title":"ls"},{"location":"archi/OS/linux.html#pwd","text":"Quote Affiche le nom du r\u00e9pertoire courant.","title":"pwd"},{"location":"archi/OS/linux.html#whoami","text":"Quote Qui sui-je ?Affiche le nom de l'utilisateur connect\u00e9.","title":"whoami"},{"location":"archi/OS/linux.html#cd","text":"Quote Change directory. Permet de changer de r\u00e9pertoire en indiquant le chemin. Pour remonter dans le dossier parent on utilisera ../","title":"cd"},{"location":"archi/OS/linux.html#mkdir","text":"Quote Make directory. Cr\u00e9ation d'un r\u00e9pertoire dans le r\u00e9pertoire courant. Il faudra pr\u00e9ciser le nom ou le chemin du dossier cr\u00e9\u00e9.","title":"mkdir"},{"location":"archi/OS/linux.html#touch","text":"Quote Cr\u00e9e un fichier dont le nom est sp\u00e9cifi\u00e9 en param\u00e8tre de la commande","title":"touch"},{"location":"archi/OS/linux.html#cp","text":"Quote Copy. Copie un fichier dans un autre r\u00e9pertoire ou dans le m\u00eame. Le premier param\u00e8tre est le chemin du fichier \u00e0 copier et le second est le chemin de la copie.","title":"cp"},{"location":"archi/OS/linux.html#mv","text":"Quote Move. D\u00e9place un fichier. On precise d'abord le fichier \u00e0 d\u00e9placer puis le chemin de la cible. Si on d\u00e9place un fichier dans le m\u00eame r\u00e9pertoire, cela revient \u00e0 le renommer.","title":"mv"},{"location":"archi/OS/linux.html#rm","text":"Quote Remove. Supprime un fichier ou un dossier Warning Linux ne demande pas si on est sur de vouloir supprimer. Attention \u00e0 l'utilisation de cette commande.","title":"rm"},{"location":"archi/OS/linux.html#permissions","text":"Les permissions d'un utilisateur ou d'un groupe d'utilisateurs concernent ce que l'on peut faire ou non avec un fichier. On peut \u00e9crire, lire ou ex\u00e9cuter le fichier. Bien \u00e9videmment, tous les utilisateurs ne doivent pas pouvoir modifier tous les documents. La commande ls -l permet de lister les \u00e9l\u00e9ments du r\u00e9pertoire courant et les permissions des diff\u00e9rents utilisateurs. Chaque ligne correspond \u00e0 un \u00e9l\u00e9ment du dossier, le premier caract\u00e8re indique s'il s'agit d'un dossier ou non, les 3 caract\u00e8res suivants correspondent aux permissions de l'utilisateur connect\u00e9. r s'il peut lire - sinon, puis w s'il peut \u00e9crire (modifier) ou - sinon et x s'il peut ex\u00e9cuter - sinon. Les trois caract\u00e8res suivants sont les droits de lecture, \u00e9criture et ex\u00e9cution des membres du meme groupe que l'utilisateur et enfin ceux des autres utilisateurs que ceux du groupe. La suite de la ligne indique le propri\u00e9taire du fichier et le nom du groupe auquel appartient le propri\u00e9taire.","title":"Permissions"},{"location":"archi/OS/linux.html#changer-les-permissions","text":"Cette action ne peut se faire qu'en tant qu'administrateur (appel\u00e9 root ). chmod u+w nom_du_fichier Ajoute le droit en \u00e9criture pour l'utilisateur cit\u00e9 chmod o-rw nom_du_fichier Retire le droit en lecture et \u00e9criture pour les autres","title":"Changer les permissions"},{"location":"archi/OS/linux.html#changer-de-proprietaire","text":"chown nv_propri\u00e9taire nom_du_fichier Remplace le pr\u00e9c\u00e9dent propri\u00e9taire du fichier par nv_propri\u00e9taire","title":"Changer de propri\u00e9taire"},{"location":"archi/OS/linux.html#recapitulatif-des-principales-commandes","text":"pwd indique le dossier dans lequel on se trouve whoami : indique le nom de l'utilisateur (impossible d'utiliser LINUX sans \u00eatre loguer) ls : indique ce que contient le dossier courant (-l avec les permissions) cd : permet de changer de r\u00e9pertoire mkdir : cr\u00e9er un dossier dans le r\u00e9pertoire courant touch : cr\u00e9er un fichier dans le r\u00e9pertoire courant rm : effacer un fichier ou un dossier (-p pour un dossier et \u2013rf pour un dossier non vide) mv : d\u00e9placer/renommer un fichier ou un dossier cp : copier un fichier cat, less : ouvrir un fichier texte chmod : change les permissions des diff\u00e9rents utilisateurs chown : change l'utilisateur et le groupe propri\u00e9taire su, sudo : permet de passer en mode root (\u00e0 condition de connaitre le mot de passe)","title":"R\u00e9capitulatif des principales commandes"},{"location":"archi/OS/logique_combinatoire.html","text":"LOGIQUE COMBINATOIRE \u2693\ufe0e Le processeur est, dans l\u2019ordinateur, le composant qui affecte des places en m\u00e9moire charge des donn\u00e9es et effectue des calculs avec ces donn\u00e9es. Comment fait le processeur pour faire des calculs ? \u2693\ufe0e Des circuits int\u00e9gr\u00e9s re\u00e7oivent des successions de signaux binaires et, selon le c\u00e2blage, il en ressort une valeur pr\u00e9cise en fonction des valeurs d\u2019entr\u00e9e. C\u2019est le cas des portes logiques. Les portes logiques poss\u00e8dent une ou deux entr\u00e9es et une table logique indique la valeur de la sortie en fonction des valeurs des entr\u00e9es. Par exemple, la table ET (appel\u00e9e \u00e9galement AND) aura une valeur de sortie \u00e0 1 si les deux entr\u00e9es sont \u00e0 1. Sinon, la sortie vaudra 0. Utiliser l'application en ligne ci-dessous : 1 Les sch\u00e9mas des portes sont donn\u00e9s dans l'ordre : Non-OU, Non-ET, OU, ET, Non, et OU-Exclusif Questions 1.Remplir les tables de v\u00e9rit\u00e9 des portes NON (NOTGATE), ET (AND), NON-ET (NAND), OU (OR), NON-OU (NOR) et OU EXCLUSIF (XOR). Ces tables donnent l\u2019\u00e9tat de la sortie en fonction des valeurs d\u2019entr\u00e9e. Combinaison de plusieurs portes \u2693\ufe0e En combinant plusieurs portes logiques, on peut obtenir des op\u00e9rations plus complexes. Comme son nom l'indique, l'additionneur permet d'additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l'addition (S) et la retenue sortante (\"Cout\"). Questions Etablir la table de v\u00e9rit\u00e9 de l'additionneur. Une fois l'activit\u00e9 termin\u00e9e, poursuivre avec l'assembleur","title":"Logique combinatoire"},{"location":"archi/OS/logique_combinatoire.html#logique-combinatoire","text":"Le processeur est, dans l\u2019ordinateur, le composant qui affecte des places en m\u00e9moire charge des donn\u00e9es et effectue des calculs avec ces donn\u00e9es.","title":"LOGIQUE COMBINATOIRE"},{"location":"archi/OS/logique_combinatoire.html#comment-fait-le-processeur-pour-faire-des-calculs","text":"Des circuits int\u00e9gr\u00e9s re\u00e7oivent des successions de signaux binaires et, selon le c\u00e2blage, il en ressort une valeur pr\u00e9cise en fonction des valeurs d\u2019entr\u00e9e. C\u2019est le cas des portes logiques. Les portes logiques poss\u00e8dent une ou deux entr\u00e9es et une table logique indique la valeur de la sortie en fonction des valeurs des entr\u00e9es. Par exemple, la table ET (appel\u00e9e \u00e9galement AND) aura une valeur de sortie \u00e0 1 si les deux entr\u00e9es sont \u00e0 1. Sinon, la sortie vaudra 0. Utiliser l'application en ligne ci-dessous : 1 Les sch\u00e9mas des portes sont donn\u00e9s dans l'ordre : Non-OU, Non-ET, OU, ET, Non, et OU-Exclusif Questions 1.Remplir les tables de v\u00e9rit\u00e9 des portes NON (NOTGATE), ET (AND), NON-ET (NAND), OU (OR), NON-OU (NOR) et OU EXCLUSIF (XOR). Ces tables donnent l\u2019\u00e9tat de la sortie en fonction des valeurs d\u2019entr\u00e9e.","title":"Comment fait le processeur pour faire des calculs ?"},{"location":"archi/OS/logique_combinatoire.html#combinaison-de-plusieurs-portes","text":"En combinant plusieurs portes logiques, on peut obtenir des op\u00e9rations plus complexes. Comme son nom l'indique, l'additionneur permet d'additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l'addition (S) et la retenue sortante (\"Cout\"). Questions Etablir la table de v\u00e9rit\u00e9 de l'additionneur. Une fois l'activit\u00e9 termin\u00e9e, poursuivre avec l'assembleur","title":"Combinaison de plusieurs portes"},{"location":"archi/OS/vonneuman.html","text":"Le mod\u00e8le d'architecture de Von Neumann et les syst\u00e8mes d'exploitaion \u2693\ufe0e Un peu d'histoire... \u2693\ufe0e Le premier ordinateur \u2693\ufe0e L\u2019ENIAC \u2014 Electronic Numerical Integrator and Computer \u2014 fut construit aux Etats Unis pendant la premi\u00e8re guerre mondiale. Sous la direction de John Mauchly et J. Presper Eckert, ce calcultateur uiversel \u00e9tait destin\u00e9 \u00e0 effectuer des calculs de valeurs des tables de tirs d'artillerie. La machine \u00e9tait programmable par c\u00e2blage, c'est-\u00e0-dire que pour chaque probl\u00e8me donn\u00e9 \u00e0 r\u00e9soudre, il fallait passer de longues heures \u00e0 c\u00e2bler la machine. L'ENIAC pesait 27 tonnes et occupait une sirface de 170m\u00b2 dans les sous-sols de la Moore School of Electrical Engineering de l'universit\u00e9 de Pennsylvanie. Le temps moyen entre deux pannes \u00e9tait de 2 jours. L'ENIAC n'avait pas de m\u00e9moire, au sens actuel du terme, mais seulement 20 accumulateurs pouvant chacun contenir un nombre de 10 chiffres. Les calculs aithm\u00e9tiques (additions, soustraction, multiplication) \u00e9taient possibles \u00e0 raison de 5000 op\u00e9rations par seconde. Les entr\u00e9es-sorties, se faisaient au moyen de cartes perfor\u00e9es. Les pr\u00e9curseurs \u2693\ufe0e Les travaux du math\u00e9maticien anglais Alan Turing (1912-1954) \u00e0 la fin des ann\u00e9es 30 ont \u00e9t\u00e9 fondateurs de l\u2019informatique . Alan Turing est connu pour son r\u00f4le pendant la Seconde Guerre Mondiale dans le d\u00e9chiffrement des messages de la machine Enigma de l\u2019arm\u00e9e allemande. Il travaille en particulier sur les concepts de programmation et d\u2019intelligence artificielle. Le math\u00e9maticien John Von Neumann (1903-1957), inspir\u00e9 par Turing, reprend les id\u00e9es de Eckert et Mauchly en y ajoutant le concept de machine universelle introduit par Alaln Turing en 1937. Cette nouvelle architecture est r\u00e9volutionnaire, munie d'un processeur et de dispositifs d'entr\u00e9es-sorties, elle permet d'enregistrer des donn\u00e9es au cours de l'ex\u00e9cution d'un programme enregistr\u00e9 dans sa m\u00e9moire physique . Ce qui rend le mod\u00e8le de Von Neumann si novateur est le fait de pouvoir stocker les donn\u00e9es et le programme dans la m\u00eame m\u00e9moire. En 1948, Turiing con\u00e7oit la programmation de la Manchester Small-Scale Experimentale Machine , surnomm\u00e9e Manchester baby, premi\u00e8re machien au monde fond\u00e9e sur l'architecture de Von Neumann. Le 21 juin 1948, Tom Kilburn \u00e9crit et enregistre dans la m\u00e9moire de la machine le premier programme de l'histoire. Il s'agissait de calculer le plus grand facteur premier de 2 18 : 52 minutes et 2 millions d'instructions ex\u00e9cut\u00e9es plus tard, la machine donne la r\u00e9ponse : 131 072. Plus de 70 ans apr\u00e8s son invention, les concepts du mod\u00e8le d'architecture de Von Neumann sont toujours pr\u00e9sents dans les ordinateurs modernes. Claude Shannon (1916-2001) ing\u00e9nieur am\u00e9ricain en \u00e9lectricit\u00e9 et math\u00e9maticien, apporte une th\u00e9orie de l\u2019information et de la communication dans les m\u00eames ann\u00e9es. Il est l\u2019un des premiers a utiliser le mot \"bit\". Vocabulaire le mot anglais \"computer\" vient du latin computare qui signifie compter. le mot \"informatique\" a \u00e9t\u00e9 cr\u00e9\u00e9 en 1962 avec les mots information et automatique (par Philippe Dreyfus) le mot \"ordinateur\" a \u00e9t\u00e9 cr\u00e9\u00e9 en 1955 par Jacques Perret linguiste et professeur \u00e0 la Sorbonne. Il y a 58 ans, le 16 avril 1955, le mot ordinateur \u00e9tait invent\u00e9 par le professeur de philologie (l'\u00e9tude d'une langue et de sa litt\u00e9rature \u00e0 partir de documents \u00e9crits) Jacques Perret. Son origine est une demande d\u2019IBM, qui voulait un nom fran\u00e7ais plus parlant que \u00ab calculateur \u00bb pour sa nouvelle machine \u00e9lectronique destin\u00e9e au traitement de l'information (IBM 650) en \u00e9vitant d'utiliser la tra-duction litt\u00e9rale du mot anglais computer (\u00ab calculateur \u00bb ou \u00ab calculatrice \u00bb), qui \u00e9tait \u00e0 cette \u00e9poque plut\u00f4t r\u00e9serv\u00e9 aux machines scientifiques. Voici la lettre envoy\u00e9e par Jacques Perret \u00e0 IBM, qui a officialis\u00e9 le nom ordinateur. Cher Monsieur, Que diriez-vous d\u2019ordinateur? C\u2019est un mot correctement form\u00e9, qui se trouve m\u00eame dans le Littr\u00e9 comme adjectif d\u00e9signant Dieu qui met de l\u2019ordre dans le monde. Un mot de ce genre a l\u2019avantage de donner ais\u00e9ment un verbe ordiner, un nom d\u2019action ordination. L\u2019inconv\u00e9nient est que ordina-tion d\u00e9signe une c\u00e9r\u00e9monie religieuse ; mais les deux champs de signification (religion et comp-tabilit\u00e9) sont si \u00e9loign\u00e9s et la c\u00e9r\u00e9monie d\u2019ordination connue, je crois, de si peu de personnes que l\u2019inconv\u00e9nient est peut-\u00eatre mineur. D\u2019ailleurs votre machine serait ordinateur (et non ordination) et ce mot est tout \u00e0 fait sorti de l\u2019usage th\u00e9ologique. Syst\u00e9mateur serait un n\u00e9ologisme, mais qui ne me para\u00eet pas offensant ; il permet syst\u00e9matis\u00e9 ; \u2014 mais syst\u00e8me ne me semble gu\u00e8re utilisable \u2014 Combinateur a l\u2019inconv\u00e9nient du sens p\u00e9joratif de combine ; combiner est usuel donc peu ca-pable de devenir technique ; combination ne me para\u00eet gu\u00e8re viable \u00e0 cause de la proximit\u00e9 de combinaison. Mais les Allemands ont bien leurs combinats (sorte de trusts, je crois), si bien que le mot aurait peut-\u00eatre des possibilit\u00e9s autres que celles qu\u2019\u00e9voque combine. Congesteur, digesteur \u00e9voquent trop congestion et digestion. Synth\u00e9tiseur ne me para\u00eet pas un mot assez neuf pour d\u00e9signer un objet sp\u00e9cifique, d\u00e9termin\u00e9 comme votre machine. En relisant les brochures que vous m\u2019avez donn\u00e9es, je vois que plusieurs de vos appareils sont d\u00e9sign\u00e9s par des noms d\u2019agent f\u00e9minins (trieuse, tabulatrice). Ordinatrice serait parfaitement pos-sible et aurait m\u00eame l\u2019avantage de s\u00e9parer plus encore votre machine du vocabulaire de la th\u00e9o-logie. Il y a possibilit\u00e9 aussi d\u2019ajouter \u00e0 un nom d\u2019agent un compl\u00e9ment : ordinatrice d\u2019\u00e9l\u00e9ments complexes ou un \u00e9l\u00e9ment de composition, par exemple : s\u00e9lecto-syst\u00e9mateur. S\u00e9lecto-ordinateur a l\u2019inconv\u00e9nient de deux o en hiatus, comme \u00e9lectro-ordinatrice. Il me semble que je pencherais pour ordinatrice \u00e9lectronique. Je souhaite que ces suggestions stimulent, orientent vos propres facult\u00e9s d\u2019invention. N\u2019h\u00e9sitez pas \u00e0 me donner un coup de t\u00e9l\u00e9-phone si vous avez une id\u00e9e qui vous paraisse requ\u00e9rir l\u2019avis d\u2019un philologue. V\u00f4tre Jacques Perret questions 1.Un ordinateur bas de gamme, aujourd'hui, a une fr\u00e9quence de processeur 2GHz. Combien d'op\u00e9rations par seconde peut-il faire? 2.Relever dans le texte le nom de trois machines programmables. 3.Citer quelques avantages et inconv\u00e9nients de l'ENIAC. 4.Quels sont les deux \u00e9l\u00e9ments novateurs de l'architecture de Von Neumann? Architecture de Von Neumann \u2693\ufe0e L\u2019architecture de von Neumann est un mod\u00e8le structurel d\u2019ordinateur dans lequel une unit\u00e9 de stockage (m\u00e9moire) unique sert \u00e0 conserver \u00e0 la fois les instructions et les donn\u00e9es demand\u00e9es ou produites par le calcul. Les ordinateurs actuels sont tous bas\u00e9s sur des versions am\u00e9lior\u00e9es de cette architecture. L\u2019architecture de von Neumann d\u00e9compose l\u2019ordinateur en 4 parties distinctes : l\u2019unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) ou unit\u00e9 de traitement : son r\u00f4le est d\u2019effectuer les op\u00e9rations de base ; l\u2019unit\u00e9 de contr\u00f4le ou de commande (control unit), charg\u00e9e du \u00ab s\u00e9quen\u00e7age \u00bb des op\u00e9rations ; la m\u00e9moire qui contient \u00e0 la fois les donn\u00e9es et le programme qui indiquera \u00e0 l\u2019unit\u00e9 de contr\u00f4le quels sont les calculs \u00e0 faire sur ces donn\u00e9es ; les dispositifs d\u2019entr\u00e9e-sortie, qui permettent de communiquer avec le monde ext\u00e9rieur. Remarques Les diff\u00e9rents \u00e9l\u00e9ments \u00e9changent des informations \u00e0 l\u2019aide de bus (un bus peut \u00eatre un ensemble de c\u00e2bles qui transmettent simultan\u00e9ment les informations mais aussi l'ensemble des informations transmises). On peut trouver la vitesse d\u2019horloge dans windows en cherchant \"informations syst\u00e8me\" et on trouve un r\u00e9sultat en GHz (GigaHertz). Un hertz est la mesure de la fr\u00e9quence de r\u00e9p\u00e9tition d'un \u00e9v\u00e9nement qui se r\u00e9p\u00e8te une fois par seconde. Donc 1 GHz = 10 9 Hz Par exemple une horloge en 2GHz fait 2.109 op\u00e9rations par seconde c\u2019est \u00e0 dire une op\u00e9ration toutes les 0,5 nanoseconde. (1 nanoseconde = 10 -9 secondes). La premi\u00e8re innovation de la machine de Von Neumann est la s\u00e9paration nette entre l\u2019unit\u00e9 de commande, qui organise le flot de s\u00e9quencement des instructions, et l\u2019unit\u00e9 arithm\u00e9tique, charg\u00e9e de l\u2019ex\u00e9cution proprement dite de ces instructions. La seconde innovation, la plus fondamentale, est l\u2019id\u00e9e du programme enregistr\u00e9 : les instructions, au lieu d\u2019\u00eatre cod\u00e9es sur un support externe (ruban, cartes, tableau de connexions), sont enregistr\u00e9es dans la m\u00e9moire selon un codage conventionnel. Un emplacement de m\u00e9moire peut contenir indiff\u00e9remment des instructions et des donn\u00e9es, et une cons\u00e9quence majeure est qu\u2019un programme peut \u00eatre trait\u00e9 comme une donn\u00e9e par d\u2019autres programmes. Cette id\u00e9e, pr\u00e9sente en germe dans la machine de Turing, trouvait ici sa concr\u00e9tisation. Questions 5.En faisant \u00e9ventuellement une recherche compl\u00e9mentaire, comment \u00e9taient apport\u00e9s le programme informatique avant sa pr\u00e9sence dans l'unit\u00e9 de m\u00e9moire? 6.R\u00e9sumer en quelques lignes ce que fait le processeur? 7.Quelle est la diff\u00e9rence entre un processeur monoprocessus et multiprocessus? Composants d'une machine \u2693\ufe0e Vue d'ensemble \u2693\ufe0e Dans cette partie, nous consid\u00e9rerons une machine informatique au sens large : ordinateur de bureau, ordinateur portable, smartphone, tablette \u2026 Physiquement une machine informatique est constitu\u00e9e de plusieurs \u00e9l\u00e9ments : Une carte m\u00e8re avec un microprocesseur, une carte graphique, des barrettes m\u00e9moires, une carte r\u00e9seau, des ports (=prises)\u2026 Des p\u00e9riph\u00e9riques qui peuvent \u00eatre internes ou externes : disques durs, \u00e9cran, clavier ... Les m\u00e9moires \u2693\ufe0e Les m\u00e9moires d'un ordinateur peuvent \u00eatre permanente ou volatile. Cette derni\u00e8re s'efface au moment de la coupre de l'alimetation \u00e9lectrique. Les don\u00e9es peuvent \u00eatre remplac\u00e9es lors de l'\u00e9x\u00e9cution de programmes. La m\u00e9moire d'une machine permet de stocker les donn\u00e9es. Elle est exprim\u00e9e en Mo, Go, To (t\u00e9raoctets). Il y en a de plusieurs types : La \"m\u00e9moire morte\" , en anglais ROM (Read Only Memory). M\u00e9moire persistante de quelques M\u00e9gaoctets contenant juste le n\u00e9cessaire pour faire d\u00e9marrer l\u2019ordinateur. Son contenu est fix\u00e9 lors de la fabrication de la machine et n'est pas pr\u00e9vue pour \u00eatre modifi\u00e9. La \"m\u00e9moire vive\", en anglais RAM (Random Access Memory). M\u00e9moire de capacit\u00e9 moyenne (4 \u00e0 32Go dans les ordinateurs personnels). M\u00e9moire dans laquelles sont enregistr\u00e9es les informations trait\u00e9es par la machine. La \"m\u00e9moire de masse\" : M\u00e9moire qui peut \u00eatre lue et \u00e9crite par la machine. Sa grande capacit\u00e9 permet d'y enregistrer une grande quantit\u00e9 de donn\u00e9es, C'est le cas des p\u00e9riph\u00e9riques de stockage. La \"m\u00e9moire cache\", M\u00e9moire qui a pour r\u00f4le d'acc\u00e9l\u00e9rer l'acc\u00e8s aux informations de la m\u00e9moire vive. Elle contient des informations fr\u00e9quemment utilis\u00e9es par le processeur ou es prochaines dont il aura besoin. Elle a une capacit\u00e9 d'une dizaine de m\u00e9gaoctets questions 8.Pour chaque type de m\u00e9moire, dire si elle est volatile ou permanente. 9.Classer les m\u00e9moires cit\u00e9es de la plus rapide \u00e0 la moins rapide. 10. Donner des exemples de m\u00e9moires de masse. Les p\u00e9riph\u00e9riques \u2693\ufe0e En plus des ressousrces mat\u00e9rielles, le syst\u00e8me doit interagir avec l'utilisateur via des p\u00e9riph\u00e9riques. - Les p\u00e9riph\u00e9riques d'entr\u00e9e servent \u00e0 donner des informations ou des donn\u00e9es au syst\u00e8me - Les p\u00e9riph\u00e9riques de sortie servent \u00e0 faire sortir les informations du syst\u00e8me - Les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie permettent aussi bien de lire et \u00e9crire des donn\u00e9es questions 11.Parmi la liste des p\u00e9riph\u00e9riques cit\u00e9s dans le sch\u00e9ma des composants d'un ordinateur, classer les selon leur type (entree, sortie ou entr\u00e9e/sortie). 12.Ajoutez en un maximum d'autres de votre connaissance. Pour aller plus loin ... \u2693\ufe0e","title":"Architecture  mat\u00e9rielle"},{"location":"archi/OS/vonneuman.html#le-modele-darchitecture-de-von-neumann-et-les-systemes-dexploitaion","text":"","title":"Le mod\u00e8le d'architecture de Von Neumann et les syst\u00e8mes d'exploitaion"},{"location":"archi/OS/vonneuman.html#un-peu-dhistoire","text":"","title":"Un peu d'histoire..."},{"location":"archi/OS/vonneuman.html#le-premier-ordinateur","text":"L\u2019ENIAC \u2014 Electronic Numerical Integrator and Computer \u2014 fut construit aux Etats Unis pendant la premi\u00e8re guerre mondiale. Sous la direction de John Mauchly et J. Presper Eckert, ce calcultateur uiversel \u00e9tait destin\u00e9 \u00e0 effectuer des calculs de valeurs des tables de tirs d'artillerie. La machine \u00e9tait programmable par c\u00e2blage, c'est-\u00e0-dire que pour chaque probl\u00e8me donn\u00e9 \u00e0 r\u00e9soudre, il fallait passer de longues heures \u00e0 c\u00e2bler la machine. L'ENIAC pesait 27 tonnes et occupait une sirface de 170m\u00b2 dans les sous-sols de la Moore School of Electrical Engineering de l'universit\u00e9 de Pennsylvanie. Le temps moyen entre deux pannes \u00e9tait de 2 jours. L'ENIAC n'avait pas de m\u00e9moire, au sens actuel du terme, mais seulement 20 accumulateurs pouvant chacun contenir un nombre de 10 chiffres. Les calculs aithm\u00e9tiques (additions, soustraction, multiplication) \u00e9taient possibles \u00e0 raison de 5000 op\u00e9rations par seconde. Les entr\u00e9es-sorties, se faisaient au moyen de cartes perfor\u00e9es.","title":"Le premier ordinateur"},{"location":"archi/OS/vonneuman.html#les-precurseurs","text":"Les travaux du math\u00e9maticien anglais Alan Turing (1912-1954) \u00e0 la fin des ann\u00e9es 30 ont \u00e9t\u00e9 fondateurs de l\u2019informatique . Alan Turing est connu pour son r\u00f4le pendant la Seconde Guerre Mondiale dans le d\u00e9chiffrement des messages de la machine Enigma de l\u2019arm\u00e9e allemande. Il travaille en particulier sur les concepts de programmation et d\u2019intelligence artificielle. Le math\u00e9maticien John Von Neumann (1903-1957), inspir\u00e9 par Turing, reprend les id\u00e9es de Eckert et Mauchly en y ajoutant le concept de machine universelle introduit par Alaln Turing en 1937. Cette nouvelle architecture est r\u00e9volutionnaire, munie d'un processeur et de dispositifs d'entr\u00e9es-sorties, elle permet d'enregistrer des donn\u00e9es au cours de l'ex\u00e9cution d'un programme enregistr\u00e9 dans sa m\u00e9moire physique . Ce qui rend le mod\u00e8le de Von Neumann si novateur est le fait de pouvoir stocker les donn\u00e9es et le programme dans la m\u00eame m\u00e9moire. En 1948, Turiing con\u00e7oit la programmation de la Manchester Small-Scale Experimentale Machine , surnomm\u00e9e Manchester baby, premi\u00e8re machien au monde fond\u00e9e sur l'architecture de Von Neumann. Le 21 juin 1948, Tom Kilburn \u00e9crit et enregistre dans la m\u00e9moire de la machine le premier programme de l'histoire. Il s'agissait de calculer le plus grand facteur premier de 2 18 : 52 minutes et 2 millions d'instructions ex\u00e9cut\u00e9es plus tard, la machine donne la r\u00e9ponse : 131 072. Plus de 70 ans apr\u00e8s son invention, les concepts du mod\u00e8le d'architecture de Von Neumann sont toujours pr\u00e9sents dans les ordinateurs modernes. Claude Shannon (1916-2001) ing\u00e9nieur am\u00e9ricain en \u00e9lectricit\u00e9 et math\u00e9maticien, apporte une th\u00e9orie de l\u2019information et de la communication dans les m\u00eames ann\u00e9es. Il est l\u2019un des premiers a utiliser le mot \"bit\". Vocabulaire le mot anglais \"computer\" vient du latin computare qui signifie compter. le mot \"informatique\" a \u00e9t\u00e9 cr\u00e9\u00e9 en 1962 avec les mots information et automatique (par Philippe Dreyfus) le mot \"ordinateur\" a \u00e9t\u00e9 cr\u00e9\u00e9 en 1955 par Jacques Perret linguiste et professeur \u00e0 la Sorbonne. Il y a 58 ans, le 16 avril 1955, le mot ordinateur \u00e9tait invent\u00e9 par le professeur de philologie (l'\u00e9tude d'une langue et de sa litt\u00e9rature \u00e0 partir de documents \u00e9crits) Jacques Perret. Son origine est une demande d\u2019IBM, qui voulait un nom fran\u00e7ais plus parlant que \u00ab calculateur \u00bb pour sa nouvelle machine \u00e9lectronique destin\u00e9e au traitement de l'information (IBM 650) en \u00e9vitant d'utiliser la tra-duction litt\u00e9rale du mot anglais computer (\u00ab calculateur \u00bb ou \u00ab calculatrice \u00bb), qui \u00e9tait \u00e0 cette \u00e9poque plut\u00f4t r\u00e9serv\u00e9 aux machines scientifiques. Voici la lettre envoy\u00e9e par Jacques Perret \u00e0 IBM, qui a officialis\u00e9 le nom ordinateur. Cher Monsieur, Que diriez-vous d\u2019ordinateur? C\u2019est un mot correctement form\u00e9, qui se trouve m\u00eame dans le Littr\u00e9 comme adjectif d\u00e9signant Dieu qui met de l\u2019ordre dans le monde. Un mot de ce genre a l\u2019avantage de donner ais\u00e9ment un verbe ordiner, un nom d\u2019action ordination. L\u2019inconv\u00e9nient est que ordina-tion d\u00e9signe une c\u00e9r\u00e9monie religieuse ; mais les deux champs de signification (religion et comp-tabilit\u00e9) sont si \u00e9loign\u00e9s et la c\u00e9r\u00e9monie d\u2019ordination connue, je crois, de si peu de personnes que l\u2019inconv\u00e9nient est peut-\u00eatre mineur. D\u2019ailleurs votre machine serait ordinateur (et non ordination) et ce mot est tout \u00e0 fait sorti de l\u2019usage th\u00e9ologique. Syst\u00e9mateur serait un n\u00e9ologisme, mais qui ne me para\u00eet pas offensant ; il permet syst\u00e9matis\u00e9 ; \u2014 mais syst\u00e8me ne me semble gu\u00e8re utilisable \u2014 Combinateur a l\u2019inconv\u00e9nient du sens p\u00e9joratif de combine ; combiner est usuel donc peu ca-pable de devenir technique ; combination ne me para\u00eet gu\u00e8re viable \u00e0 cause de la proximit\u00e9 de combinaison. Mais les Allemands ont bien leurs combinats (sorte de trusts, je crois), si bien que le mot aurait peut-\u00eatre des possibilit\u00e9s autres que celles qu\u2019\u00e9voque combine. Congesteur, digesteur \u00e9voquent trop congestion et digestion. Synth\u00e9tiseur ne me para\u00eet pas un mot assez neuf pour d\u00e9signer un objet sp\u00e9cifique, d\u00e9termin\u00e9 comme votre machine. En relisant les brochures que vous m\u2019avez donn\u00e9es, je vois que plusieurs de vos appareils sont d\u00e9sign\u00e9s par des noms d\u2019agent f\u00e9minins (trieuse, tabulatrice). Ordinatrice serait parfaitement pos-sible et aurait m\u00eame l\u2019avantage de s\u00e9parer plus encore votre machine du vocabulaire de la th\u00e9o-logie. Il y a possibilit\u00e9 aussi d\u2019ajouter \u00e0 un nom d\u2019agent un compl\u00e9ment : ordinatrice d\u2019\u00e9l\u00e9ments complexes ou un \u00e9l\u00e9ment de composition, par exemple : s\u00e9lecto-syst\u00e9mateur. S\u00e9lecto-ordinateur a l\u2019inconv\u00e9nient de deux o en hiatus, comme \u00e9lectro-ordinatrice. Il me semble que je pencherais pour ordinatrice \u00e9lectronique. Je souhaite que ces suggestions stimulent, orientent vos propres facult\u00e9s d\u2019invention. N\u2019h\u00e9sitez pas \u00e0 me donner un coup de t\u00e9l\u00e9-phone si vous avez une id\u00e9e qui vous paraisse requ\u00e9rir l\u2019avis d\u2019un philologue. V\u00f4tre Jacques Perret questions 1.Un ordinateur bas de gamme, aujourd'hui, a une fr\u00e9quence de processeur 2GHz. Combien d'op\u00e9rations par seconde peut-il faire? 2.Relever dans le texte le nom de trois machines programmables. 3.Citer quelques avantages et inconv\u00e9nients de l'ENIAC. 4.Quels sont les deux \u00e9l\u00e9ments novateurs de l'architecture de Von Neumann?","title":"Les pr\u00e9curseurs"},{"location":"archi/OS/vonneuman.html#architecture-de-von-neumann","text":"L\u2019architecture de von Neumann est un mod\u00e8le structurel d\u2019ordinateur dans lequel une unit\u00e9 de stockage (m\u00e9moire) unique sert \u00e0 conserver \u00e0 la fois les instructions et les donn\u00e9es demand\u00e9es ou produites par le calcul. Les ordinateurs actuels sont tous bas\u00e9s sur des versions am\u00e9lior\u00e9es de cette architecture. L\u2019architecture de von Neumann d\u00e9compose l\u2019ordinateur en 4 parties distinctes : l\u2019unit\u00e9 arithm\u00e9tique et logique (UAL ou ALU en anglais) ou unit\u00e9 de traitement : son r\u00f4le est d\u2019effectuer les op\u00e9rations de base ; l\u2019unit\u00e9 de contr\u00f4le ou de commande (control unit), charg\u00e9e du \u00ab s\u00e9quen\u00e7age \u00bb des op\u00e9rations ; la m\u00e9moire qui contient \u00e0 la fois les donn\u00e9es et le programme qui indiquera \u00e0 l\u2019unit\u00e9 de contr\u00f4le quels sont les calculs \u00e0 faire sur ces donn\u00e9es ; les dispositifs d\u2019entr\u00e9e-sortie, qui permettent de communiquer avec le monde ext\u00e9rieur. Remarques Les diff\u00e9rents \u00e9l\u00e9ments \u00e9changent des informations \u00e0 l\u2019aide de bus (un bus peut \u00eatre un ensemble de c\u00e2bles qui transmettent simultan\u00e9ment les informations mais aussi l'ensemble des informations transmises). On peut trouver la vitesse d\u2019horloge dans windows en cherchant \"informations syst\u00e8me\" et on trouve un r\u00e9sultat en GHz (GigaHertz). Un hertz est la mesure de la fr\u00e9quence de r\u00e9p\u00e9tition d'un \u00e9v\u00e9nement qui se r\u00e9p\u00e8te une fois par seconde. Donc 1 GHz = 10 9 Hz Par exemple une horloge en 2GHz fait 2.109 op\u00e9rations par seconde c\u2019est \u00e0 dire une op\u00e9ration toutes les 0,5 nanoseconde. (1 nanoseconde = 10 -9 secondes). La premi\u00e8re innovation de la machine de Von Neumann est la s\u00e9paration nette entre l\u2019unit\u00e9 de commande, qui organise le flot de s\u00e9quencement des instructions, et l\u2019unit\u00e9 arithm\u00e9tique, charg\u00e9e de l\u2019ex\u00e9cution proprement dite de ces instructions. La seconde innovation, la plus fondamentale, est l\u2019id\u00e9e du programme enregistr\u00e9 : les instructions, au lieu d\u2019\u00eatre cod\u00e9es sur un support externe (ruban, cartes, tableau de connexions), sont enregistr\u00e9es dans la m\u00e9moire selon un codage conventionnel. Un emplacement de m\u00e9moire peut contenir indiff\u00e9remment des instructions et des donn\u00e9es, et une cons\u00e9quence majeure est qu\u2019un programme peut \u00eatre trait\u00e9 comme une donn\u00e9e par d\u2019autres programmes. Cette id\u00e9e, pr\u00e9sente en germe dans la machine de Turing, trouvait ici sa concr\u00e9tisation. Questions 5.En faisant \u00e9ventuellement une recherche compl\u00e9mentaire, comment \u00e9taient apport\u00e9s le programme informatique avant sa pr\u00e9sence dans l'unit\u00e9 de m\u00e9moire? 6.R\u00e9sumer en quelques lignes ce que fait le processeur? 7.Quelle est la diff\u00e9rence entre un processeur monoprocessus et multiprocessus?","title":"Architecture de Von Neumann"},{"location":"archi/OS/vonneuman.html#composants-dune-machine","text":"","title":"Composants d'une machine"},{"location":"archi/OS/vonneuman.html#vue-densemble","text":"Dans cette partie, nous consid\u00e9rerons une machine informatique au sens large : ordinateur de bureau, ordinateur portable, smartphone, tablette \u2026 Physiquement une machine informatique est constitu\u00e9e de plusieurs \u00e9l\u00e9ments : Une carte m\u00e8re avec un microprocesseur, une carte graphique, des barrettes m\u00e9moires, une carte r\u00e9seau, des ports (=prises)\u2026 Des p\u00e9riph\u00e9riques qui peuvent \u00eatre internes ou externes : disques durs, \u00e9cran, clavier ...","title":"Vue d'ensemble"},{"location":"archi/OS/vonneuman.html#les-memoires","text":"Les m\u00e9moires d'un ordinateur peuvent \u00eatre permanente ou volatile. Cette derni\u00e8re s'efface au moment de la coupre de l'alimetation \u00e9lectrique. Les don\u00e9es peuvent \u00eatre remplac\u00e9es lors de l'\u00e9x\u00e9cution de programmes. La m\u00e9moire d'une machine permet de stocker les donn\u00e9es. Elle est exprim\u00e9e en Mo, Go, To (t\u00e9raoctets). Il y en a de plusieurs types : La \"m\u00e9moire morte\" , en anglais ROM (Read Only Memory). M\u00e9moire persistante de quelques M\u00e9gaoctets contenant juste le n\u00e9cessaire pour faire d\u00e9marrer l\u2019ordinateur. Son contenu est fix\u00e9 lors de la fabrication de la machine et n'est pas pr\u00e9vue pour \u00eatre modifi\u00e9. La \"m\u00e9moire vive\", en anglais RAM (Random Access Memory). M\u00e9moire de capacit\u00e9 moyenne (4 \u00e0 32Go dans les ordinateurs personnels). M\u00e9moire dans laquelles sont enregistr\u00e9es les informations trait\u00e9es par la machine. La \"m\u00e9moire de masse\" : M\u00e9moire qui peut \u00eatre lue et \u00e9crite par la machine. Sa grande capacit\u00e9 permet d'y enregistrer une grande quantit\u00e9 de donn\u00e9es, C'est le cas des p\u00e9riph\u00e9riques de stockage. La \"m\u00e9moire cache\", M\u00e9moire qui a pour r\u00f4le d'acc\u00e9l\u00e9rer l'acc\u00e8s aux informations de la m\u00e9moire vive. Elle contient des informations fr\u00e9quemment utilis\u00e9es par le processeur ou es prochaines dont il aura besoin. Elle a une capacit\u00e9 d'une dizaine de m\u00e9gaoctets questions 8.Pour chaque type de m\u00e9moire, dire si elle est volatile ou permanente. 9.Classer les m\u00e9moires cit\u00e9es de la plus rapide \u00e0 la moins rapide. 10. Donner des exemples de m\u00e9moires de masse.","title":"Les m\u00e9moires"},{"location":"archi/OS/vonneuman.html#les-peripheriques","text":"En plus des ressousrces mat\u00e9rielles, le syst\u00e8me doit interagir avec l'utilisateur via des p\u00e9riph\u00e9riques. - Les p\u00e9riph\u00e9riques d'entr\u00e9e servent \u00e0 donner des informations ou des donn\u00e9es au syst\u00e8me - Les p\u00e9riph\u00e9riques de sortie servent \u00e0 faire sortir les informations du syst\u00e8me - Les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie permettent aussi bien de lire et \u00e9crire des donn\u00e9es questions 11.Parmi la liste des p\u00e9riph\u00e9riques cit\u00e9s dans le sch\u00e9ma des composants d'un ordinateur, classer les selon leur type (entree, sortie ou entr\u00e9e/sortie). 12.Ajoutez en un maximum d'autres de votre connaissance.","title":"Les p\u00e9riph\u00e9riques"},{"location":"archi/OS/vonneuman.html#pour-aller-plus-loin","text":"","title":"Pour aller plus loin ..."},{"location":"archi/reseaux/TCP_IP.html","text":"R\u00e9seau - principes \u2693\ufe0e Un r\u00e9seau , c'est un ensemble d' entit\u00e9s qui communiquent : des fourmis qui envoient des informations par voie chimique (les ph\u00e9romones); des individus qui s'envoient des colis postaux ou du courrier; des ordinateurs qui s'envoient des donn\u00e9es. Chacun des trois exemples ci-dessus est remarquable par son efficacit\u00e9. Le premier est sans doute le fruit de l'\u00e9volution. Le deuxi\u00e8me est le r\u00e9sultat de conventions et processus que les \u00eatres humains ont produits : parmi ces conventions il y a les r\u00e8gles d'\u00e9criture d'une adresse postale et aussi le moyen de payer le transport du colis via un ou des timbres postaux et parmi les processus il y a l'acheminement du courrier par voie routi\u00e8re, ferr\u00e9e, maritime ou a\u00e9rienne. Quant au troisi\u00e8me, il est \u00e9galement le fruit de conventions et processus tr\u00e8s aboutis que nous allons tenter de d\u00e9tailler dans ce chapitre, il fonctionne remarquablement bien et s'appelle Internet. Ce r\u00e9seau, compos\u00e9 de milliards de machines qui communiquent entre elles et qui permet \u00e0 deux ordinateurs s\u00e9par\u00e9s de milliers de kilom\u00e8tres de s'\u00e9changer une quantit\u00e9 consid\u00e9rable d'informations en une fraction de seconde est bel et bien la plus grande structure que l'\u00eatre humain ait construit \u00e0 ce jour. Elle m\u00e9rite bien qu'on s'attarde un peu sur son fonctionnement. L'id\u00e9e du mod\u00e8le \u00e0 couches empil\u00e9es \u2693\ufe0e La finalit\u00e9 d'un r\u00e9seau, quel qu'il soit, c'est transporter de la mani\u00e8re la plus fiable possible des informations (ou des biens), lesquelles sont \u00e9mises par une entit\u00e9 A, \u00e0 destination d'une entit\u00e9 B, et seront transmises en passant tr\u00e8s probablement par des entit\u00e9s interm\u00e9diaires. Le processus peut \u00eatre variable mais il existe des m\u00e9canismes communs \u00e0 la plupart des moyens de communication : on cherche \u00e0 d\u00e9composer en \u00e9tapes et les similitudes apparaissent : A poss\u00e8de une information \u00ab brute \u00bb; l'information est \u00ab conditionn\u00e9e \u00bb pour \u00eatre envoy\u00e9e; il existe un moyen fiable de savoir comment faire arriver l'information en B; en d\u00e9finitive, la transmission s'effectue par un moyen physique; du point de vue de B, les choses s'effectuent \u00ab \u00e0 l'envers \u00bb : par moyen physique, A a r\u00e9ussi \u00e0 lui faire parvenir une information \u00ab conditionn\u00e9e \u00bb que B traite pour finalement disposer de l'information brute de A. L'exemple du r\u00e9seau postal \u2693\ufe0e Les consid\u00e9rations pr\u00e9c\u00e9dentes sont tr\u00e8s abstraites, nous allons donc envisager l'exemple d'une personne A qui souhaite envoyer un cadeau \u00e0 B. L'information est le cadeau en lui m\u00eame, le r\u00e9seau est le r\u00e9seau postal : On a d\u00e9compos\u00e9 la communication en 5 couches, auxquelles on a donn\u00e9 des noms qui sont d\u00e9j\u00e0 li\u00e9s au vocabulaire des r\u00e9seaux informatiques . En voici le d\u00e9tail dans l'ordre chronologique: Communication Du point de vue de A Couche 5 - Application : A veut envoyer un cadeau \u00e0 B; Couche 4 - Transport : le cadeau est emball\u00e9 pour pouvoir \u00eatre transport\u00e9 et re\u00e7u intact. On y met aussi l'adresse postale de B; Couche 3 - R\u00e9seau : le bureau de poste d\u00e9termine comment acheminer le colis : il a d\u00e9j\u00e0 l'adresse postale de B mais il trouve par lui-m\u00eame la route qu'il fera suivre au colis; Couche 2 - Lien : La route est trouv\u00e9e mais il faut d\u00e9terminer comment transporter ce colis : si c'est par voie routi\u00e8re on doit savoir quels v\u00e9hicules capables d'acheminer le cadeau sont disponibles maintenant ou bien quels sont ceux qui le seront tr\u00e8s prochainement; Couche 1 - Physique : c'est le transport effectif du colis. Du point de vue de B Couche 1 - Physique : c'est \u00e9galement le transport effectif du colis; Couche 2 - Lien : le colis arrive au bureau postal; Couche 3 - R\u00e9seau : le bureau de poste d\u00e9termine comment acheminer le colis chez B; Couche 4 - Transport : le cadeau est arriv\u00e9 chez B qui le d\u00e9balle; Couche 5 - Application : B profite de son cadeau. L'int\u00e9r\u00eat de la d\u00e9composition en couches est qu'elle s\u00e9pare un probl\u00e8me complexe en une succession de t\u00e2ches plus simples. Chaque couche n'interagit directement qu'avec ses couches voisines (ce sont les fl\u00e8ches en trait plein) de mani\u00e8re relativement simple . L'interaction de chaque couche chez A avec la couche de m\u00eame niveau chez B est cependant plus complexe (ce sont les fl\u00e8ches en pointill\u00e9s). Couche 1 A - Couche 1 B : c'est le trajet du v\u00e9hicule qui transporte le cadeau; Couche 2 A - Couche 2 B : c'est la planification du trajet; Couche 3 A - Couche 3 B : c'est l'envoi du cadeau au niveau postal; Couche 4 A - Couche 4 B : c'est la phase emballage/d\u00e9ballage; Couche 5 A - Couche 5 B : c'est l'envoi du cadeau de A \u00e0 B. En g\u00e9n\u00e9ral un colis postal est d'un seul tenant mais on peut tr\u00e8s bien imaginer que le cadeau que A veut envoyer \u00e0 B soit tr\u00e8s volumineux (par exemple la collection des romans \u00ab Les Rougon-Macquart \u00bb d'Emile Zola qui comporte 20 livres qui se suivent). Lors de la phase d'emballage, plusieurs \u00abpaquets \u00bb sont cr\u00e9\u00e9s et envoy\u00e9s s\u00e9par\u00e9ment. B ne les re\u00e7oit pas obligatoirement dans l'ordre d'envoi mais ce n'est pas grave car il finit par avoir tous les paquets et remet les romans dans le bon ordre. Un mod\u00e8le informatique : TCP/IP \u2693\ufe0e Un ordinateur A veut envoyer des donn\u00e9es \u00e0 un ordinateur B. On supposera que ces donn\u00e9es sont un fichier . Le processus ressemble \u00e0 l'exemple pr\u00e9c\u00e9dent. On va pr\u00e9senter le mod\u00e8le le plus courant dont le nom est TCP/IP et qu'on peut \u00e9galement mod\u00e9liser avec 5 couches empil\u00e9es. On appelle protocole tout programme utilis\u00e9 par une couche. Du point de vue de l'\u00e9metteur \u2693\ufe0e Ce qu'il faut retenir c'est que lors de la transmission tr\u00e8s t\u00f4t dans le processus, le fichier est d\u00e9coup\u00e9 en paquets; chaque couche (hormis la couche application) ajoute son propre en-t\u00eate aux donn\u00e9es re\u00e7ues par la couche sup\u00e9rieure et destin\u00e9 \u00e0 la m\u00eame couche pour le destinataire. Ce proc\u00e9d\u00e9 s'appelle encapsulation . Couche 5 - Application Cette couche est charg\u00e9e d'envoyer les donn\u00e9es d'un programme sur l'ordinateur A \u00e0 un programme sur l'ordinateur B. Puisque plusieurs programmes peuvent utiliser la couche transport en m\u00eame temps, il existe 65536 ports et chaque application va utiliser un ou plusieurs ports particuliers. Les num\u00e9ros de ports sont attribu\u00e9s par convention mais il est possible de les changer. Les protocoles les plus connus sont HTTP ( HyperText Transfer Prococol ), protocole de transfert hypertexte, sur le port 80 ou 443 pour sa version s\u00e9curis\u00e9e HTTPS; FTP ( File Transfer Protocol ), protocole de transfert de fichiers, sur les ports 20 et 21, et 990 pour sa version s\u00e9curis\u00e9e FTPS; SMTP ( Simple Mal Transfer Protocol ), charg\u00e9 d'envoyer les emails et POP3 ( Post Office Protocol ) de les r\u00e9cup\u00e9rer; DNS ( Domain Name System ), charg\u00e9 de traduire un nom de site en adresse IP; BitTorrent, charg\u00e9 de r\u00e9cup\u00e9rer et diffuser des fichiers. Couche 4 - Transport Cette couche va d\u00e9couper les donn\u00e9es fournie par la couche 5 en paquets (d'une taille de l'ordre du kilooctet). Elle ajoute \u00e9galement son propre en-t\u00eate \u00e0 chaque paquet. Les protocoles les plus connus sont TCP ( Transfert Control Protocol ), protocole de contr\u00f4le des transmissions, qui est fiable, fonctionne sur le principe d'une connexion avec accus\u00e9 de r\u00e9ception. UDP ( User Datagram Protocol ), non fiable en th\u00e9orie, sans connexion ni accus\u00e9 de r\u00e9ception, mais plus rapide. On utilise TCP lorsque les donn\u00e9es \u00e0 recevoir sont sensibles (t\u00e9l\u00e9chargement d'un fichier). UDP sera pr\u00e9f\u00e9r\u00e9 dans le cas du streaming : le protocole est plus rapide et permet par exemple de visionner un film avec une bonne qualit\u00e9, et si des donn\u00e9es sont perdues, ce n'est pas grave, on passe aux donn\u00e9es suivantes, cela ne perturbe pas trop le film (on ne va pas, comme ce serait le cas pour TCP, attendre que les donn\u00e9es soient arriv\u00e9es, et faire des pauses). Couche 3 - R\u00e9seau Cette couche est responsable de l'aiguillage des paquets vers l'adresse de destination. Elle encapsule les paquets de la couche 4 et y ajoute son propre en-t\u00eate (en g\u00e9n\u00e9ral un en-t\u00eate IP). Du point de vue de cette couche, les paquets sont \u00e0 envoyer \u00e0 un ordinateur muni d'une adresse IP (nombre attribu\u00e9 par ce protocole). Pour que les paquets trouvent leur chemin de l'ordinateur A \u00e0 l'ordinateur B (qui peut \u00eatre \u00e0 plusieurs milliers de kilom\u00e8tres de A), de protocoles de routage sont utilis\u00e9s , les machines d\u00e9di\u00e9es au routage s'appellent des routeurs . Un routeur n'utilise que les couches 1,2 et 3 du mod\u00e8le. Il faut retenir que chaque paquet suit son propre chemin, ind\u00e9pendamment des autres et qu'il a un \u00abtemps de vie\u00bb (pour \u00e9viter, s'il est perdu, de circuler sur le r\u00e9seau pendant des ann\u00e9es). Parmi les protocoles utilis\u00e9s par cette couche on trouve IP ( Internet Protocol ), d\u00e9crit ci-dessus; ARP ( Address Resolution Protocol ) qui permet de trouver l'adresse physique de l'ordinateur connect\u00e9 \u00e0 l'adresse IP. Ce protocole est utilis\u00e9 lorsque l'information est arriv\u00e9e \u00e0 B et \u00abremonte les couches \u00bb. Couche 2 - Lien Elle est charg\u00e9e de coordonner le transfert des donn\u00e9es ainsi que le \u00abtemps de parole \u00bb de chaque machine connect\u00e9e au support physique (si toutes les machines connect\u00e9es \u00e0 un m\u00eame support \u00e9mettent des donn\u00e9es en m\u00eame temps, il risque d'y avoir des collisions ). Elle encapsule les paquets de la couche sup\u00e9rieure dans ce qu'on appelle des trames (trames Ethernet par exemple). Du point de vue de la couche lien, la destination d'un paquet est une adresse physique appel\u00e9e adresse MAC ( Media Access Control ), d\u00e9termin\u00e9e par la carte r\u00e9seau de la machine destinataire. Les protocoles utilis\u00e9s par cette couche sont Ethernet (r\u00e9seau filaire), Wi-Fi (r\u00e9seau via les ondes radios) et Bluetooth (ondes radio \u00e9galement). Couche 1 - Physique Elle est charg\u00e9e de la transmission effective des trames (qu'elle encapsule \u00e9galement) d'un bout \u00e0 l'autre du support physique. Du point de vue du r\u00e9cepteur \u2693\ufe0e Il faut retenir que chaque couche d\u00e9paqu\u00e8te le paquet (ou trame) qui lui est adress\u00e9 en enlevant l'en-t\u00eate correspondant et passe le relais \u00e0 la couche du dessus. Questions Mettre dans l'ordre les op\u00e9rations suivantes lors d'une requ\u00eate \u00e0 serveur web depuis un navigateur sur un ordinateur \u00e0 la maison. Certaines \u00e9tapes manquent (par exemple d'autres recherches dans les tables de routage), on les ignore pour simplifier. L'ordinateur obtient l'IP du serveur par le protocole DNS. Le serveur envoie la r\u00e9ponse \u00e0 la requ\u00eate. La box transmet la r\u00e9ponse vers l'ordinateur. Le serveur traite la requ\u00eate. L'ordinateur envoie un paquet de requ\u00eate sur le r\u00e9seau. La box transmet les paquets vers le serveur. La box cherche l'IP du serveur dans sa table de routage. Quel est l'\u00e9l\u00e9ment central d'un r\u00e9seau local? Pourquoi envoyer les donn\u00e9es en paquet? Cocher les bonnes r\u00e9ponses : propositions pour savoir toujours d'o\u00f9 viennent les donn\u00e9es Pour simplifier le renvoi en cas de perte pour plus de s\u00e9curit\u00e9 pour aller plus vite pour savoir toujours \u00e0 qui les donn\u00e9es sont envoy\u00e9es Pourquoi les donn\u00e9es sont encapsul\u00e9es ? propositions pour savoir toujours d'o\u00f9 viennent les donn\u00e9es Pour simplifier le renvoi en cas de perte pour plus de s\u00e9curit\u00e9 pour aller plus vite pour savoir toujours \u00e0 qui les donn\u00e9es sont envoy\u00e9es Le mat\u00e9riel \u2693\ufe0e Couche physique \u2693\ufe0e Liaison filiaire Les informations peuvent \u00eatre transmises via des c\u00e2bles. Le plus utilis\u00e9 est le c\u00e2ble Ethernet. Son nom est UTP-CAT5 ou UTP-CAT6, la diff\u00e9rence \u00e9tant que le second permet un d\u00e9bit dix fois plus grand que le premier ( 1 Gbit/s contre 100 Mbit/s). Parmi les autres types de liaisons filaires, on compte la liaison par c\u00e2ble t\u00e9l\u00e9phonique (qui permet par exemple de se connecter \u00e0 Internet par ADSL) et la liaison par c\u00e2ble optique. Bluetooth C'est une technologie utilisant les ondes radios pour permettre la communication entre les \u00e9quipements \u00e9lectroniques (imprimantes, t\u00e9l\u00e9phones, scanners, syst\u00e8me audio portatif ou dans un v\u00e9hicule...) \u00e0 courte distance. Ses fonctionnalit\u00e9s sont assez limit\u00e9es en terme de mise en r\u00e9seau. Wi-Fi Cette technologie utilise \u00e9galement les ondes radio. Son nom de norme est IEEE 802.11 et c'est le moyen de transmission des donn\u00e9es sans fil le plus utilis\u00e9. R\u00e9p\u00e9teur Lorsqu'un signal parcourt le support physique, son intensit\u00e9 s'att\u00e9nue avec la distance. Un r\u00e9p\u00e9teur r\u00e9g\u00e9n\u00e8re le signal per\u00e7u avec plus d'intensit\u00e9 pour pallier ce probl\u00e8me. Concentrateur Le concentrateur ( hub ) est moins utilis\u00e9 de nos jours. C'est une version \u00ab multiprise \u00bb du r\u00e9p\u00e9teur : quand il re\u00e7oit un signal sur un des ses branchements, il les recopie sur tous les autres branchements sans se soucier de l'\u00e9ventuel destinataire du signal. Carte r\u00e9seau Que ce soit une cl\u00e9 USB Wi-Fi ou une carte r\u00e9seau interne, c'est la m\u00eame chose : ce composant est indispensable pour connecter un ordinateur \u00e0 un r\u00e9seau. Chaque carte r\u00e9seau poss\u00e8de une adresse MAC : c'est l'adresse physique de la carte, elle permet d'identifier l'ordinateur de mani\u00e8re unique. Couche lien \u2693\ufe0e Commutateur Le commutateur ( switch en Anglais) est un \u00e9quipement \u00e0 plusieurs branchements (au moins 2) appel\u00e9s ports (ne pas confondre avec la notion de port utilis\u00e9 par une application). Son r\u00f4le est de rediriger une trame re\u00e7ue vers l'ordinateur de destination. Couche r\u00e9seau \u2693\ufe0e Routeur Le routeur ( router en Anglais) permet d'effectuer le routage des paquets et de les faire transiter d'une partie du r\u00e9seau vers une autre (par exemple d'un r\u00e9seau local \u00e0 un autre, nous verrons cela plus tard). Couches sup\u00e9rieures \u2693\ufe0e C'est un ordinateur qui ex\u00e9cute les protocoles des couches transport et application. Cela peut \u00eatre un t\u00e9l\u00e9phone, une tablette, un ordinateur portable ou de bureau ou bien encore un objet connect\u00e9 tel qu'une enceinte Bluetooth.","title":"Protocole TCP/IP"},{"location":"archi/reseaux/TCP_IP.html#reseau-principes","text":"Un r\u00e9seau , c'est un ensemble d' entit\u00e9s qui communiquent : des fourmis qui envoient des informations par voie chimique (les ph\u00e9romones); des individus qui s'envoient des colis postaux ou du courrier; des ordinateurs qui s'envoient des donn\u00e9es. Chacun des trois exemples ci-dessus est remarquable par son efficacit\u00e9. Le premier est sans doute le fruit de l'\u00e9volution. Le deuxi\u00e8me est le r\u00e9sultat de conventions et processus que les \u00eatres humains ont produits : parmi ces conventions il y a les r\u00e8gles d'\u00e9criture d'une adresse postale et aussi le moyen de payer le transport du colis via un ou des timbres postaux et parmi les processus il y a l'acheminement du courrier par voie routi\u00e8re, ferr\u00e9e, maritime ou a\u00e9rienne. Quant au troisi\u00e8me, il est \u00e9galement le fruit de conventions et processus tr\u00e8s aboutis que nous allons tenter de d\u00e9tailler dans ce chapitre, il fonctionne remarquablement bien et s'appelle Internet. Ce r\u00e9seau, compos\u00e9 de milliards de machines qui communiquent entre elles et qui permet \u00e0 deux ordinateurs s\u00e9par\u00e9s de milliers de kilom\u00e8tres de s'\u00e9changer une quantit\u00e9 consid\u00e9rable d'informations en une fraction de seconde est bel et bien la plus grande structure que l'\u00eatre humain ait construit \u00e0 ce jour. Elle m\u00e9rite bien qu'on s'attarde un peu sur son fonctionnement.","title":"R\u00e9seau - principes"},{"location":"archi/reseaux/TCP_IP.html#lidee-du-modele-a-couches-empilees","text":"La finalit\u00e9 d'un r\u00e9seau, quel qu'il soit, c'est transporter de la mani\u00e8re la plus fiable possible des informations (ou des biens), lesquelles sont \u00e9mises par une entit\u00e9 A, \u00e0 destination d'une entit\u00e9 B, et seront transmises en passant tr\u00e8s probablement par des entit\u00e9s interm\u00e9diaires. Le processus peut \u00eatre variable mais il existe des m\u00e9canismes communs \u00e0 la plupart des moyens de communication : on cherche \u00e0 d\u00e9composer en \u00e9tapes et les similitudes apparaissent : A poss\u00e8de une information \u00ab brute \u00bb; l'information est \u00ab conditionn\u00e9e \u00bb pour \u00eatre envoy\u00e9e; il existe un moyen fiable de savoir comment faire arriver l'information en B; en d\u00e9finitive, la transmission s'effectue par un moyen physique; du point de vue de B, les choses s'effectuent \u00ab \u00e0 l'envers \u00bb : par moyen physique, A a r\u00e9ussi \u00e0 lui faire parvenir une information \u00ab conditionn\u00e9e \u00bb que B traite pour finalement disposer de l'information brute de A.","title":"L'id\u00e9e du mod\u00e8le \u00e0 couches empil\u00e9es"},{"location":"archi/reseaux/TCP_IP.html#lexemple-du-reseau-postal","text":"Les consid\u00e9rations pr\u00e9c\u00e9dentes sont tr\u00e8s abstraites, nous allons donc envisager l'exemple d'une personne A qui souhaite envoyer un cadeau \u00e0 B. L'information est le cadeau en lui m\u00eame, le r\u00e9seau est le r\u00e9seau postal : On a d\u00e9compos\u00e9 la communication en 5 couches, auxquelles on a donn\u00e9 des noms qui sont d\u00e9j\u00e0 li\u00e9s au vocabulaire des r\u00e9seaux informatiques . En voici le d\u00e9tail dans l'ordre chronologique: Communication Du point de vue de A Couche 5 - Application : A veut envoyer un cadeau \u00e0 B; Couche 4 - Transport : le cadeau est emball\u00e9 pour pouvoir \u00eatre transport\u00e9 et re\u00e7u intact. On y met aussi l'adresse postale de B; Couche 3 - R\u00e9seau : le bureau de poste d\u00e9termine comment acheminer le colis : il a d\u00e9j\u00e0 l'adresse postale de B mais il trouve par lui-m\u00eame la route qu'il fera suivre au colis; Couche 2 - Lien : La route est trouv\u00e9e mais il faut d\u00e9terminer comment transporter ce colis : si c'est par voie routi\u00e8re on doit savoir quels v\u00e9hicules capables d'acheminer le cadeau sont disponibles maintenant ou bien quels sont ceux qui le seront tr\u00e8s prochainement; Couche 1 - Physique : c'est le transport effectif du colis. Du point de vue de B Couche 1 - Physique : c'est \u00e9galement le transport effectif du colis; Couche 2 - Lien : le colis arrive au bureau postal; Couche 3 - R\u00e9seau : le bureau de poste d\u00e9termine comment acheminer le colis chez B; Couche 4 - Transport : le cadeau est arriv\u00e9 chez B qui le d\u00e9balle; Couche 5 - Application : B profite de son cadeau. L'int\u00e9r\u00eat de la d\u00e9composition en couches est qu'elle s\u00e9pare un probl\u00e8me complexe en une succession de t\u00e2ches plus simples. Chaque couche n'interagit directement qu'avec ses couches voisines (ce sont les fl\u00e8ches en trait plein) de mani\u00e8re relativement simple . L'interaction de chaque couche chez A avec la couche de m\u00eame niveau chez B est cependant plus complexe (ce sont les fl\u00e8ches en pointill\u00e9s). Couche 1 A - Couche 1 B : c'est le trajet du v\u00e9hicule qui transporte le cadeau; Couche 2 A - Couche 2 B : c'est la planification du trajet; Couche 3 A - Couche 3 B : c'est l'envoi du cadeau au niveau postal; Couche 4 A - Couche 4 B : c'est la phase emballage/d\u00e9ballage; Couche 5 A - Couche 5 B : c'est l'envoi du cadeau de A \u00e0 B. En g\u00e9n\u00e9ral un colis postal est d'un seul tenant mais on peut tr\u00e8s bien imaginer que le cadeau que A veut envoyer \u00e0 B soit tr\u00e8s volumineux (par exemple la collection des romans \u00ab Les Rougon-Macquart \u00bb d'Emile Zola qui comporte 20 livres qui se suivent). Lors de la phase d'emballage, plusieurs \u00abpaquets \u00bb sont cr\u00e9\u00e9s et envoy\u00e9s s\u00e9par\u00e9ment. B ne les re\u00e7oit pas obligatoirement dans l'ordre d'envoi mais ce n'est pas grave car il finit par avoir tous les paquets et remet les romans dans le bon ordre.","title":"L'exemple du r\u00e9seau postal"},{"location":"archi/reseaux/TCP_IP.html#un-modele-informatique-tcpip","text":"Un ordinateur A veut envoyer des donn\u00e9es \u00e0 un ordinateur B. On supposera que ces donn\u00e9es sont un fichier . Le processus ressemble \u00e0 l'exemple pr\u00e9c\u00e9dent. On va pr\u00e9senter le mod\u00e8le le plus courant dont le nom est TCP/IP et qu'on peut \u00e9galement mod\u00e9liser avec 5 couches empil\u00e9es. On appelle protocole tout programme utilis\u00e9 par une couche.","title":"Un mod\u00e8le informatique : TCP/IP"},{"location":"archi/reseaux/TCP_IP.html#du-point-de-vue-de-lemetteur","text":"Ce qu'il faut retenir c'est que lors de la transmission tr\u00e8s t\u00f4t dans le processus, le fichier est d\u00e9coup\u00e9 en paquets; chaque couche (hormis la couche application) ajoute son propre en-t\u00eate aux donn\u00e9es re\u00e7ues par la couche sup\u00e9rieure et destin\u00e9 \u00e0 la m\u00eame couche pour le destinataire. Ce proc\u00e9d\u00e9 s'appelle encapsulation . Couche 5 - Application Cette couche est charg\u00e9e d'envoyer les donn\u00e9es d'un programme sur l'ordinateur A \u00e0 un programme sur l'ordinateur B. Puisque plusieurs programmes peuvent utiliser la couche transport en m\u00eame temps, il existe 65536 ports et chaque application va utiliser un ou plusieurs ports particuliers. Les num\u00e9ros de ports sont attribu\u00e9s par convention mais il est possible de les changer. Les protocoles les plus connus sont HTTP ( HyperText Transfer Prococol ), protocole de transfert hypertexte, sur le port 80 ou 443 pour sa version s\u00e9curis\u00e9e HTTPS; FTP ( File Transfer Protocol ), protocole de transfert de fichiers, sur les ports 20 et 21, et 990 pour sa version s\u00e9curis\u00e9e FTPS; SMTP ( Simple Mal Transfer Protocol ), charg\u00e9 d'envoyer les emails et POP3 ( Post Office Protocol ) de les r\u00e9cup\u00e9rer; DNS ( Domain Name System ), charg\u00e9 de traduire un nom de site en adresse IP; BitTorrent, charg\u00e9 de r\u00e9cup\u00e9rer et diffuser des fichiers. Couche 4 - Transport Cette couche va d\u00e9couper les donn\u00e9es fournie par la couche 5 en paquets (d'une taille de l'ordre du kilooctet). Elle ajoute \u00e9galement son propre en-t\u00eate \u00e0 chaque paquet. Les protocoles les plus connus sont TCP ( Transfert Control Protocol ), protocole de contr\u00f4le des transmissions, qui est fiable, fonctionne sur le principe d'une connexion avec accus\u00e9 de r\u00e9ception. UDP ( User Datagram Protocol ), non fiable en th\u00e9orie, sans connexion ni accus\u00e9 de r\u00e9ception, mais plus rapide. On utilise TCP lorsque les donn\u00e9es \u00e0 recevoir sont sensibles (t\u00e9l\u00e9chargement d'un fichier). UDP sera pr\u00e9f\u00e9r\u00e9 dans le cas du streaming : le protocole est plus rapide et permet par exemple de visionner un film avec une bonne qualit\u00e9, et si des donn\u00e9es sont perdues, ce n'est pas grave, on passe aux donn\u00e9es suivantes, cela ne perturbe pas trop le film (on ne va pas, comme ce serait le cas pour TCP, attendre que les donn\u00e9es soient arriv\u00e9es, et faire des pauses). Couche 3 - R\u00e9seau Cette couche est responsable de l'aiguillage des paquets vers l'adresse de destination. Elle encapsule les paquets de la couche 4 et y ajoute son propre en-t\u00eate (en g\u00e9n\u00e9ral un en-t\u00eate IP). Du point de vue de cette couche, les paquets sont \u00e0 envoyer \u00e0 un ordinateur muni d'une adresse IP (nombre attribu\u00e9 par ce protocole). Pour que les paquets trouvent leur chemin de l'ordinateur A \u00e0 l'ordinateur B (qui peut \u00eatre \u00e0 plusieurs milliers de kilom\u00e8tres de A), de protocoles de routage sont utilis\u00e9s , les machines d\u00e9di\u00e9es au routage s'appellent des routeurs . Un routeur n'utilise que les couches 1,2 et 3 du mod\u00e8le. Il faut retenir que chaque paquet suit son propre chemin, ind\u00e9pendamment des autres et qu'il a un \u00abtemps de vie\u00bb (pour \u00e9viter, s'il est perdu, de circuler sur le r\u00e9seau pendant des ann\u00e9es). Parmi les protocoles utilis\u00e9s par cette couche on trouve IP ( Internet Protocol ), d\u00e9crit ci-dessus; ARP ( Address Resolution Protocol ) qui permet de trouver l'adresse physique de l'ordinateur connect\u00e9 \u00e0 l'adresse IP. Ce protocole est utilis\u00e9 lorsque l'information est arriv\u00e9e \u00e0 B et \u00abremonte les couches \u00bb. Couche 2 - Lien Elle est charg\u00e9e de coordonner le transfert des donn\u00e9es ainsi que le \u00abtemps de parole \u00bb de chaque machine connect\u00e9e au support physique (si toutes les machines connect\u00e9es \u00e0 un m\u00eame support \u00e9mettent des donn\u00e9es en m\u00eame temps, il risque d'y avoir des collisions ). Elle encapsule les paquets de la couche sup\u00e9rieure dans ce qu'on appelle des trames (trames Ethernet par exemple). Du point de vue de la couche lien, la destination d'un paquet est une adresse physique appel\u00e9e adresse MAC ( Media Access Control ), d\u00e9termin\u00e9e par la carte r\u00e9seau de la machine destinataire. Les protocoles utilis\u00e9s par cette couche sont Ethernet (r\u00e9seau filaire), Wi-Fi (r\u00e9seau via les ondes radios) et Bluetooth (ondes radio \u00e9galement). Couche 1 - Physique Elle est charg\u00e9e de la transmission effective des trames (qu'elle encapsule \u00e9galement) d'un bout \u00e0 l'autre du support physique.","title":"Du point de vue de l'\u00e9metteur"},{"location":"archi/reseaux/TCP_IP.html#du-point-de-vue-du-recepteur","text":"Il faut retenir que chaque couche d\u00e9paqu\u00e8te le paquet (ou trame) qui lui est adress\u00e9 en enlevant l'en-t\u00eate correspondant et passe le relais \u00e0 la couche du dessus. Questions Mettre dans l'ordre les op\u00e9rations suivantes lors d'une requ\u00eate \u00e0 serveur web depuis un navigateur sur un ordinateur \u00e0 la maison. Certaines \u00e9tapes manquent (par exemple d'autres recherches dans les tables de routage), on les ignore pour simplifier. L'ordinateur obtient l'IP du serveur par le protocole DNS. Le serveur envoie la r\u00e9ponse \u00e0 la requ\u00eate. La box transmet la r\u00e9ponse vers l'ordinateur. Le serveur traite la requ\u00eate. L'ordinateur envoie un paquet de requ\u00eate sur le r\u00e9seau. La box transmet les paquets vers le serveur. La box cherche l'IP du serveur dans sa table de routage. Quel est l'\u00e9l\u00e9ment central d'un r\u00e9seau local? Pourquoi envoyer les donn\u00e9es en paquet? Cocher les bonnes r\u00e9ponses : propositions pour savoir toujours d'o\u00f9 viennent les donn\u00e9es Pour simplifier le renvoi en cas de perte pour plus de s\u00e9curit\u00e9 pour aller plus vite pour savoir toujours \u00e0 qui les donn\u00e9es sont envoy\u00e9es Pourquoi les donn\u00e9es sont encapsul\u00e9es ? propositions pour savoir toujours d'o\u00f9 viennent les donn\u00e9es Pour simplifier le renvoi en cas de perte pour plus de s\u00e9curit\u00e9 pour aller plus vite pour savoir toujours \u00e0 qui les donn\u00e9es sont envoy\u00e9es","title":"Du point de vue du r\u00e9cepteur"},{"location":"archi/reseaux/TCP_IP.html#le-materiel","text":"","title":"Le mat\u00e9riel"},{"location":"archi/reseaux/TCP_IP.html#couche-physique","text":"Liaison filiaire Les informations peuvent \u00eatre transmises via des c\u00e2bles. Le plus utilis\u00e9 est le c\u00e2ble Ethernet. Son nom est UTP-CAT5 ou UTP-CAT6, la diff\u00e9rence \u00e9tant que le second permet un d\u00e9bit dix fois plus grand que le premier ( 1 Gbit/s contre 100 Mbit/s). Parmi les autres types de liaisons filaires, on compte la liaison par c\u00e2ble t\u00e9l\u00e9phonique (qui permet par exemple de se connecter \u00e0 Internet par ADSL) et la liaison par c\u00e2ble optique. Bluetooth C'est une technologie utilisant les ondes radios pour permettre la communication entre les \u00e9quipements \u00e9lectroniques (imprimantes, t\u00e9l\u00e9phones, scanners, syst\u00e8me audio portatif ou dans un v\u00e9hicule...) \u00e0 courte distance. Ses fonctionnalit\u00e9s sont assez limit\u00e9es en terme de mise en r\u00e9seau. Wi-Fi Cette technologie utilise \u00e9galement les ondes radio. Son nom de norme est IEEE 802.11 et c'est le moyen de transmission des donn\u00e9es sans fil le plus utilis\u00e9. R\u00e9p\u00e9teur Lorsqu'un signal parcourt le support physique, son intensit\u00e9 s'att\u00e9nue avec la distance. Un r\u00e9p\u00e9teur r\u00e9g\u00e9n\u00e8re le signal per\u00e7u avec plus d'intensit\u00e9 pour pallier ce probl\u00e8me. Concentrateur Le concentrateur ( hub ) est moins utilis\u00e9 de nos jours. C'est une version \u00ab multiprise \u00bb du r\u00e9p\u00e9teur : quand il re\u00e7oit un signal sur un des ses branchements, il les recopie sur tous les autres branchements sans se soucier de l'\u00e9ventuel destinataire du signal. Carte r\u00e9seau Que ce soit une cl\u00e9 USB Wi-Fi ou une carte r\u00e9seau interne, c'est la m\u00eame chose : ce composant est indispensable pour connecter un ordinateur \u00e0 un r\u00e9seau. Chaque carte r\u00e9seau poss\u00e8de une adresse MAC : c'est l'adresse physique de la carte, elle permet d'identifier l'ordinateur de mani\u00e8re unique.","title":"Couche physique"},{"location":"archi/reseaux/TCP_IP.html#couche-lien","text":"Commutateur Le commutateur ( switch en Anglais) est un \u00e9quipement \u00e0 plusieurs branchements (au moins 2) appel\u00e9s ports (ne pas confondre avec la notion de port utilis\u00e9 par une application). Son r\u00f4le est de rediriger une trame re\u00e7ue vers l'ordinateur de destination.","title":"Couche lien"},{"location":"archi/reseaux/TCP_IP.html#couche-reseau","text":"Routeur Le routeur ( router en Anglais) permet d'effectuer le routage des paquets et de les faire transiter d'une partie du r\u00e9seau vers une autre (par exemple d'un r\u00e9seau local \u00e0 un autre, nous verrons cela plus tard).","title":"Couche r\u00e9seau"},{"location":"archi/reseaux/TCP_IP.html#couches-superieures","text":"C'est un ordinateur qui ex\u00e9cute les protocoles des couches transport et application. Cela peut \u00eatre un t\u00e9l\u00e9phone, une tablette, un ordinateur portable ou de bureau ou bien encore un objet connect\u00e9 tel qu'une enceinte Bluetooth.","title":"Couches sup\u00e9rieures"},{"location":"archi/reseaux/reseau.html","text":"Qu'est-ce qu'un r\u00e9seau? \u2693\ufe0e Construire un r\u00e9seau \u2693\ufe0e Il est possible de faire communiquer deux ordinateurs en les reliant par un simple c\u00e2ble. On dit alors que ces deux ordinateurs sont en r\u00e9seau. Dans la plupart des cas, le c\u00e2ble reliant les 2 ordinateurs est un c\u00e2ble Ethernet. Ce type de c\u00e2ble poss\u00e8de \u00e0 ses 2 extr\u00e9mit\u00e9s des prises RJ45 (il existe d'autres types de c\u00e2bles qui permettent de mettre 2 ordinateurs en r\u00e9seau, mais l'utilisation de c\u00e2bles Ethernet est tellement majoritaire que nous ne nous int\u00e9resserons pas aux autres types de c\u00e2bles). Un ordinateur reli\u00e9 \u00e0 un r\u00e9seau doit poss\u00e9der une carte r\u00e9seau, on identifie cette carte r\u00e9seau de type Ethernet gr\u00e2ce \u00e0 la prise RJ45 femelle situ\u00e9e souvent \u00e0 l'arri\u00e8re de l'ordinateur. Relier 2 ordinateurs peut avoir un int\u00e9r\u00eat, mais dans la plupart des cas, un r\u00e9seau sera constitu\u00e9 d'un plus grand nombre d'ordinateurs. Dans ce cas, il est n\u00e9cessaire d'utiliser un commutateur r\u00e9seau, souvent appel\u00e9 switch (m\u00eame en fran\u00e7ais). Un switch est constitu\u00e9 de plusieurs prises RJ45. Chaque ordinateur doit \u00eatre reli\u00e9 au switch par l'interm\u00e9diaire d'un c\u00e2ble Ethernet. Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C et D sont en r\u00e9seau, chaque ordinateur peut communiquer avec les 3 autres. Les switchs ayant un nombre de prises RJ45 limit\u00e9, il peut \u00eatre n\u00e9cessaire d'utiliser plusieurs switchs dans un m\u00eame r\u00e9seau. exemple Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C, D et E sont en r\u00e9seau. A, B et C sont reli\u00e9s \u00e0 un switch, D et E sont reli\u00e9s \u00e0 un autre switch. Les 2 switchs \u00e9tant reli\u00e9s ensemble. Depuis le d\u00e9but nous avons uniquement parl\u00e9 de r\u00e9seaux filaires (les diff\u00e9rents composants du r\u00e9seau sont reli\u00e9s par des c\u00e2bles), il est aussi possible de mettre plusieurs machines en r\u00e9seau gr\u00e2ce \u00e0 des technologies sans fil (utilisation des ondes radio pour transmettre l'information entre les diff\u00e9rents composants du r\u00e9seau), par exemple, le wifi (il existe d'autres technologies sans fil que le wifi, mais elles ne seront abord\u00e9es ici). Chaque ordinateur appartenant au r\u00e9seau sans fil devra poss\u00e9der une carte r\u00e9seau wifi (aujourd'hui tous les ordinateurs portables vendus sont par d\u00e9faut \u00e9quip\u00e9s d'une telle carte). Il sera n\u00e9cessaire d'utiliser un concentrateur wifi (\u00e9quivalent du switch en filaire) si l'on d\u00e9sire mettre en r\u00e9seau plus de deux ordinateurs. L'adresse IP \u2693\ufe0e Maintenant que nos ordinateurs sont reli\u00e9s par l'interm\u00e9diaire d'un switch (ou d'un concentrateur wifi), imaginons que l'ordinateur A \"souhaite\" entrer en communication avec l'ordinateur C. Quand vous d\u00e9sirez communiquer avec quelqu'un par voie postale, il est n\u00e9cessaire d'\u00e9crire l'adresse de cette personne sur une enveloppe, \u00e0 chaque habitation correspond donc une adresse postale. Et bien c'est un peu la m\u00eame chose pour les ordinateurs en r\u00e9seau, chaque machine poss\u00e8de une adresse. Pendant tr\u00e8s longtemps il a exist\u00e9 diff\u00e9rentes technologies de r\u00e9seau et donc diff\u00e9rents types d'adresse. Aujourd'hui, on trouve presque exclusivement qu'un seul type d'adresse : les adresses IP (nous \u00e9tudierons donc uniquement ce type d'adresse). Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet). Voici un exemple d'adresse IP : 192.168.0.1 Une partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau. Exemple : Soit un ordinateur A ayant pour adresse IP 192.168.2.1 Dans cette adresse IP \"192.168.2\" permet d\u2019identifier le r\u00e9seau (on dit que la machine A appartient au r\u00e9seau ayant pour adresse 192.168.2.0, pour trouver l'adresse r\u00e9seau il suffit de remplacer la partie \"machine\" de cette adresse IP par un ou des 0) et \"1\" permet d\u2019identifier la machine sur le r\u00e9seau. Toutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer ensemble, m\u00eame si elles sont bien physiquement reli\u00e9es). Prenons 2 exemples, soit 2 machines A et B en r\u00e9seau : example1 la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.2.8. Les 3 premiers octets sont bien identiques (\"192.168.2\"), A et B ont donc la m\u00eame adresse r\u00e9seau \"192.168.2.0\". Ces 2 machines pourront donc communiquer ensemble exemple 2 la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.3.8. Les 3 premiers octets ne sont pas identiques (\"192.168.2\" pour A et \"192.168.3\" pour B), A et B n'ont pas la m\u00eame adresse r\u00e9seau (\"192.168.2.0\" pour A et \"192.168.3.0\" pour B). Ces 2 machines ne pourront donc pas communiquer ensemble Attention Les adresses IP (a.b.c.d) n\u2019ont forc\u00e9ment pas les parties a, b et c consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau : on rajoute souvent \u00e0 l'adresse IP un \"/\" suivit du nombre 8, 16 ou 24. si ce nombre est 8 (exemple : 192.168.2.1/8), cela signifie que pour une adresse a.b.c.d/8, la partie a est consacr\u00e9e \u00e0 l'adresse r\u00e9seau, le reste (b, c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.0.0.0 si ce nombre est 16 (exemple : 192.168.2.1/16), cela signifie que pour une adresse a.b.c.d/16, les parties a et b sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.0.0 si ce nombre est 24 (exemple : 192.168.2.1/24), cela signifie que pour une adresse a.b.c.d/24, les parties a, b et c sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.c.0 Vous avez sans doute d\u00e9j\u00e0 compris que le 8 signifie que les 8 premiers bits (le premier octet) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a), que le 16 signifie que les 16 premiers bits (les deux premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a.b) et que le 24 signifie que les 24 premiers bits (les 3 premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a.b.c). En fait, il est possible d'avoir autre chose que /8, /16 ou /24 (on peut par exemple trouver /10 ou /17...), mais ces cas font intervenir la notion de masque de sous-r\u00e9seau qui n'est pas au programme de NSI. Questions Vous r\u00e9pondrez aux questions dans le questionnaires pronote associ\u00e9. 1. D\u00e9terminer l'adresse r\u00e9seau partir de l'Ip suivante 147.12.1.24/16. 2. D\u00e9terminer l'adresse r\u00e9seau partir de l'Ip suivante 192.168.2.45/24. 3. D\u00e9terminer l'adresse r\u00e9seau \u00e0 partir de l'IP suivante 5.23.65.87/8. 4. Soit 2 machines A et B connect\u00e9es \u00e0 un switch, dites dans quels cas ces 2 machines pourront communiquer ensemble : propositions adresse IP de A : 24.2.8.127/8 ; adresse IP de B : 24.23.5.52/8 adresse IP de A : 193.28.7.2/24 ; adresse IP de B : 193.28.8.3/24 adresse IP de A : 172.23.4.7/16 ; adresse IP de B : 172.23.5.8/16 Les adresses IP priv\u00e9es et publiques \u2693\ufe0e On a vu l'importance de l'adresse IP d'un ordinateur dans le r\u00f4le de la communication. D\u00e9finition : Adresse IP Une adresse IP (version 4) est la donn\u00e9e de 4 octets. On les note s\u00e9par\u00e9s par des points. Il y a 5 classes d'adresse IP, not\u00e9es A, B, C, D et E et les 3 premi\u00e8res classes disposent d'adresses IP (on abr\u00e8gera en IP) publiques et priv\u00e9es. Voici des exemples: 74.125.21.138 est \u00e0 ce jour une IP permettant d'acc\u00e9der au site du moteur de recherche de Google. C'est une IP publique , accessible par tout le monde via Internet. 192.168.1.47 est l'IP de l'ordinateur sur lequel j'\u00e9cris ces lignes. C'est une IP priv\u00e9e : elle n'est accessible que par les ordinateurs de mon propre r\u00e9seau domestique. Elle n'est d'ailleurs pas unique non plus dans le sens o\u00f9 d'autre r\u00e9seaux domestiques utilisent cette IP. lorsque je veux voir mon IP publique, je vais par exemple consulter ce site et je trouve une adresse diff\u00e9rente : 90.59.223.xxx (permettez moi de garder mon adresse IP secr\u00e8te). Une adresse IP publique, c'est un peu comme une adresse postale publique : elle identifie de mani\u00e8re unique une machine (qui peut \u00eatre une box jouant le r\u00f4le de routeur vers un r\u00e9seau domestique). Dans un r\u00e9seau local, une adresse priv\u00e9e, c'est un peu comme dans une ville, le num\u00e9ro et le nom de la rue (sans la ville ni le pays) : il y a sans doute beaucoup d'adresses qui commencent par \u00ab 24 rue des oliviers \u00bb. Si le r\u00e9seau postal ne concerne que la ville de Rennes, cette adresse est suffisante, mais si je cherche \u00e0 envoyer du courrier au 24 rue des oliviers sans pr\u00e9ciser la ville, cela ne marchera pas. Remarque 4 octets pour une adresse IP, c'\u00e9tait bien il y a 30 ans, \u00e7a l'est beaucoup moins de nos jours ! \\(2^{32}=\\) 4 294 967 296, donc vu le nombre de machines croissant en fonctionnement simultan\u00e9 sur Terre, il est impossible d'attribuer une IP unique \u00e0 chaque ordinateur connect\u00e9 \u00e0 Internet, d'o\u00f9 l'importance du LAN. Pour pallier le probl\u00e8me, une norme IP version 6, plus performante, sur 128 bits au lieu de 32, a vu le jour mais peine encore \u00e0 s'imposer. Petit calcul Compte tenu de ce qui est dit plus haut, combien d'adresses IP diff\u00e9retes peut fournir la norme IPv6 ? Voici les plages d'IP et d'IP priv\u00e9es selon les classes : Classe A : de l\u2019adresse IP 0.0.0.0 \u00e0 126.255.255.255. Adresses priv\u00e9es : de 10.0.0.0 \u00e0 10.255.255.255 (avec 16 millions d\u2019adresses possibles au sein d'un r\u00e9seau local) Classe B : de l\u2019adresse IP 128.0.0.0 \u00e0 191.255.255.255. Adresses priv\u00e9es : 172.16.0.0 \u00e0 172.31.255.255 (avec 65535 adresses possibles au sein d'un r\u00e9seau local) Classe C : de l\u2019adresse IP 192.0.0.0 \u00e0 223.255.255.255 Adresses priv\u00e9es C : 192.168.1.0 \u00e0 192.168.255.255 (255 adresses possibles dans un r\u00e9seau local) Classe D (r\u00e9serv\u00e9e) : de l\u2019adresse IP 224.0.0.0 \u00e0 239.255.255.255 Ces adresses sont r\u00e9serv\u00e9es pour le multicast . Classe E (r\u00e9serv\u00e9e) : de l\u2019adresse IP 240.0.0.0 \u00e0 255.255.255.255 Ces adresses sont r\u00e9serv\u00e9s par l' IANA Mon adresse IP publique est une IP de classe A, mon IP priv\u00e9e est de taille C, ce que je comprends parfaitement puisque mon r\u00e9seau domestique ne contiendra qu'une dizaine de terminaux tout au plus. L'exemple du r\u00e9seau local traditionnel \u2693\ufe0e Lorsqu'on met en place un r\u00e9seau local, on commence par d\u00e9terminer sa taille. Il y a beaucoup de chances qu'on ait moins de 256 machines \u00e0 connecter donc on va choisir une IP publique de classe C : je choisis de prendre pour adresse r\u00e9seau 192.168.1.0, ce n'est pas une IP attribu\u00e9e \u00e0 une machine, elle d\u00e9signe mon r\u00e9seau local; le masque de sous-r\u00e9seau par d\u00e9faut est 255.255.255.0, ce qui signifie que les 3 premiers octets des machines de mon r\u00e9seau sont \u00ab bloqu\u00e9s \u00bb et donc que les machines vont avoir des adresses du type 192.168.1.xx; je peux attribuer des IP aux machines que je veux connecter, par exemple 192.168.1.1 pour la premi\u00e8re, et caetera; la derni\u00e8re IP 192.168.1.255 est interdite, elle est r\u00e9serv\u00e9e pour adresser un message \u00e0 l'ensemble des machines du r\u00e9seau (on appelle ceci broadcast ). Remarque Prenons le cas d'un foyer qui utilise le FAI Orange. Par d\u00e9faut le r\u00e9seau local est 192.168.1.0. avec pour masque 255.255.255.0. La LiveBox, qui fait office de switch et de routeur, a pour adresse 192.168.1.1. C'est cette adresse qui est utilis\u00e9e comme passerelle pour acc\u00e9der \u00e0 internet : La commande ipconfig de Windows ( ifconfig sous Linux et Mac) me permet de retrouver ces informations ainsi que mon IP priv\u00e9e. Utilise l'invite de commande de ton syst\u00e8me d'exploitation (touche Win et taper cmd pour Windows, Terminal sous MacOS) et trouve l'IP de ton ordinateur, le masque de sous-r\u00e9seau et l'adresse de la passerelle. question Combien de machines peut-on trouver au maximum dans un r\u00e9seau d'adresse r\u00e9seau 192.168.2.0/24 ? Combien de machines peut-on trouver au maximum dans un r\u00e9seau d'adresse r\u00e9seau 176.24.0.0/16 ?","title":"Qu'est-ce qu'un r\u00e9seau"},{"location":"archi/reseaux/reseau.html#quest-ce-quun-reseau","text":"","title":"Qu'est-ce qu'un r\u00e9seau?"},{"location":"archi/reseaux/reseau.html#construire-un-reseau","text":"Il est possible de faire communiquer deux ordinateurs en les reliant par un simple c\u00e2ble. On dit alors que ces deux ordinateurs sont en r\u00e9seau. Dans la plupart des cas, le c\u00e2ble reliant les 2 ordinateurs est un c\u00e2ble Ethernet. Ce type de c\u00e2ble poss\u00e8de \u00e0 ses 2 extr\u00e9mit\u00e9s des prises RJ45 (il existe d'autres types de c\u00e2bles qui permettent de mettre 2 ordinateurs en r\u00e9seau, mais l'utilisation de c\u00e2bles Ethernet est tellement majoritaire que nous ne nous int\u00e9resserons pas aux autres types de c\u00e2bles). Un ordinateur reli\u00e9 \u00e0 un r\u00e9seau doit poss\u00e9der une carte r\u00e9seau, on identifie cette carte r\u00e9seau de type Ethernet gr\u00e2ce \u00e0 la prise RJ45 femelle situ\u00e9e souvent \u00e0 l'arri\u00e8re de l'ordinateur. Relier 2 ordinateurs peut avoir un int\u00e9r\u00eat, mais dans la plupart des cas, un r\u00e9seau sera constitu\u00e9 d'un plus grand nombre d'ordinateurs. Dans ce cas, il est n\u00e9cessaire d'utiliser un commutateur r\u00e9seau, souvent appel\u00e9 switch (m\u00eame en fran\u00e7ais). Un switch est constitu\u00e9 de plusieurs prises RJ45. Chaque ordinateur doit \u00eatre reli\u00e9 au switch par l'interm\u00e9diaire d'un c\u00e2ble Ethernet. Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C et D sont en r\u00e9seau, chaque ordinateur peut communiquer avec les 3 autres. Les switchs ayant un nombre de prises RJ45 limit\u00e9, il peut \u00eatre n\u00e9cessaire d'utiliser plusieurs switchs dans un m\u00eame r\u00e9seau. exemple Dans l'exemple du sch\u00e9ma ci-dessus, les ordinateurs A, B, C, D et E sont en r\u00e9seau. A, B et C sont reli\u00e9s \u00e0 un switch, D et E sont reli\u00e9s \u00e0 un autre switch. Les 2 switchs \u00e9tant reli\u00e9s ensemble. Depuis le d\u00e9but nous avons uniquement parl\u00e9 de r\u00e9seaux filaires (les diff\u00e9rents composants du r\u00e9seau sont reli\u00e9s par des c\u00e2bles), il est aussi possible de mettre plusieurs machines en r\u00e9seau gr\u00e2ce \u00e0 des technologies sans fil (utilisation des ondes radio pour transmettre l'information entre les diff\u00e9rents composants du r\u00e9seau), par exemple, le wifi (il existe d'autres technologies sans fil que le wifi, mais elles ne seront abord\u00e9es ici). Chaque ordinateur appartenant au r\u00e9seau sans fil devra poss\u00e9der une carte r\u00e9seau wifi (aujourd'hui tous les ordinateurs portables vendus sont par d\u00e9faut \u00e9quip\u00e9s d'une telle carte). Il sera n\u00e9cessaire d'utiliser un concentrateur wifi (\u00e9quivalent du switch en filaire) si l'on d\u00e9sire mettre en r\u00e9seau plus de deux ordinateurs.","title":"Construire un r\u00e9seau"},{"location":"archi/reseaux/reseau.html#ladresse-ip","text":"Maintenant que nos ordinateurs sont reli\u00e9s par l'interm\u00e9diaire d'un switch (ou d'un concentrateur wifi), imaginons que l'ordinateur A \"souhaite\" entrer en communication avec l'ordinateur C. Quand vous d\u00e9sirez communiquer avec quelqu'un par voie postale, il est n\u00e9cessaire d'\u00e9crire l'adresse de cette personne sur une enveloppe, \u00e0 chaque habitation correspond donc une adresse postale. Et bien c'est un peu la m\u00eame chose pour les ordinateurs en r\u00e9seau, chaque machine poss\u00e8de une adresse. Pendant tr\u00e8s longtemps il a exist\u00e9 diff\u00e9rentes technologies de r\u00e9seau et donc diff\u00e9rents types d'adresse. Aujourd'hui, on trouve presque exclusivement qu'un seul type d'adresse : les adresses IP (nous \u00e9tudierons donc uniquement ce type d'adresse). Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255 (a, b, c et d sont cod\u00e9s sur 1 octet). Voici un exemple d'adresse IP : 192.168.0.1 Une partie de l\u2019adresse IP permet d\u2019identifier le r\u00e9seau auquel appartient la machine et l\u2019autre partie de l\u2019adresse IP permet d\u2019identifier la machine sur ce r\u00e9seau. Exemple : Soit un ordinateur A ayant pour adresse IP 192.168.2.1 Dans cette adresse IP \"192.168.2\" permet d\u2019identifier le r\u00e9seau (on dit que la machine A appartient au r\u00e9seau ayant pour adresse 192.168.2.0, pour trouver l'adresse r\u00e9seau il suffit de remplacer la partie \"machine\" de cette adresse IP par un ou des 0) et \"1\" permet d\u2019identifier la machine sur le r\u00e9seau. Toutes les machines appartenant au m\u00eame r\u00e9seau devront poss\u00e9der la m\u00eame adresse r\u00e9seau (sinon elles ne pourront pas communiquer ensemble, m\u00eame si elles sont bien physiquement reli\u00e9es). Prenons 2 exemples, soit 2 machines A et B en r\u00e9seau : example1 la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.2.8. Les 3 premiers octets sont bien identiques (\"192.168.2\"), A et B ont donc la m\u00eame adresse r\u00e9seau \"192.168.2.0\". Ces 2 machines pourront donc communiquer ensemble exemple 2 la machine A a pour adresse IP 192.168.2.5 et la machine B a pour adresse IP 192.168.3.8. Les 3 premiers octets ne sont pas identiques (\"192.168.2\" pour A et \"192.168.3\" pour B), A et B n'ont pas la m\u00eame adresse r\u00e9seau (\"192.168.2.0\" pour A et \"192.168.3.0\" pour B). Ces 2 machines ne pourront donc pas communiquer ensemble Attention Les adresses IP (a.b.c.d) n\u2019ont forc\u00e9ment pas les parties a, b et c consacr\u00e9es \u00e0 l\u2019identification du r\u00e9seau et la partie d consacr\u00e9es \u00e0 l\u2019identification des machines sur le r\u00e9seau : on rajoute souvent \u00e0 l'adresse IP un \"/\" suivit du nombre 8, 16 ou 24. si ce nombre est 8 (exemple : 192.168.2.1/8), cela signifie que pour une adresse a.b.c.d/8, la partie a est consacr\u00e9e \u00e0 l'adresse r\u00e9seau, le reste (b, c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.0.0.0 si ce nombre est 16 (exemple : 192.168.2.1/16), cela signifie que pour une adresse a.b.c.d/16, les parties a et b sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (c, d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.0.0 si ce nombre est 24 (exemple : 192.168.2.1/24), cela signifie que pour une adresse a.b.c.d/24, les parties a, b et c sont consacr\u00e9es \u00e0 l'adresse r\u00e9seau, le reste (d) est consacr\u00e9 \u00e0 la partie machine de l'adresse IP. On aura donc une adresse r\u00e9seau de la forme a.b.c.0 Vous avez sans doute d\u00e9j\u00e0 compris que le 8 signifie que les 8 premiers bits (le premier octet) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a), que le 16 signifie que les 16 premiers bits (les deux premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a.b) et que le 24 signifie que les 24 premiers bits (les 3 premiers octets) sont consacr\u00e9s \u00e0 la partie r\u00e9seau (a.b.c). En fait, il est possible d'avoir autre chose que /8, /16 ou /24 (on peut par exemple trouver /10 ou /17...), mais ces cas font intervenir la notion de masque de sous-r\u00e9seau qui n'est pas au programme de NSI. Questions Vous r\u00e9pondrez aux questions dans le questionnaires pronote associ\u00e9. 1. D\u00e9terminer l'adresse r\u00e9seau partir de l'Ip suivante 147.12.1.24/16. 2. D\u00e9terminer l'adresse r\u00e9seau partir de l'Ip suivante 192.168.2.45/24. 3. D\u00e9terminer l'adresse r\u00e9seau \u00e0 partir de l'IP suivante 5.23.65.87/8. 4. Soit 2 machines A et B connect\u00e9es \u00e0 un switch, dites dans quels cas ces 2 machines pourront communiquer ensemble : propositions adresse IP de A : 24.2.8.127/8 ; adresse IP de B : 24.23.5.52/8 adresse IP de A : 193.28.7.2/24 ; adresse IP de B : 193.28.8.3/24 adresse IP de A : 172.23.4.7/16 ; adresse IP de B : 172.23.5.8/16","title":"L'adresse IP"},{"location":"archi/reseaux/reseau.html#les-adresses-ip-privees-et-publiques","text":"On a vu l'importance de l'adresse IP d'un ordinateur dans le r\u00f4le de la communication. D\u00e9finition : Adresse IP Une adresse IP (version 4) est la donn\u00e9e de 4 octets. On les note s\u00e9par\u00e9s par des points. Il y a 5 classes d'adresse IP, not\u00e9es A, B, C, D et E et les 3 premi\u00e8res classes disposent d'adresses IP (on abr\u00e8gera en IP) publiques et priv\u00e9es. Voici des exemples: 74.125.21.138 est \u00e0 ce jour une IP permettant d'acc\u00e9der au site du moteur de recherche de Google. C'est une IP publique , accessible par tout le monde via Internet. 192.168.1.47 est l'IP de l'ordinateur sur lequel j'\u00e9cris ces lignes. C'est une IP priv\u00e9e : elle n'est accessible que par les ordinateurs de mon propre r\u00e9seau domestique. Elle n'est d'ailleurs pas unique non plus dans le sens o\u00f9 d'autre r\u00e9seaux domestiques utilisent cette IP. lorsque je veux voir mon IP publique, je vais par exemple consulter ce site et je trouve une adresse diff\u00e9rente : 90.59.223.xxx (permettez moi de garder mon adresse IP secr\u00e8te). Une adresse IP publique, c'est un peu comme une adresse postale publique : elle identifie de mani\u00e8re unique une machine (qui peut \u00eatre une box jouant le r\u00f4le de routeur vers un r\u00e9seau domestique). Dans un r\u00e9seau local, une adresse priv\u00e9e, c'est un peu comme dans une ville, le num\u00e9ro et le nom de la rue (sans la ville ni le pays) : il y a sans doute beaucoup d'adresses qui commencent par \u00ab 24 rue des oliviers \u00bb. Si le r\u00e9seau postal ne concerne que la ville de Rennes, cette adresse est suffisante, mais si je cherche \u00e0 envoyer du courrier au 24 rue des oliviers sans pr\u00e9ciser la ville, cela ne marchera pas. Remarque 4 octets pour une adresse IP, c'\u00e9tait bien il y a 30 ans, \u00e7a l'est beaucoup moins de nos jours ! \\(2^{32}=\\) 4 294 967 296, donc vu le nombre de machines croissant en fonctionnement simultan\u00e9 sur Terre, il est impossible d'attribuer une IP unique \u00e0 chaque ordinateur connect\u00e9 \u00e0 Internet, d'o\u00f9 l'importance du LAN. Pour pallier le probl\u00e8me, une norme IP version 6, plus performante, sur 128 bits au lieu de 32, a vu le jour mais peine encore \u00e0 s'imposer. Petit calcul Compte tenu de ce qui est dit plus haut, combien d'adresses IP diff\u00e9retes peut fournir la norme IPv6 ? Voici les plages d'IP et d'IP priv\u00e9es selon les classes : Classe A : de l\u2019adresse IP 0.0.0.0 \u00e0 126.255.255.255. Adresses priv\u00e9es : de 10.0.0.0 \u00e0 10.255.255.255 (avec 16 millions d\u2019adresses possibles au sein d'un r\u00e9seau local) Classe B : de l\u2019adresse IP 128.0.0.0 \u00e0 191.255.255.255. Adresses priv\u00e9es : 172.16.0.0 \u00e0 172.31.255.255 (avec 65535 adresses possibles au sein d'un r\u00e9seau local) Classe C : de l\u2019adresse IP 192.0.0.0 \u00e0 223.255.255.255 Adresses priv\u00e9es C : 192.168.1.0 \u00e0 192.168.255.255 (255 adresses possibles dans un r\u00e9seau local) Classe D (r\u00e9serv\u00e9e) : de l\u2019adresse IP 224.0.0.0 \u00e0 239.255.255.255 Ces adresses sont r\u00e9serv\u00e9es pour le multicast . Classe E (r\u00e9serv\u00e9e) : de l\u2019adresse IP 240.0.0.0 \u00e0 255.255.255.255 Ces adresses sont r\u00e9serv\u00e9s par l' IANA Mon adresse IP publique est une IP de classe A, mon IP priv\u00e9e est de taille C, ce que je comprends parfaitement puisque mon r\u00e9seau domestique ne contiendra qu'une dizaine de terminaux tout au plus.","title":"Les adresses IP priv\u00e9es et publiques"},{"location":"archi/reseaux/reseau.html#lexemple-du-reseau-local-traditionnel","text":"Lorsqu'on met en place un r\u00e9seau local, on commence par d\u00e9terminer sa taille. Il y a beaucoup de chances qu'on ait moins de 256 machines \u00e0 connecter donc on va choisir une IP publique de classe C : je choisis de prendre pour adresse r\u00e9seau 192.168.1.0, ce n'est pas une IP attribu\u00e9e \u00e0 une machine, elle d\u00e9signe mon r\u00e9seau local; le masque de sous-r\u00e9seau par d\u00e9faut est 255.255.255.0, ce qui signifie que les 3 premiers octets des machines de mon r\u00e9seau sont \u00ab bloqu\u00e9s \u00bb et donc que les machines vont avoir des adresses du type 192.168.1.xx; je peux attribuer des IP aux machines que je veux connecter, par exemple 192.168.1.1 pour la premi\u00e8re, et caetera; la derni\u00e8re IP 192.168.1.255 est interdite, elle est r\u00e9serv\u00e9e pour adresser un message \u00e0 l'ensemble des machines du r\u00e9seau (on appelle ceci broadcast ). Remarque Prenons le cas d'un foyer qui utilise le FAI Orange. Par d\u00e9faut le r\u00e9seau local est 192.168.1.0. avec pour masque 255.255.255.0. La LiveBox, qui fait office de switch et de routeur, a pour adresse 192.168.1.1. C'est cette adresse qui est utilis\u00e9e comme passerelle pour acc\u00e9der \u00e0 internet : La commande ipconfig de Windows ( ifconfig sous Linux et Mac) me permet de retrouver ces informations ainsi que mon IP priv\u00e9e. Utilise l'invite de commande de ton syst\u00e8me d'exploitation (touche Win et taper cmd pour Windows, Terminal sous MacOS) et trouve l'IP de ton ordinateur, le masque de sous-r\u00e9seau et l'adresse de la passerelle. question Combien de machines peut-on trouver au maximum dans un r\u00e9seau d'adresse r\u00e9seau 192.168.2.0/24 ? Combien de machines peut-on trouver au maximum dans un r\u00e9seau d'adresse r\u00e9seau 176.24.0.0/16 ?","title":"L'exemple du r\u00e9seau local traditionnel"},{"location":"archi/reseaux/securisation.html","text":"S\u00e9curisation des transmissions \u2693\ufe0e Le protocole du bit altern\u00e9 \u2693\ufe0e Nous allons ici voir un mod\u00e8le de contr\u00f4le de perte de donn\u00e9es appel\u00e9 protocole du bit altern\u00e9 . Ce protocole a (ou plut\u00f4t avait car il a \u00e9t\u00e9 remplac\u00e9 par un protocole plus performant) lieu au sein de la couche 2 (couche lien) et permet de v\u00e9rifier que les trames d'un ordinateur A sont bien re\u00e7ues par un ordinateur B. Le principe est tr\u00e8s simple, il utilise les acquittements et les flags : lorsque A envoie une trame, il attend un accus\u00e9 de r\u00e9ception (acquittement, acknowledgment en Anglais) de la part de B dans un temps imparti. \u00c0 ceci s'ajoute un bit de contr\u00f4le, appel\u00e9 flag en Anglais, qui alterne suivant le mod\u00e8le suivant: la communication commence avec le flag \u00e0 0, A envoie une premi\u00e8re trame avec le flag ; B re\u00e7oit la trame et accuse r\u00e9ception en envoyant une trame d'acquittement not\u00e9e ACK. le flag est chang\u00e9 \u00e0 1; A re\u00e7oit ACK avec le flag 1 et envoie donc la deuxi\u00e8me trame avec ce flag 1; et ainsi de suite : Lorsque A re\u00e7oit une trame de B, elle garde la valeur du flag pour la prochaine trame qu'elle envoie. B, quant \u00e0 lui change toujours le flag entre le moment o\u00f9 il re\u00e7oit et celui ou il \u00e9met. Ce protocole permet d'\u00e9viter la perte de trames dans les cas suivants : Perte de trame du c\u00f4t\u00e9 de A \u2693\ufe0e A envoie la premi\u00e8re trame et celle-ci se perd, au bout du temps imparti, B ne re\u00e7oit rien. C'est ce qu'on appelle un timeout en Anglais. A renvoie donc sa trame comme si de rien n'\u00e9tait. Perte de trame du c\u00f4t\u00e9 de B \u2693\ufe0e A envoie la premi\u00e8re trame et celle-ci arrive \u00e0 B, qui renvoie un ACK avec un flag \u00e0 1, et s'attend donc \u00e0 recevoir une prochaine trame avec un flag \u00e0 1. Cette trame ACK se perd. Donc du point de vue de A, il y a timeout et il renvoie la m\u00eame trame avec le flag \u00e0 0. B se rend compte que quelque chose ne va pas, et renvoie donc l'ACK pr\u00e9c\u00e9dent, avec son flag \u00e0 1. La communication continue normalement.} Ce protocole pr\u00e9sente des insuffisances comme le montre l'exercice suivant Exercice : perte d'information Analyse le sch\u00e9ma suivant et explique pourquoi il y a perte d'information. D\u00e9roulement d'une communication TCP \u2693\ufe0e On rappelle que TCP est un protocole de la couche 4 (couche transport) dont les caract\u00e9ristiques principales sont les suivantes : il commence par \u00e9tablir une connexion entre les deux machines; il d\u00e9coupe les donn\u00e9es en paquets; il s'assure de la bonne r\u00e9ception des donn\u00e9es au moyen d'\\textit{accus\u00e9s de r\u00e9ception}; il met fin \u00e0 la connexion. L'exercice suivant va nous permettre d'examiner une exemple de communication TCP en d\u00e9tail. Exercice : une communication TCP en d\u00e9tail T\u00e9l\u00e9charger ici ou \u00e9tudier directement les trames. L'ordinateur 192.168.2.1 interroge le serveur DNS situ\u00e9 en 192.168.3.1 afin d'acc\u00e9der au site monsite.com . En mode simulation, faire un clic droit sur 192.168.2.1 et afficher les \u00e9changes de donn\u00e9es. Normalement il n'y a encore eu aucune communication r\u00e9seau donc la fen\u00eatre d'\u00e9change est vide. Sur le navigateur web install\u00e9 sur 192.168.2.1, entrer monsite.com et observer la fen\u00eatre d'\u00e9change de donn\u00e9es du point de vue de 192.168.2.1 : On observe 29 trames. Il est possible de cliquer sur chacune d'entre elles pour visualiser son contenu. Voici le contenu de la premi\u00e8re : Il nous indique que 192.168.2.1 essaie de d\u00e9terminer l'adresse MAC du routeur. En effet, 192.168.2.1 doit interroger le serveur DNS, situ\u00e9 en 192.168.3.1, pour obtenir l'adresse IP associ\u00e9e \u00e0 monsite.com , et puisque 192.168.3.1 n'est pas dans le m\u00eame r\u00e9seau que 192.168.2.1, celui-ci utilise la passerelle (le routeur). La trame suivante est la r\u00e9ponse ARP et la communication se poursuit. Regarder la source, la destination et le contenu des trames 3 et 4. \u00c0 quoi correspondent-elles ? On s'int\u00e9resse au d\u00e9but de la connexion TCP de 192.168.1.2.1 \u00e0 192.168.3.1 : ce sont les trames 5,6 et 7, qui constituent ce qu'on appelle en Anglais un Three-way handshake . Rechercher ce terme sur Wikip\u00e9dia et interpr\u00e9ter ensuite les 3 trames. Les trames 8 \u00e0 25 constituent l'\u00e9change de donn\u00e9es en lui-m\u00eame. Il y a deux grandes \u00e9tapes. Lesquelles ? Que repr\u00e9sentent les trames 26 \u00e0 29 ? D\u00e9tailler le proc\u00e9d\u00e9.","title":"S\u00e9curisation"},{"location":"archi/reseaux/securisation.html#securisation-des-transmissions","text":"","title":"S\u00e9curisation des transmissions"},{"location":"archi/reseaux/securisation.html#le-protocole-du-bit-alterne","text":"Nous allons ici voir un mod\u00e8le de contr\u00f4le de perte de donn\u00e9es appel\u00e9 protocole du bit altern\u00e9 . Ce protocole a (ou plut\u00f4t avait car il a \u00e9t\u00e9 remplac\u00e9 par un protocole plus performant) lieu au sein de la couche 2 (couche lien) et permet de v\u00e9rifier que les trames d'un ordinateur A sont bien re\u00e7ues par un ordinateur B. Le principe est tr\u00e8s simple, il utilise les acquittements et les flags : lorsque A envoie une trame, il attend un accus\u00e9 de r\u00e9ception (acquittement, acknowledgment en Anglais) de la part de B dans un temps imparti. \u00c0 ceci s'ajoute un bit de contr\u00f4le, appel\u00e9 flag en Anglais, qui alterne suivant le mod\u00e8le suivant: la communication commence avec le flag \u00e0 0, A envoie une premi\u00e8re trame avec le flag ; B re\u00e7oit la trame et accuse r\u00e9ception en envoyant une trame d'acquittement not\u00e9e ACK. le flag est chang\u00e9 \u00e0 1; A re\u00e7oit ACK avec le flag 1 et envoie donc la deuxi\u00e8me trame avec ce flag 1; et ainsi de suite : Lorsque A re\u00e7oit une trame de B, elle garde la valeur du flag pour la prochaine trame qu'elle envoie. B, quant \u00e0 lui change toujours le flag entre le moment o\u00f9 il re\u00e7oit et celui ou il \u00e9met. Ce protocole permet d'\u00e9viter la perte de trames dans les cas suivants :","title":"Le protocole du bit altern\u00e9"},{"location":"archi/reseaux/securisation.html#perte-de-trame-du-cote-de-a","text":"A envoie la premi\u00e8re trame et celle-ci se perd, au bout du temps imparti, B ne re\u00e7oit rien. C'est ce qu'on appelle un timeout en Anglais. A renvoie donc sa trame comme si de rien n'\u00e9tait.","title":"Perte de trame du c\u00f4t\u00e9 de A"},{"location":"archi/reseaux/securisation.html#perte-de-trame-du-cote-de-b","text":"A envoie la premi\u00e8re trame et celle-ci arrive \u00e0 B, qui renvoie un ACK avec un flag \u00e0 1, et s'attend donc \u00e0 recevoir une prochaine trame avec un flag \u00e0 1. Cette trame ACK se perd. Donc du point de vue de A, il y a timeout et il renvoie la m\u00eame trame avec le flag \u00e0 0. B se rend compte que quelque chose ne va pas, et renvoie donc l'ACK pr\u00e9c\u00e9dent, avec son flag \u00e0 1. La communication continue normalement.} Ce protocole pr\u00e9sente des insuffisances comme le montre l'exercice suivant Exercice : perte d'information Analyse le sch\u00e9ma suivant et explique pourquoi il y a perte d'information.","title":"Perte de trame du c\u00f4t\u00e9 de B"},{"location":"archi/reseaux/securisation.html#deroulement-dune-communication-tcp","text":"On rappelle que TCP est un protocole de la couche 4 (couche transport) dont les caract\u00e9ristiques principales sont les suivantes : il commence par \u00e9tablir une connexion entre les deux machines; il d\u00e9coupe les donn\u00e9es en paquets; il s'assure de la bonne r\u00e9ception des donn\u00e9es au moyen d'\\textit{accus\u00e9s de r\u00e9ception}; il met fin \u00e0 la connexion. L'exercice suivant va nous permettre d'examiner une exemple de communication TCP en d\u00e9tail. Exercice : une communication TCP en d\u00e9tail T\u00e9l\u00e9charger ici ou \u00e9tudier directement les trames. L'ordinateur 192.168.2.1 interroge le serveur DNS situ\u00e9 en 192.168.3.1 afin d'acc\u00e9der au site monsite.com . En mode simulation, faire un clic droit sur 192.168.2.1 et afficher les \u00e9changes de donn\u00e9es. Normalement il n'y a encore eu aucune communication r\u00e9seau donc la fen\u00eatre d'\u00e9change est vide. Sur le navigateur web install\u00e9 sur 192.168.2.1, entrer monsite.com et observer la fen\u00eatre d'\u00e9change de donn\u00e9es du point de vue de 192.168.2.1 : On observe 29 trames. Il est possible de cliquer sur chacune d'entre elles pour visualiser son contenu. Voici le contenu de la premi\u00e8re : Il nous indique que 192.168.2.1 essaie de d\u00e9terminer l'adresse MAC du routeur. En effet, 192.168.2.1 doit interroger le serveur DNS, situ\u00e9 en 192.168.3.1, pour obtenir l'adresse IP associ\u00e9e \u00e0 monsite.com , et puisque 192.168.3.1 n'est pas dans le m\u00eame r\u00e9seau que 192.168.2.1, celui-ci utilise la passerelle (le routeur). La trame suivante est la r\u00e9ponse ARP et la communication se poursuit. Regarder la source, la destination et le contenu des trames 3 et 4. \u00c0 quoi correspondent-elles ? On s'int\u00e9resse au d\u00e9but de la connexion TCP de 192.168.1.2.1 \u00e0 192.168.3.1 : ce sont les trames 5,6 et 7, qui constituent ce qu'on appelle en Anglais un Three-way handshake . Rechercher ce terme sur Wikip\u00e9dia et interpr\u00e9ter ensuite les 3 trames. Les trames 8 \u00e0 25 constituent l'\u00e9change de donn\u00e9es en lui-m\u00eame. Il y a deux grandes \u00e9tapes. Lesquelles ? Que repr\u00e9sentent les trames 26 \u00e0 29 ? D\u00e9tailler le proc\u00e9d\u00e9.","title":"D\u00e9roulement d'une communication TCP"},{"location":"representation/base_numeration.html","text":"REPRESENTER LES NOMBRES \u2693\ufe0e Les bases \u2693\ufe0e Une base d\u00e9signe la valeur dont les puissances successives interviennent dans l'\u00e9criture des nombres dans la num\u00e9ration positionnelle. Ex : base 10, base 2 (binaire), base 16 (hexad\u00e9cimal) Base usuelle : base 10 Bases utilis\u00e9es en informatique : base 2 et base 16 Exemple d\u2019\u00e9criture : (345) 10 = 3 x 10 2 +4 x 10 1 + 5 x 10 0 (0100110) 2 = 0 x 2 6 + 1 x 2 5 + 0 x 2 4 + 0 x 2 3 + 1 x 2 2 + 1 x 2 1 + 0 x 2 0 (345) 16 = 3 x 16 2 + 4 x 16 1 + 5 x 16 0 Principe d'une base \u2693\ufe0e Une fois atteint le dernier chiffre possible, on ajoute le premier chiffre \u00e0 gauche et on recommence. 4 chiffres \u2192 10 4 valeurs possibles (de 0 \u00e0 9999) Le binaire \u2693\ufe0e Pour transf\u00e9rer les donn\u00e9es sans ambigu\u00eft\u00e9 (0 absence de signal 1 r\u00e9ception d\u2019un signal). Binaire \u00e0 d\u00e9cimal : (0100110) 2 = 0 x 2 6 + 1 x 2 5 + 0 x 2 4 + 0 x 2 3 + 1 x 2 2 + 1 x 2 1 + 0 x 2 0 = 0 + 32 + 0 + 0 + 4 + 2 + 0 = (38) 10 D\u00e9cimal \u00e0 binaise : Le premier bit est le bit de poids fort (MSB) le dernier est le bit de poids faible (LSB) L\u2019hexad\u00e9cimal \u2693\ufe0e Sert surtout \u00e0 coder les couleurs. base 16 Les chiffres sont 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E et F O\u00f9 A = 10, B = 11, C = 12, D = 13, E = 14, F = 15 passer de Hexad\u00e9cimal en d\u00e9cimal : (34F5) 16 = 3 x 16 3 + 4 x 16 2 + 15x16 1 + 5x16 0 = 3 x 4096 + 4 x 256 + 15 x 16 + 5 x 1 = (13557) 10 passer de D\u00e9cimal en Hexad\u00e9cimal : Convertir d\u2019abord en binaire : (811) 10 = (1100101011) 2 Grouper par paquet de 4 bits : 0011 0010 1011 Convertir chaque paquet : 0011 0010 1011 0011 2 = 3 0010 2 =2 1011 2 = 11 = B (811) 10 = (32B) 16 Capacit\u00e9s de stockage \u2693\ufe0e Pour donner des informations sur les capacit\u00e9s de stockage par exemple, on utilise le kibi-octet, le mibi-octet et le gibi-octet proches du kilo, m\u00e9ga et giga octets. 1 kibioctet( kio) = 1024octets 1 mibi-octet = 1 048 576 octets 1Gibi-octet = 1 073 741 824 octets nb Les constructeurs profitent parfois de la confusion possible entre ko et kio pour sur\u00e9valuer les capacit\u00e9s de leurs produits. Par exemple un disque vendu pour 80Go peut faire environ 72Gio alors que le constructeur devraient donner les infos en Gio.","title":"repr\u00e9senter les entiers"},{"location":"representation/base_numeration.html#representer-les-nombres","text":"","title":"REPRESENTER LES NOMBRES"},{"location":"representation/base_numeration.html#les-bases","text":"Une base d\u00e9signe la valeur dont les puissances successives interviennent dans l'\u00e9criture des nombres dans la num\u00e9ration positionnelle. Ex : base 10, base 2 (binaire), base 16 (hexad\u00e9cimal) Base usuelle : base 10 Bases utilis\u00e9es en informatique : base 2 et base 16 Exemple d\u2019\u00e9criture : (345) 10 = 3 x 10 2 +4 x 10 1 + 5 x 10 0 (0100110) 2 = 0 x 2 6 + 1 x 2 5 + 0 x 2 4 + 0 x 2 3 + 1 x 2 2 + 1 x 2 1 + 0 x 2 0 (345) 16 = 3 x 16 2 + 4 x 16 1 + 5 x 16 0","title":"Les bases"},{"location":"representation/base_numeration.html#principe-dune-base","text":"Une fois atteint le dernier chiffre possible, on ajoute le premier chiffre \u00e0 gauche et on recommence. 4 chiffres \u2192 10 4 valeurs possibles (de 0 \u00e0 9999)","title":"Principe d'une base"},{"location":"representation/base_numeration.html#le-binaire","text":"Pour transf\u00e9rer les donn\u00e9es sans ambigu\u00eft\u00e9 (0 absence de signal 1 r\u00e9ception d\u2019un signal). Binaire \u00e0 d\u00e9cimal : (0100110) 2 = 0 x 2 6 + 1 x 2 5 + 0 x 2 4 + 0 x 2 3 + 1 x 2 2 + 1 x 2 1 + 0 x 2 0 = 0 + 32 + 0 + 0 + 4 + 2 + 0 = (38) 10 D\u00e9cimal \u00e0 binaise : Le premier bit est le bit de poids fort (MSB) le dernier est le bit de poids faible (LSB)","title":"Le binaire"},{"location":"representation/base_numeration.html#lhexadecimal","text":"Sert surtout \u00e0 coder les couleurs. base 16 Les chiffres sont 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E et F O\u00f9 A = 10, B = 11, C = 12, D = 13, E = 14, F = 15 passer de Hexad\u00e9cimal en d\u00e9cimal : (34F5) 16 = 3 x 16 3 + 4 x 16 2 + 15x16 1 + 5x16 0 = 3 x 4096 + 4 x 256 + 15 x 16 + 5 x 1 = (13557) 10 passer de D\u00e9cimal en Hexad\u00e9cimal : Convertir d\u2019abord en binaire : (811) 10 = (1100101011) 2 Grouper par paquet de 4 bits : 0011 0010 1011 Convertir chaque paquet : 0011 0010 1011 0011 2 = 3 0010 2 =2 1011 2 = 11 = B (811) 10 = (32B) 16","title":"L\u2019hexad\u00e9cimal"},{"location":"representation/base_numeration.html#capacites-de-stockage","text":"Pour donner des informations sur les capacit\u00e9s de stockage par exemple, on utilise le kibi-octet, le mibi-octet et le gibi-octet proches du kilo, m\u00e9ga et giga octets. 1 kibioctet( kio) = 1024octets 1 mibi-octet = 1 048 576 octets 1Gibi-octet = 1 073 741 824 octets nb Les constructeurs profitent parfois de la confusion possible entre ko et kio pour sur\u00e9valuer les capacit\u00e9s de leurs produits. Par exemple un disque vendu pour 80Go peut faire environ 72Gio alors que le constructeur devraient donner les infos en Gio.","title":"Capacit\u00e9s de stockage"},{"location":"representation/codage_texte.html","text":"Coder le texte \u2693\ufe0e encodage du texte \u2693\ufe0e Chaque caract\u00e8re est encoder en binaire selon la norme ASCII L'ascii permet de coder tous les carat\u00e8res de base de la langue anglaise mais pose des probl\u00e8me pour les langues comme le fran\u00e7ais puisqu'elle ne tient pas compte des accents et pour les langues avec un alphabet diff\u00e9rent. Il exciste pour cela l'UNICODE qui permet sur 1 (UTF-8), 2 (UTF-16) ou 4 (UTF-32) octets de coder tous les carat\u00e8res existants. Cela dit l'unicode UTF-8 le plus utilis\u00e9 a le m\u00eame encodage que l'ascii. En python \u2693\ufe0e Fonction ord() \u2693\ufe0e La fonction ord() renvoie le valeur repr\u00e9sentant l'unicode d'un caract\u00e8re sp\u00e9cifi\u00e9. Si la longueur du cha\u00eene est sup\u00e9rieure \u00e0 un, une erreur \u00ab TypeError \u00bb sera d\u00e9clench\u00e9e. Fonction chr() \u2693\ufe0e Renvoie la cha\u00eene repr\u00e9sentant un caract\u00e8re dont le code de caract\u00e8re Unicode est le nombre entier i. Par exemple, chr(97) renvoie la cha\u00eene de caract\u00e8res 'a', tandis que chr(8364) renvoie '\u20ac'. Il s'agit de l'inverse de ord() . Petit m\u00e9mo utilse pour le TP \u2693\ufe0e m\u00e9mo \u20180xFE5\u2019 : repr\u00e9sentation en hexad\u00e9cimal de la valeur FE5 \u20180b0101\u2019 : repr\u00e9sentation binaire hex(54) : converti un entier d\u00e9cimal en hexad\u00e9cimal bin(54) : converti l\u2019entier en binaire str () : change un nombre en chaine de caract\u00e8re int() : change une chaine de caract\u00e8re en un entier","title":"repr\u00e9senter le texte"},{"location":"representation/codage_texte.html#coder-le-texte","text":"","title":"Coder le texte"},{"location":"representation/codage_texte.html#encodage-du-texte","text":"Chaque caract\u00e8re est encoder en binaire selon la norme ASCII L'ascii permet de coder tous les carat\u00e8res de base de la langue anglaise mais pose des probl\u00e8me pour les langues comme le fran\u00e7ais puisqu'elle ne tient pas compte des accents et pour les langues avec un alphabet diff\u00e9rent. Il exciste pour cela l'UNICODE qui permet sur 1 (UTF-8), 2 (UTF-16) ou 4 (UTF-32) octets de coder tous les carat\u00e8res existants. Cela dit l'unicode UTF-8 le plus utilis\u00e9 a le m\u00eame encodage que l'ascii.","title":"encodage du texte"},{"location":"representation/codage_texte.html#en-python","text":"","title":"En python"},{"location":"representation/codage_texte.html#fonction-ord","text":"La fonction ord() renvoie le valeur repr\u00e9sentant l'unicode d'un caract\u00e8re sp\u00e9cifi\u00e9. Si la longueur du cha\u00eene est sup\u00e9rieure \u00e0 un, une erreur \u00ab TypeError \u00bb sera d\u00e9clench\u00e9e.","title":"Fonction ord()"},{"location":"representation/codage_texte.html#fonction-chr","text":"Renvoie la cha\u00eene repr\u00e9sentant un caract\u00e8re dont le code de caract\u00e8re Unicode est le nombre entier i. Par exemple, chr(97) renvoie la cha\u00eene de caract\u00e8res 'a', tandis que chr(8364) renvoie '\u20ac'. Il s'agit de l'inverse de ord() .","title":"Fonction chr()"},{"location":"representation/codage_texte.html#petit-memo-utilse-pour-le-tp","text":"m\u00e9mo \u20180xFE5\u2019 : repr\u00e9sentation en hexad\u00e9cimal de la valeur FE5 \u20180b0101\u2019 : repr\u00e9sentation binaire hex(54) : converti un entier d\u00e9cimal en hexad\u00e9cimal bin(54) : converti l\u2019entier en binaire str () : change un nombre en chaine de caract\u00e8re int() : change une chaine de caract\u00e8re en un entier","title":"Petit m\u00e9mo utilse pour le TP"},{"location":"representation/listes_chaines.html","text":"Les listes et les cha\u00eenes de caract\u00e8res ont un comportement semblable et certaines m\u00e9thodes communes. Cependant, elles poss\u00e8dent \u00e9galement des m\u00e9thodes sp\u00e9cifiques et il conveindra de ne pas les confondre. Cha\u00eenes de carat\u00e8res \u2693\ufe0e une cha\u00eene de caract\u00e8res est une suite de caract\u00e8res alphanum\u00e9riques (lettres, chiffres, symboles) et appartient au type string . Indexation : se rep\u00e9rer dans la cha\u00eene \u2693\ufe0e Chaque caract\u00e8re de la cha\u00eene poss\u00e8de une coordonn\u00e9e. On l'appelle index. On peut le retrouver par rapport \u00e0 sa position dans la cha\u00eene. On compte la position (l'index) en partant de la gauche et en d\u00e9marrant \u00e0 0 (ou en d\u00e9marrant de la droite en commen\u00e7ant par -1). 1 2 3 4 chaine = 'je suis un g\u00e9nie!' print ( chaine [ 0 ]) #position 0 1er caract\u00e8re print ( chaine [ 6 ]) # position 6 7\u00e8me caract\u00e8re print ( chaine [ - 4 ]) #4eme caract\u00e8re en comman\u00e7ant par la fin On peut aussi s\u00e9lectionner une partie de la cha\u00eene. On appelle cela les slices . [index de d\u00e9part : index de fin (exclus)] Exemples [2:5] : s\u00e9lectionne les caract\u00e8res de la position 2 \u00e0 la position 4 (inclus) Si on ne pr\u00e9cise pas la fin, c'est que l'on va jusqu'au bout [2:] : du caract\u00e8re de position 2 \u00e0 la fin Si on ne pr\u00e9cise pas l'index de d\u00e9but on d\u00e9marre au d\u00e9but. [:7] : du d\u00e9but jusqu'\u00e0 l'index 6 Longueur de la cha\u00eene \u2693\ufe0e On peut utiliser l'instruction len(chaine) pour connaitre le nombre de caract\u00e8res d'une cha\u00eene. 1 2 3 4 5 6 chaine = 'Bonjour, comment ca va?' print ( len ( chaine )) >>> 23 >>> Caract\u00e8re d'\u00e9chappement \u2693\ufe0e Lorsque l'on \u00e9crit une cha\u00eene de caract\u00e8re on peut utiliser les apostrophes pour encadrer la cha\u00eene. Mais qu'en ai-t-il quand un des caract\u00e8res d la chaine est un aporstrophe? On utilise le caract\u00e8re d'\u00e9chappemetn pour signaler \u00e0 python que ce n'est pas la fin mais juste un caract\u00e8re comme un autre : 1 2 chaine = 'aujourd \\' hui' #ou chaine=\"auourd'hui\" print ( chaine ) On peut aussi utiliser des guillemets pour encadrer la cha\u00eene si elle contient un apostrophe ou l'inverse. Concat\u00e9nation \u2693\ufe0e Pour joindre deux cha\u00eene l'une \u00e0 la suite de l'autre (on parle de concat\u00e9nation) on utilise simplement l'op\u00e9ration d'addition : 1 2 3 nom = 'Dupont' prenom = 'Jean' chaine = nom + prenom Attention Les autres op\u00e9rations math\u00e9matiques n'auront aucun effet sur une cha\u00eene de carcat\u00e8res. Les op\u00e9rations sur les cha\u00eenes de caract\u00e8res \u2693\ufe0e Tester la pr\u00e9sence d'un caract\u00e8re dans la cha\u00eene On peut tester la pr\u00e9sence d'un \u00e9l\u00e9ment dans une cha\u00eene avec in qui renvoie True ou False . 1 2 3 4 5 6 7 chaine = 'Bonjour' element = 'e' element in chaine >>> False >>> Nombre d'occurences \u2693\ufe0e On peut compter le nombre de fois ou une cha\u00eene est pr\u00e9sente dans une autre avec la focntion count() : 1 2 3 4 5 6 chaine = 'Bonjour' chaine . count ( 'o' ) # compte le nombre de 'o' dans 'bonjour' >>> 2 >>> Remplacer des \u00e9l\u00e9ments : \u2693\ufe0e On peut remplacer les 'o' par des 'u' par exemples : 1 2 3 4 5 6 chaine = 'Bonjour' chaine . replace ( 'o' , 'u' ) >>> Buujuur >>> Minuscules et majuscules \u2693\ufe0e chaine.upper() : met la chaine de caract\u00e8res en majuscules chaine.lower() : met la chaine de caract\u00e8res en minuscules D'autres fonctions utilises ici les Listes \u2693\ufe0e Les listes en python sont des objets capables de stocker plusieurs objets (m\u00eame de types diff\u00e9rents). Par exemple : 1 2 3 4 5 6 # constitu\u00e9s d'objets identiques L = [ 1 , 5 , 6 , 19 ] #ou d'objets diff\u00e9rents L2 = [ 'coucou' , 25 , 4.2 ] #et m\u00eame une liste de listes L3 = [[ 1 , 5 , 6 , 19 ],[ 'coucou' , 25 , 4.2 ]] Indexation \u2693\ufe0e Le principe est le m\u00eame que pour es cha\u00eenes de caract\u00e8res : Le comptge commence \u00e0 0 par la gauche ou \u00e0 -1 par la droite. Slices L[2:6:2] : s\u00e9lectionne la portion de liste entre l\u2019indice 2 (inclus) et 6 (exclu) avec un pas de 2 (optionnel) L[:6] : s\u00e9lectionne la portion de liste du d\u00e9but \u00e0 l\u2019\u00e9l\u00e9ment d\u2019indice 6 (exclu) L[2:] : s\u00e9lectionne la portion de liste entre l\u2019indice 2 (inclus) jusqu\u2019\u00e0 la fin L[:] : reprend toute la liste et permet de faire une copie. Cr\u00e9er une liste \u2693\ufe0e Cr\u00e9er une liste vide : 1 L = [] Cr\u00e9er une liste de 5 '0': 1 L = [ 0 ] * 5 Remplir une liste en la parcourant : 1 2 3 4 5 6 7 8 Liste = [] for i in range ( 0 , 5 ): Liste [ i ] = i print ( Liste ) >>> [ 0 , 1 , 2 , 3 , 4 ] >>> Cr\u00e9er une liste par compr\u00e9hension : \u2693\ufe0e 1 liste = [ i for i in range ( 0 , 11 ) if i % 2 == 0 ] Cette m\u00e9thode permet d'\u00e9crire en une seule ligne une boucle avec une condition. L=[expression intervalle condition] Ici par exemple on rempli une liste avec les valeurs de i comprises entre 0 et 1 seulement si i est pair. Ajouter un \u00e9lement dans une liste \u2693\ufe0e La m\u00e9thode append() ajoute un \u00e9l\u00e9ment dans une liste en l'ajoutant \u00e0 la fin. 1 2 3 4 5 6 L = [ 1 , 2 , 'coucou' , False ] L . append ( 3 ) print ( L ) >>> [ 1 , 2 , 'coucou' , False , 3 ] Autres fonctions sur les listes \u2693\ufe0e Voici une liste non exhaustive des focntions les plus utiles : L.sort() : trie la liste dans l'ordre croissant (de ses codes ascii) L.reverse() : inverse l'ordre des \u00e9l\u00e9ments de la liste L.index(element) : retourne l'index de l'\u00e9l\u00e9ment dans la liste L.remove(element) : supprime l'\u00e9l\u00e9ment de la liste (ne s'applique qu'au premier rencontr\u00e9) del(L[2]) : supprime l'\u00e9l\u00e9ment d'index 2 L.insert(index,element) : ins\u00e8re un \u00e9l\u00e9ment \u00e0 l'index voulu min(L) et max(L) : Renvoient le minimum ou le maximum de la liste (code ascii) Liste_1.extend(Liste_2) : concat\u00e8ne les listes (fonctionnement avec + \u00e9galement D'autres fonctions ici Les tableaux \u2693\ufe0e En python un tableau est une liste de listes. Chaque liste repr\u00e9sente en fait une ligne et les index identiques repr\u00e9sentent les \u00e9l\u00e9ments d'une m\u00eame colonne. Ce tableau peut \u00eatre repr\u00e9senter ainsi : 1 Tab = [[ 1 , 2 , 3 , 4 ],[ 5 , 6 , 7 , 8 ],[ 9 , 10 , 11 , 12 ]] Acc\u00e9der aux \u00e9l\u00e9ments d'un tableau \u2693\ufe0e Atteindre une ligne \u2693\ufe0e La ligne correspond \u00e0 une des listes. Par exemple, la premi\u00e8re ligne Tab[0] correspond \u00e0 la liste [1,2,3,4] . Atteindre une case \u2693\ufe0e Dans le tableau ci-dessus on souhaite acc\u00e9der \u00e0 l'\u00e9l\u00e9ment 7. 7 appartient \u00e0 la deuxi\u00e8me liste de Tab. Tab[1] renvoie donc la liste [5,6,7,8] . Si on veut le 3e \u00e9l\u00e9ment de cette liste (index 2) on utilise [2] soit Tab[1][2] . Atteindre une colonne \u2693\ufe0e Une colonne en python n'est pas identifiable directement. Il s'agit en fait de tous les \u00e9l\u00e9ments de meme index de chaque ligne. On veut afficher la 3e colonne du tableau. Ce sont en fait les \u00e9l\u00e9ments d'index 2 de chaque ligne. Il va donc falloir parcourir chaque ligne et en extraire l'\u00e9l\u00e9ment d'index 2. 1 2 for ligne in Tab : # pour chaque liste de Tab print ( ligne [ 2 ]) Cette instruction affiche sucessivement 3,7 et 11. Parcourir un tableau \u2693\ufe0e Pour acc\u00e9der aux \u00e9l\u00e9ment d'un tableau un par un il va falloir parcourir chaque ligne et \u00e0 l'int\u00e9rieur de chaque ligne parcourir toute les cases : 1 2 3 4 5 pour i allant de 0 \u00e0 2: pour j allant de 0 \u00e0 3: action \u00e0 effectuer pour chaque cellule fin pour fin pour En phython cela donne 1 2 3 for i in range ( 3 ): for j in range ( 3 ): print ( Tab [ i ][ j ]) Lorsque l'on ne connait pas la longueur du tableau (pas le courage de compter, risque de se tromper ou longueur des lignes diff\u00e9rentes), on pourra remplacer le 3 par len(Tab) qui repr\u00e9sente le nombre de lignes (nombre de sous_listes que contient tab) et len(Tab[i]) (nombre d'\u00e9l\u00e9ments de la ligne i). Cr\u00e9er un tableau \u2693\ufe0e On cr\u00e9e un tableau comme une liste, mais il faudra faire deux boucles imbriqu\u00e9es pour remplir chaque case : 1 2 3 4 5 6 7 from random import randint T = [] # on cr\u00e9e un tableau vide for i in range ( 5 ): #notre tableau aura 5 lignes T . append ([]) # on cr\u00e9e une ligne vide for j in range ( 4 ) : # 4 colonnes T [ i ] . append ( randint ( 0 , 10 )) # on ajoute un nombre al\u00e9atoire dans la i\u00e8me ligne du tableau print ( T )","title":"Listes chaines"},{"location":"representation/listes_chaines.html#chaines-de-carateres","text":"une cha\u00eene de caract\u00e8res est une suite de caract\u00e8res alphanum\u00e9riques (lettres, chiffres, symboles) et appartient au type string .","title":"Cha\u00eenes de carat\u00e8res"},{"location":"representation/listes_chaines.html#indexation-se-reperer-dans-la-chaine","text":"Chaque caract\u00e8re de la cha\u00eene poss\u00e8de une coordonn\u00e9e. On l'appelle index. On peut le retrouver par rapport \u00e0 sa position dans la cha\u00eene. On compte la position (l'index) en partant de la gauche et en d\u00e9marrant \u00e0 0 (ou en d\u00e9marrant de la droite en commen\u00e7ant par -1). 1 2 3 4 chaine = 'je suis un g\u00e9nie!' print ( chaine [ 0 ]) #position 0 1er caract\u00e8re print ( chaine [ 6 ]) # position 6 7\u00e8me caract\u00e8re print ( chaine [ - 4 ]) #4eme caract\u00e8re en comman\u00e7ant par la fin On peut aussi s\u00e9lectionner une partie de la cha\u00eene. On appelle cela les slices . [index de d\u00e9part : index de fin (exclus)] Exemples [2:5] : s\u00e9lectionne les caract\u00e8res de la position 2 \u00e0 la position 4 (inclus) Si on ne pr\u00e9cise pas la fin, c'est que l'on va jusqu'au bout [2:] : du caract\u00e8re de position 2 \u00e0 la fin Si on ne pr\u00e9cise pas l'index de d\u00e9but on d\u00e9marre au d\u00e9but. [:7] : du d\u00e9but jusqu'\u00e0 l'index 6","title":"Indexation : se rep\u00e9rer dans la cha\u00eene"},{"location":"representation/listes_chaines.html#longueur-de-la-chaine","text":"On peut utiliser l'instruction len(chaine) pour connaitre le nombre de caract\u00e8res d'une cha\u00eene. 1 2 3 4 5 6 chaine = 'Bonjour, comment ca va?' print ( len ( chaine )) >>> 23 >>>","title":"Longueur de la cha\u00eene"},{"location":"representation/listes_chaines.html#caractere-dechappement","text":"Lorsque l'on \u00e9crit une cha\u00eene de caract\u00e8re on peut utiliser les apostrophes pour encadrer la cha\u00eene. Mais qu'en ai-t-il quand un des caract\u00e8res d la chaine est un aporstrophe? On utilise le caract\u00e8re d'\u00e9chappemetn pour signaler \u00e0 python que ce n'est pas la fin mais juste un caract\u00e8re comme un autre : 1 2 chaine = 'aujourd \\' hui' #ou chaine=\"auourd'hui\" print ( chaine ) On peut aussi utiliser des guillemets pour encadrer la cha\u00eene si elle contient un apostrophe ou l'inverse.","title":"Caract\u00e8re d'\u00e9chappement"},{"location":"representation/listes_chaines.html#concatenation","text":"Pour joindre deux cha\u00eene l'une \u00e0 la suite de l'autre (on parle de concat\u00e9nation) on utilise simplement l'op\u00e9ration d'addition : 1 2 3 nom = 'Dupont' prenom = 'Jean' chaine = nom + prenom Attention Les autres op\u00e9rations math\u00e9matiques n'auront aucun effet sur une cha\u00eene de carcat\u00e8res.","title":"Concat\u00e9nation"},{"location":"representation/listes_chaines.html#les-operations-sur-les-chaines-de-caracteres","text":"Tester la pr\u00e9sence d'un caract\u00e8re dans la cha\u00eene On peut tester la pr\u00e9sence d'un \u00e9l\u00e9ment dans une cha\u00eene avec in qui renvoie True ou False . 1 2 3 4 5 6 7 chaine = 'Bonjour' element = 'e' element in chaine >>> False >>>","title":"Les op\u00e9rations sur les cha\u00eenes de caract\u00e8res"},{"location":"representation/listes_chaines.html#nombre-doccurences","text":"On peut compter le nombre de fois ou une cha\u00eene est pr\u00e9sente dans une autre avec la focntion count() : 1 2 3 4 5 6 chaine = 'Bonjour' chaine . count ( 'o' ) # compte le nombre de 'o' dans 'bonjour' >>> 2 >>>","title":"Nombre d'occurences"},{"location":"representation/listes_chaines.html#remplacer-des-elements","text":"On peut remplacer les 'o' par des 'u' par exemples : 1 2 3 4 5 6 chaine = 'Bonjour' chaine . replace ( 'o' , 'u' ) >>> Buujuur >>>","title":"Remplacer des \u00e9l\u00e9ments :"},{"location":"representation/listes_chaines.html#minuscules-et-majuscules","text":"chaine.upper() : met la chaine de caract\u00e8res en majuscules chaine.lower() : met la chaine de caract\u00e8res en minuscules D'autres fonctions utilises ici","title":"Minuscules et majuscules"},{"location":"representation/listes_chaines.html#les-listes","text":"Les listes en python sont des objets capables de stocker plusieurs objets (m\u00eame de types diff\u00e9rents). Par exemple : 1 2 3 4 5 6 # constitu\u00e9s d'objets identiques L = [ 1 , 5 , 6 , 19 ] #ou d'objets diff\u00e9rents L2 = [ 'coucou' , 25 , 4.2 ] #et m\u00eame une liste de listes L3 = [[ 1 , 5 , 6 , 19 ],[ 'coucou' , 25 , 4.2 ]]","title":"les Listes"},{"location":"representation/listes_chaines.html#indexation","text":"Le principe est le m\u00eame que pour es cha\u00eenes de caract\u00e8res : Le comptge commence \u00e0 0 par la gauche ou \u00e0 -1 par la droite. Slices L[2:6:2] : s\u00e9lectionne la portion de liste entre l\u2019indice 2 (inclus) et 6 (exclu) avec un pas de 2 (optionnel) L[:6] : s\u00e9lectionne la portion de liste du d\u00e9but \u00e0 l\u2019\u00e9l\u00e9ment d\u2019indice 6 (exclu) L[2:] : s\u00e9lectionne la portion de liste entre l\u2019indice 2 (inclus) jusqu\u2019\u00e0 la fin L[:] : reprend toute la liste et permet de faire une copie.","title":"Indexation"},{"location":"representation/listes_chaines.html#creer-une-liste","text":"Cr\u00e9er une liste vide : 1 L = [] Cr\u00e9er une liste de 5 '0': 1 L = [ 0 ] * 5 Remplir une liste en la parcourant : 1 2 3 4 5 6 7 8 Liste = [] for i in range ( 0 , 5 ): Liste [ i ] = i print ( Liste ) >>> [ 0 , 1 , 2 , 3 , 4 ] >>>","title":"Cr\u00e9er une liste"},{"location":"representation/listes_chaines.html#creer-une-liste-par-comprehension","text":"1 liste = [ i for i in range ( 0 , 11 ) if i % 2 == 0 ] Cette m\u00e9thode permet d'\u00e9crire en une seule ligne une boucle avec une condition. L=[expression intervalle condition] Ici par exemple on rempli une liste avec les valeurs de i comprises entre 0 et 1 seulement si i est pair.","title":"Cr\u00e9er une liste par compr\u00e9hension :"},{"location":"representation/listes_chaines.html#ajouter-un-element-dans-une-liste","text":"La m\u00e9thode append() ajoute un \u00e9l\u00e9ment dans une liste en l'ajoutant \u00e0 la fin. 1 2 3 4 5 6 L = [ 1 , 2 , 'coucou' , False ] L . append ( 3 ) print ( L ) >>> [ 1 , 2 , 'coucou' , False , 3 ]","title":"Ajouter un \u00e9lement dans une liste"},{"location":"representation/listes_chaines.html#autres-fonctions-sur-les-listes","text":"Voici une liste non exhaustive des focntions les plus utiles : L.sort() : trie la liste dans l'ordre croissant (de ses codes ascii) L.reverse() : inverse l'ordre des \u00e9l\u00e9ments de la liste L.index(element) : retourne l'index de l'\u00e9l\u00e9ment dans la liste L.remove(element) : supprime l'\u00e9l\u00e9ment de la liste (ne s'applique qu'au premier rencontr\u00e9) del(L[2]) : supprime l'\u00e9l\u00e9ment d'index 2 L.insert(index,element) : ins\u00e8re un \u00e9l\u00e9ment \u00e0 l'index voulu min(L) et max(L) : Renvoient le minimum ou le maximum de la liste (code ascii) Liste_1.extend(Liste_2) : concat\u00e8ne les listes (fonctionnement avec + \u00e9galement D'autres fonctions ici","title":"Autres fonctions sur les listes"},{"location":"representation/listes_chaines.html#les-tableaux","text":"En python un tableau est une liste de listes. Chaque liste repr\u00e9sente en fait une ligne et les index identiques repr\u00e9sentent les \u00e9l\u00e9ments d'une m\u00eame colonne. Ce tableau peut \u00eatre repr\u00e9senter ainsi : 1 Tab = [[ 1 , 2 , 3 , 4 ],[ 5 , 6 , 7 , 8 ],[ 9 , 10 , 11 , 12 ]]","title":"Les tableaux"},{"location":"representation/listes_chaines.html#acceder-aux-elements-dun-tableau","text":"","title":"Acc\u00e9der aux \u00e9l\u00e9ments d'un tableau"},{"location":"representation/listes_chaines.html#atteindre-une-ligne","text":"La ligne correspond \u00e0 une des listes. Par exemple, la premi\u00e8re ligne Tab[0] correspond \u00e0 la liste [1,2,3,4] .","title":"Atteindre une ligne"},{"location":"representation/listes_chaines.html#atteindre-une-case","text":"Dans le tableau ci-dessus on souhaite acc\u00e9der \u00e0 l'\u00e9l\u00e9ment 7. 7 appartient \u00e0 la deuxi\u00e8me liste de Tab. Tab[1] renvoie donc la liste [5,6,7,8] . Si on veut le 3e \u00e9l\u00e9ment de cette liste (index 2) on utilise [2] soit Tab[1][2] .","title":"Atteindre une case"},{"location":"representation/listes_chaines.html#atteindre-une-colonne","text":"Une colonne en python n'est pas identifiable directement. Il s'agit en fait de tous les \u00e9l\u00e9ments de meme index de chaque ligne. On veut afficher la 3e colonne du tableau. Ce sont en fait les \u00e9l\u00e9ments d'index 2 de chaque ligne. Il va donc falloir parcourir chaque ligne et en extraire l'\u00e9l\u00e9ment d'index 2. 1 2 for ligne in Tab : # pour chaque liste de Tab print ( ligne [ 2 ]) Cette instruction affiche sucessivement 3,7 et 11.","title":"Atteindre une colonne"},{"location":"representation/listes_chaines.html#parcourir-un-tableau","text":"Pour acc\u00e9der aux \u00e9l\u00e9ment d'un tableau un par un il va falloir parcourir chaque ligne et \u00e0 l'int\u00e9rieur de chaque ligne parcourir toute les cases : 1 2 3 4 5 pour i allant de 0 \u00e0 2: pour j allant de 0 \u00e0 3: action \u00e0 effectuer pour chaque cellule fin pour fin pour En phython cela donne 1 2 3 for i in range ( 3 ): for j in range ( 3 ): print ( Tab [ i ][ j ]) Lorsque l'on ne connait pas la longueur du tableau (pas le courage de compter, risque de se tromper ou longueur des lignes diff\u00e9rentes), on pourra remplacer le 3 par len(Tab) qui repr\u00e9sente le nombre de lignes (nombre de sous_listes que contient tab) et len(Tab[i]) (nombre d'\u00e9l\u00e9ments de la ligne i).","title":"Parcourir un tableau"},{"location":"representation/listes_chaines.html#creer-un-tableau","text":"On cr\u00e9e un tableau comme une liste, mais il faudra faire deux boucles imbriqu\u00e9es pour remplir chaque case : 1 2 3 4 5 6 7 from random import randint T = [] # on cr\u00e9e un tableau vide for i in range ( 5 ): #notre tableau aura 5 lignes T . append ([]) # on cr\u00e9e une ligne vide for j in range ( 4 ) : # 4 colonnes T [ i ] . append ( randint ( 0 , 10 )) # on ajoute un nombre al\u00e9atoire dans la i\u00e8me ligne du tableau print ( T )","title":"Cr\u00e9er un tableau"},{"location":"representation/reels_flottants.html","text":"Nombres r\u00e9\u00e8ls et flottants \u2693\ufe0e Nombres r\u00e9\u00e8ls \u2693\ufe0e Pour repr\u00e9senter les nombres n\u00e9gatifs sur n bits, on peut repr\u00e9senter les entiers de \\(-\\dfrac {2^n}{2}\\) \u00e0 \\(\\dfrac {2^n}{2} -1\\) . SUr 3 bits, au lieu d'aller de 0 \u00e0 8 on code les entiers de -4 \u00e0 3. comment convertir? On pourrait \u00e9tablir un tableau de la sorte : Mais on aurait deux codage de z\u00e9ro. ce n'est pas envisageable. Voici la conversion des r\u00e9eles sur 3 bits : Mais comment obtient-on ces valeurs ? \u2693\ufe0e Pour les nombres positifs, comme vu das le chapitre pr\u00e9c\u00e9dent. Pour les n\u00e9gatifs : Repr\u00e9senter le nombre positif correspondant Inverser les 0 et les 1 ajouter 1 exemple pour coder -3 (3) 10 = (011) 2 on inverse 100 puis on ajoute 1 : 101 (-3) 10 = (101) 2 Repr\u00e9senter 3 : 0011 Changer les 1 et les 0 : 1100 Ajouter 1 : 1100 + 1 = 1101 autre methode Sur 4 bits on a 2 4 possibilit\u00e9s, -3 + 2 4 = 13 en binaire 1101 conversion Un site de conversions ici Nombres flottants (\u00e0 virgule) \u2693\ufe0e On a d\u00e9\u00e0 vue que : On a vu : (11010) 2 = 2 4 + 2 3 + 2 1 De m\u00eame : (0,1)2=1x2 -1 =0,5 (0,01)2=1x2 -2 =0,25 (0,001)2=1x2 -3 =0,125 \u2026 arrondis Ecrire 1/3 en d\u00e9cimal : 0,3333333333333333\u2026 Si on multiplie par 3 : 0,9999999999999999\u2026 On n\u2019obtient JAMAIS la valeur de d\u00e9part. C\u2019est une valeur approch\u00e9e. m\u00e9thode (0,10) 10 \u2248 0,0625 + 0,0312 = 0,09375 = (0,00011) 2 conversion Un site de conversions ici","title":"repr\u00e9senter les r\u00e9els et les flottants"},{"location":"representation/reels_flottants.html#nombres-reels-et-flottants","text":"","title":"Nombres r\u00e9\u00e8ls et flottants"},{"location":"representation/reels_flottants.html#nombres-reels","text":"Pour repr\u00e9senter les nombres n\u00e9gatifs sur n bits, on peut repr\u00e9senter les entiers de \\(-\\dfrac {2^n}{2}\\) \u00e0 \\(\\dfrac {2^n}{2} -1\\) . SUr 3 bits, au lieu d'aller de 0 \u00e0 8 on code les entiers de -4 \u00e0 3. comment convertir? On pourrait \u00e9tablir un tableau de la sorte : Mais on aurait deux codage de z\u00e9ro. ce n'est pas envisageable. Voici la conversion des r\u00e9eles sur 3 bits :","title":"Nombres r\u00e9\u00e8ls"},{"location":"representation/reels_flottants.html#mais-comment-obtient-on-ces-valeurs","text":"Pour les nombres positifs, comme vu das le chapitre pr\u00e9c\u00e9dent. Pour les n\u00e9gatifs : Repr\u00e9senter le nombre positif correspondant Inverser les 0 et les 1 ajouter 1 exemple pour coder -3 (3) 10 = (011) 2 on inverse 100 puis on ajoute 1 : 101 (-3) 10 = (101) 2 Repr\u00e9senter 3 : 0011 Changer les 1 et les 0 : 1100 Ajouter 1 : 1100 + 1 = 1101 autre methode Sur 4 bits on a 2 4 possibilit\u00e9s, -3 + 2 4 = 13 en binaire 1101 conversion Un site de conversions ici","title":"Mais comment obtient-on ces valeurs ?"},{"location":"representation/reels_flottants.html#nombres-flottants-a-virgule","text":"On a d\u00e9\u00e0 vue que : On a vu : (11010) 2 = 2 4 + 2 3 + 2 1 De m\u00eame : (0,1)2=1x2 -1 =0,5 (0,01)2=1x2 -2 =0,25 (0,001)2=1x2 -3 =0,125 \u2026 arrondis Ecrire 1/3 en d\u00e9cimal : 0,3333333333333333\u2026 Si on multiplie par 3 : 0,9999999999999999\u2026 On n\u2019obtient JAMAIS la valeur de d\u00e9part. C\u2019est une valeur approch\u00e9e. m\u00e9thode (0,10) 10 \u2248 0,0625 + 0,0312 = 0,09375 = (0,00011) 2 conversion Un site de conversions ici","title":"Nombres flottants (\u00e0 virgule)"},{"location":"representation/tuples_dico.html","text":"Les tuples \u2693\ufe0e Un tuple, ou n-uplet, est un type donn\u00e9es Python constitu\u00e9s d'\u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules, et encadr\u00e9s par des parenth\u00e8ses. Un tuple ressemble \u00e0 une liste, mais un tuple n'est pas modifiable (ni insertion ni suppression ni remplacement de valeurs). La syntaxe diff\u00e8re des listes en utilisant les paranth\u00e8ses au lieu des crochets. 1 2 3 4 5 6 a = ( 3 , 4 ) #a est un tuple contenant les valeurs 3 et 4 u , v = a #permet de r\u00e9cup\u00e9rer s\u00e9par\u00e9ment les valeurs contennues dans a #u sera \u00e9gal \u00e0 3 te v \u00e0 4 ( b , c ) = ( 5 , 6 ) #b sera \u00e9gal \u00e05 et c \u00e0 6 Si on essaye de supprimer par exemple : 1 2 a . remove ( 3 ) #si on essaye de supprimer une valeur le programme renvoie une erreur Les tuples sont utilis\u00e9s lorsque l'on souhaite que les donn\u00e9es ne soient pas modifiables par erreur. Les dictionnaires \u2693\ufe0e un dictionnaire est une collection de valeurs, un peu comme une liste sauf que les valeurs ne sont pas ordonn\u00e9es mais associ\u00e9es deux \u00e0 deux. Chaque valeur du dictionnaire correspond \u00e0 une cl\u00e9. Par exemple : 1 nb_pneus = { \"voiture\" : 4 , \"v\u00e9lo\" : 2 , \"tricycle\" : 3 } Voici un dictionnaire qui associe la valeur 4 aux voitures, 2 aux v\u00e9los, ... \"voiture\", \"v\u00e9lo\", \"tricycle\" sont les cl\u00e9s du dictionnaire et 4, 2 et 3 sont les valeurs correspndant aux cl\u00e9s. Ajouter, modifier et supprimer un \u00e9l\u00e9ment \u2693\ufe0e On peut cr\u00e9er un dictionnaire vide dico={} puis ajouter des valeurs au fur et \u00e0 mesure avec la syntaxe dico[cle]=valeur . 1 2 3 4 5 6 7 dico = {} dico [ \"maths\" ] = 12 print ( dico ) >>> # script executed { 'maths' : 12 } >>> une fois cr\u00e9\u00e9e, on peut modifier cette valeur : 1 2 3 4 5 6 7 8 9 10 dico = {} dico [ \"maths\" ] = 12 print ( dico ) dico [ \"maths\" ] = 20 print ( dico ) >>> # script executed { 'maths' : 12 } { 'maths' : 20 } >>> ou la supprimer : 1 2 3 4 5 6 7 8 9 10 11 12 13 dico = {} dico [ \"maths\" ] = 12 print ( dico ) dico [ \"NSI\" ] = 14 print ( dico ) del ( dico [ \"maths\" ]) print ( dico ) >>> # script executed { 'maths' : 12 } { 'maths' : 12 , 'NSI' : 14 } { 'NSI' : 14 } >>> Acc\u00e9der aux \u00e9l\u00e9ments d'un dictionnaire \u2693\ufe0e Nous allons partir de ce dictionnaire : 1 moyennes = { \"maths\" : 12 , \"NSI\" : 14 , \"Anglais\" : 8 , \"Histoire\" : 18 } Acc\u00e9der \u00e0 la valeur correspndant \u00e0 une cl\u00e9 \u2693\ufe0e Pour r\u00e9cup\u00e9rer la valeur correspondant \u00e0 la cl\u00e9 \"NSI\" par exemple : 1 2 3 4 5 print ( moyennes [ \"NSI\" ]) >>> # script executed 14 >>> Acc\u00e9der \u00e0 la liste des cl\u00e9s \u2693\ufe0e 1 2 3 4 5 print ( moyennes . keys ()) >>> # script executed dict_keys ([ 'maths' , 'NSI' , 'Anglais' , 'Histoire' ]) >>> On constate que l'on a QUE LES CLES et sous la forme d'un objet un peu sp\u00e9cial non manipulable. Pour utiliser cette liste nous allons la convertir en liste avec la m\u00e9thode list . 1 2 3 4 5 print ( list ( moyennes . keys ()) >>> # script executed [ 'maths' , 'NSI' , 'Anglais' , 'Histoire' ] >>> Acc\u00e9der \u00e0 la liste des valeurs \u2693\ufe0e Comme pour les cl\u00e9s, nous allons convertir en liste le r\u00e9sultat : 1 2 3 4 5 6 7 print ( moyennes . values ()) print ( list ( moyennes . values ())) >>> # script executed dict_values ([ 12 , 14 , 8 , 18 ]) [ 12 , 14 , 8 , 18 ] >>> Acc\u00e9der \u00e0 la liste des couples (cl\u00e9,valeur) \u2693\ufe0e Les couples (cl\u00e9,valeur) sont appel\u00e9s les items d'un dictionnaire. La fonction items() permet de les r\u00e9up\u00e9rer sous forme de tuples et nous allons encore une fois les ranger dans une liste pour plus de facilit\u00e9s. 1 2 3 4 5 6 7 print ( moyennes . items ()) print ( list ( moyennes . items ())) >>> # script executed dict_items ([( 'maths' , 12 ), ( 'NSI' , 14 ), ( 'Anglais' , 8 ), ( 'Histoire' , 18 )]) [( 'maths' , 12 ), ( 'NSI' , 14 ), ( 'Anglais' , 8 ), ( 'Histoire' , 18 )] >>> Autres m\u00e9thodes \u2693\ufe0e Voici une liste non-exhaustive des m\u00e9thodes les plus utiles : dico.get (k) : permet d'acc\u00e9der \u00e0 la valeur dont la cl\u00e9 est k dans le dictionnaire dico dico.items() : liste les items du dictionnaire dico.values() : liste les valeurs du dictionnaire dico.pop(k) : supprime l'item dont la cl\u00e9 est k du dictionnaire dico mais r\u00e9cup\u00e8re la valeur supprim\u00e9e contrairement \u00e0 del dico.keys() : liste les cl\u00e9s du dictionnaire NB Les m\u00e9thodes keys, items, et values renvoient un objet que l'on peut transformer en liste par : list(nombre_de_roues.values())","title":"Les tuples"},{"location":"representation/tuples_dico.html#les-tuples","text":"Un tuple, ou n-uplet, est un type donn\u00e9es Python constitu\u00e9s d'\u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules, et encadr\u00e9s par des parenth\u00e8ses. Un tuple ressemble \u00e0 une liste, mais un tuple n'est pas modifiable (ni insertion ni suppression ni remplacement de valeurs). La syntaxe diff\u00e8re des listes en utilisant les paranth\u00e8ses au lieu des crochets. 1 2 3 4 5 6 a = ( 3 , 4 ) #a est un tuple contenant les valeurs 3 et 4 u , v = a #permet de r\u00e9cup\u00e9rer s\u00e9par\u00e9ment les valeurs contennues dans a #u sera \u00e9gal \u00e0 3 te v \u00e0 4 ( b , c ) = ( 5 , 6 ) #b sera \u00e9gal \u00e05 et c \u00e0 6 Si on essaye de supprimer par exemple : 1 2 a . remove ( 3 ) #si on essaye de supprimer une valeur le programme renvoie une erreur Les tuples sont utilis\u00e9s lorsque l'on souhaite que les donn\u00e9es ne soient pas modifiables par erreur.","title":"Les tuples"},{"location":"representation/tuples_dico.html#les-dictionnaires","text":"un dictionnaire est une collection de valeurs, un peu comme une liste sauf que les valeurs ne sont pas ordonn\u00e9es mais associ\u00e9es deux \u00e0 deux. Chaque valeur du dictionnaire correspond \u00e0 une cl\u00e9. Par exemple : 1 nb_pneus = { \"voiture\" : 4 , \"v\u00e9lo\" : 2 , \"tricycle\" : 3 } Voici un dictionnaire qui associe la valeur 4 aux voitures, 2 aux v\u00e9los, ... \"voiture\", \"v\u00e9lo\", \"tricycle\" sont les cl\u00e9s du dictionnaire et 4, 2 et 3 sont les valeurs correspndant aux cl\u00e9s.","title":"Les dictionnaires"},{"location":"representation/tuples_dico.html#ajouter-modifier-et-supprimer-un-element","text":"On peut cr\u00e9er un dictionnaire vide dico={} puis ajouter des valeurs au fur et \u00e0 mesure avec la syntaxe dico[cle]=valeur . 1 2 3 4 5 6 7 dico = {} dico [ \"maths\" ] = 12 print ( dico ) >>> # script executed { 'maths' : 12 } >>> une fois cr\u00e9\u00e9e, on peut modifier cette valeur : 1 2 3 4 5 6 7 8 9 10 dico = {} dico [ \"maths\" ] = 12 print ( dico ) dico [ \"maths\" ] = 20 print ( dico ) >>> # script executed { 'maths' : 12 } { 'maths' : 20 } >>> ou la supprimer : 1 2 3 4 5 6 7 8 9 10 11 12 13 dico = {} dico [ \"maths\" ] = 12 print ( dico ) dico [ \"NSI\" ] = 14 print ( dico ) del ( dico [ \"maths\" ]) print ( dico ) >>> # script executed { 'maths' : 12 } { 'maths' : 12 , 'NSI' : 14 } { 'NSI' : 14 } >>>","title":"Ajouter, modifier et supprimer un \u00e9l\u00e9ment"},{"location":"representation/tuples_dico.html#acceder-aux-elements-dun-dictionnaire","text":"Nous allons partir de ce dictionnaire : 1 moyennes = { \"maths\" : 12 , \"NSI\" : 14 , \"Anglais\" : 8 , \"Histoire\" : 18 }","title":"Acc\u00e9der aux \u00e9l\u00e9ments d'un dictionnaire"},{"location":"representation/tuples_dico.html#acceder-a-la-valeur-correspndant-a-une-cle","text":"Pour r\u00e9cup\u00e9rer la valeur correspondant \u00e0 la cl\u00e9 \"NSI\" par exemple : 1 2 3 4 5 print ( moyennes [ \"NSI\" ]) >>> # script executed 14 >>>","title":"Acc\u00e9der \u00e0 la valeur correspndant \u00e0 une cl\u00e9"},{"location":"representation/tuples_dico.html#acceder-a-la-liste-des-cles","text":"1 2 3 4 5 print ( moyennes . keys ()) >>> # script executed dict_keys ([ 'maths' , 'NSI' , 'Anglais' , 'Histoire' ]) >>> On constate que l'on a QUE LES CLES et sous la forme d'un objet un peu sp\u00e9cial non manipulable. Pour utiliser cette liste nous allons la convertir en liste avec la m\u00e9thode list . 1 2 3 4 5 print ( list ( moyennes . keys ()) >>> # script executed [ 'maths' , 'NSI' , 'Anglais' , 'Histoire' ] >>>","title":"Acc\u00e9der \u00e0 la liste des cl\u00e9s"},{"location":"representation/tuples_dico.html#acceder-a-la-liste-des-valeurs","text":"Comme pour les cl\u00e9s, nous allons convertir en liste le r\u00e9sultat : 1 2 3 4 5 6 7 print ( moyennes . values ()) print ( list ( moyennes . values ())) >>> # script executed dict_values ([ 12 , 14 , 8 , 18 ]) [ 12 , 14 , 8 , 18 ] >>>","title":"Acc\u00e9der \u00e0 la liste des valeurs"},{"location":"representation/tuples_dico.html#acceder-a-la-liste-des-couples-clevaleur","text":"Les couples (cl\u00e9,valeur) sont appel\u00e9s les items d'un dictionnaire. La fonction items() permet de les r\u00e9up\u00e9rer sous forme de tuples et nous allons encore une fois les ranger dans une liste pour plus de facilit\u00e9s. 1 2 3 4 5 6 7 print ( moyennes . items ()) print ( list ( moyennes . items ())) >>> # script executed dict_items ([( 'maths' , 12 ), ( 'NSI' , 14 ), ( 'Anglais' , 8 ), ( 'Histoire' , 18 )]) [( 'maths' , 12 ), ( 'NSI' , 14 ), ( 'Anglais' , 8 ), ( 'Histoire' , 18 )] >>>","title":"Acc\u00e9der \u00e0 la liste des couples (cl\u00e9,valeur)"},{"location":"representation/tuples_dico.html#autres-methodes","text":"Voici une liste non-exhaustive des m\u00e9thodes les plus utiles : dico.get (k) : permet d'acc\u00e9der \u00e0 la valeur dont la cl\u00e9 est k dans le dictionnaire dico dico.items() : liste les items du dictionnaire dico.values() : liste les valeurs du dictionnaire dico.pop(k) : supprime l'item dont la cl\u00e9 est k du dictionnaire dico mais r\u00e9cup\u00e8re la valeur supprim\u00e9e contrairement \u00e0 del dico.keys() : liste les cl\u00e9s du dictionnaire NB Les m\u00e9thodes keys, items, et values renvoient un objet que l'on peut transformer en liste par : list(nombre_de_roues.values())","title":"Autres m\u00e9thodes"},{"location":"table_donnees/traitement_donnees.html","text":"Traitement de donn\u00e9es en tables \u2693\ufe0e Activit\u00e9 introduction \u2693\ufe0e D\u00e9finitions \u2693\ufe0e Base de donn\u00e9es : ensemble d\u2019informations structur\u00e9es Descripteur : champ prenant une certaine valeur (donn\u00e9e) par ex Nom, Prenom, \u2026 Collection: ensemble de donn\u00e9es partageant les m\u00eames descripteurs par ex contacts partagent tous les descripteurs nom et prenom. Caract\u00e9ristiques des donn\u00e9es \u2693\ufe0e Les donn\u00e9es peuvent \u00eatre de tout type : nombre, entier, chaine de caract\u00e8re, bool\u00e9en, \u2026 La collection est l\u2019ensemble des films r\u00e9pertori\u00e9s, les descripteurs sont ID (entier), nom (chaine de caract\u00e8res), genre (chaine de caract\u00e8res), Dur\u00e9e (entier), Date de sortie (chaine de caract\u00e8res), R\u00e9alisateur (chaine de caract\u00e8res) et Acteurs (chaine de caract\u00e8res). Les donn\u00e9es peuvent \u00eatre obligatoires (nom du film par exemple) ou facultative (dur\u00e9e du film). C\u2019est le cr\u00e9ateur de la BDD qui le d\u00e9finit. Un des champs doit \u00eatre UNIQUE pour qu\u2019il n\u2019y ait pas de confusion, en g\u00e9n\u00e9ral c\u2019est un identifiant nomm\u00e9 ID. Il est auto incr\u00e9ment\u00e9 quand on ajouter des \u00e9l\u00e9ments dans la BDD. Utilit\u00e9 \u2693\ufe0e Une BDD sert \u00e0 structurer les donn\u00e9es et les trouver facilement. Elle permet de croiser les donn\u00e9es avec une autre base et de stocker les informations sur un support permanant. Elles permettent de faire des traitements statistiques et adapter les comportements en fonction des r\u00e9sultats (pub cibl\u00e9e par exemple). Biblioth\u00e8que Pandas \u2693\ufe0e Cr\u00e9er Dataframe \u2693\ufe0e On cr\u00e9e un Dataframe \u00e0 partir d\u2019un tableau existant : Code 1 2 ar = [[ 1.1 , 2 , 3.3 , 4 ], [ 2.7 , 10 , 5.4 , 7 ], [ 5.3 , 9 , 1.5 , 15 ]] df = pd . DataFrame ( ar , index = [ 'a1' , 'a2' , 'a3' ], columns = [ 'A' , 'B' , 'C' , 'D\u2019]) Ou \u00e0 partir de rien code 1 2 3 df = pd . DataFrame ([{ 'A' : 1.1 , 'B' : 2 , 'C' : 3.3 , 'D' : 4 }, { 'A' : 2.7 , 'B' : 10 , 'C' : 5.4 , 'D' : 7 }, { 'A' : 5.3 , 'B' : 9 , 'C' : 1.5 , 'D' : 15 }]) Il faudra importer la biblioth\u00e8que pandas : import pandas as pd Importer \u00e0 partir d\u2019un fichier csv : 1 df = pandas . read_csv ( 'myFile.csv' , delimiter = \",\" , encoding = \u2019 utf \u2019 ) remarque v\u00e9rifier si le d\u00e9limiteur est une virgule ou un point virgule. Affichage et tris \u2693\ufe0e Pour afficher des colonnes, on utilise : 1 print ( df [[ 'A' , 'B' ]]) ou print ( df [ 'A' ]) head() , tail () : affichent les premi\u00e8res ou derni\u00e8res lignes (nombre de lignes en argument par default) describe() : infos statistiques sur le jeu de donn\u00e9es Encore plus avec include='all' en param\u00e8tre. Trier en fonction d'une valeur : 1 df . sort_values ( by = 'A' , ascending = False ) Affiche le tableau tri\u00e9 en function des valeurs de A d\u00e9croisssante. Utilisation du slice pour n'avoir que certaines lignes. Affichage conditionnel (affiche les valeurs de B quand celle de A est sup\u00e9rieure \u00e0 2 : 1 df [ 'B' ][ df [ 'A' ] > 2 ] Affiche les valeurs de A diff\u00e9rentes qui apparaissent. remarque On peut aussi utiliser numpy . 1 2 import numpy numpy . unique ( df [ 'A' ]) La m\u00e9thode len permet de connaitre de nombre de valeurs diff\u00e9rentes de A. Grouper et compter les valeurs correspondant \u00e0 une certaine donn\u00e9e \u2693\ufe0e Groupby \u2693\ufe0e Op\u00e9rations \u2693\ufe0e df.shape : affiche le nombre de lignes et de colonnes Identifier et supprimer les doublons : On peut choisir de garder le premier, le dernier Calculs divers : mean() count() min() max() Ajouter une colonne calcul\u00e9e : \u2693\ufe0e Jointure \u2693\ufe0e 1 tab = ages . merge ( professions , left_on = \"noms\" , right_on = \"noms\" ) Remarque En inversant ages et professions on obtient une inversions des colonnes dans le r\u00e9sultat Documentation \u2693\ufe0e https://moncoachdata.com/blog/guide-bibliotheque-pandas/ http://www.python-simple.com/python-pandas/panda-intro.php","title":"Traitement de donn\u00e9es en table"},{"location":"table_donnees/traitement_donnees.html#traitement-de-donnees-en-tables","text":"","title":"Traitement de donn\u00e9es en tables"},{"location":"table_donnees/traitement_donnees.html#activite-introduction","text":"","title":"Activit\u00e9 introduction"},{"location":"table_donnees/traitement_donnees.html#definitions","text":"Base de donn\u00e9es : ensemble d\u2019informations structur\u00e9es Descripteur : champ prenant une certaine valeur (donn\u00e9e) par ex Nom, Prenom, \u2026 Collection: ensemble de donn\u00e9es partageant les m\u00eames descripteurs par ex contacts partagent tous les descripteurs nom et prenom.","title":"D\u00e9finitions"},{"location":"table_donnees/traitement_donnees.html#caracteristiques-des-donnees","text":"Les donn\u00e9es peuvent \u00eatre de tout type : nombre, entier, chaine de caract\u00e8re, bool\u00e9en, \u2026 La collection est l\u2019ensemble des films r\u00e9pertori\u00e9s, les descripteurs sont ID (entier), nom (chaine de caract\u00e8res), genre (chaine de caract\u00e8res), Dur\u00e9e (entier), Date de sortie (chaine de caract\u00e8res), R\u00e9alisateur (chaine de caract\u00e8res) et Acteurs (chaine de caract\u00e8res). Les donn\u00e9es peuvent \u00eatre obligatoires (nom du film par exemple) ou facultative (dur\u00e9e du film). C\u2019est le cr\u00e9ateur de la BDD qui le d\u00e9finit. Un des champs doit \u00eatre UNIQUE pour qu\u2019il n\u2019y ait pas de confusion, en g\u00e9n\u00e9ral c\u2019est un identifiant nomm\u00e9 ID. Il est auto incr\u00e9ment\u00e9 quand on ajouter des \u00e9l\u00e9ments dans la BDD.","title":"Caract\u00e9ristiques des donn\u00e9es"},{"location":"table_donnees/traitement_donnees.html#utilite","text":"Une BDD sert \u00e0 structurer les donn\u00e9es et les trouver facilement. Elle permet de croiser les donn\u00e9es avec une autre base et de stocker les informations sur un support permanant. Elles permettent de faire des traitements statistiques et adapter les comportements en fonction des r\u00e9sultats (pub cibl\u00e9e par exemple).","title":"Utilit\u00e9"},{"location":"table_donnees/traitement_donnees.html#bibliotheque-pandas","text":"","title":"Biblioth\u00e8que Pandas"},{"location":"table_donnees/traitement_donnees.html#creer-dataframe","text":"On cr\u00e9e un Dataframe \u00e0 partir d\u2019un tableau existant : Code 1 2 ar = [[ 1.1 , 2 , 3.3 , 4 ], [ 2.7 , 10 , 5.4 , 7 ], [ 5.3 , 9 , 1.5 , 15 ]] df = pd . DataFrame ( ar , index = [ 'a1' , 'a2' , 'a3' ], columns = [ 'A' , 'B' , 'C' , 'D\u2019]) Ou \u00e0 partir de rien code 1 2 3 df = pd . DataFrame ([{ 'A' : 1.1 , 'B' : 2 , 'C' : 3.3 , 'D' : 4 }, { 'A' : 2.7 , 'B' : 10 , 'C' : 5.4 , 'D' : 7 }, { 'A' : 5.3 , 'B' : 9 , 'C' : 1.5 , 'D' : 15 }]) Il faudra importer la biblioth\u00e8que pandas : import pandas as pd Importer \u00e0 partir d\u2019un fichier csv : 1 df = pandas . read_csv ( 'myFile.csv' , delimiter = \",\" , encoding = \u2019 utf \u2019 ) remarque v\u00e9rifier si le d\u00e9limiteur est une virgule ou un point virgule.","title":"Cr\u00e9er Dataframe"},{"location":"table_donnees/traitement_donnees.html#affichage-et-tris","text":"Pour afficher des colonnes, on utilise : 1 print ( df [[ 'A' , 'B' ]]) ou print ( df [ 'A' ]) head() , tail () : affichent les premi\u00e8res ou derni\u00e8res lignes (nombre de lignes en argument par default) describe() : infos statistiques sur le jeu de donn\u00e9es Encore plus avec include='all' en param\u00e8tre. Trier en fonction d'une valeur : 1 df . sort_values ( by = 'A' , ascending = False ) Affiche le tableau tri\u00e9 en function des valeurs de A d\u00e9croisssante. Utilisation du slice pour n'avoir que certaines lignes. Affichage conditionnel (affiche les valeurs de B quand celle de A est sup\u00e9rieure \u00e0 2 : 1 df [ 'B' ][ df [ 'A' ] > 2 ] Affiche les valeurs de A diff\u00e9rentes qui apparaissent. remarque On peut aussi utiliser numpy . 1 2 import numpy numpy . unique ( df [ 'A' ]) La m\u00e9thode len permet de connaitre de nombre de valeurs diff\u00e9rentes de A.","title":"Affichage et tris"},{"location":"table_donnees/traitement_donnees.html#grouper-et-compter-les-valeurs-correspondant-a-une-certaine-donnee","text":"","title":"Grouper et compter les valeurs correspondant \u00e0 une certaine donn\u00e9e"},{"location":"table_donnees/traitement_donnees.html#groupby","text":"","title":"Groupby"},{"location":"table_donnees/traitement_donnees.html#operations","text":"df.shape : affiche le nombre de lignes et de colonnes Identifier et supprimer les doublons : On peut choisir de garder le premier, le dernier Calculs divers : mean() count() min() max()","title":"Op\u00e9rations"},{"location":"table_donnees/traitement_donnees.html#ajouter-une-colonne-calculee","text":"","title":"Ajouter une colonne calcul\u00e9e :"},{"location":"table_donnees/traitement_donnees.html#jointure","text":"1 tab = ages . merge ( professions , left_on = \"noms\" , right_on = \"noms\" ) Remarque En inversant ages et professions on obtient une inversions des colonnes dans le r\u00e9sultat","title":"Jointure"},{"location":"table_donnees/traitement_donnees.html#documentation","text":"https://moncoachdata.com/blog/guide-bibliotheque-pandas/ http://www.python-simple.com/python-pandas/panda-intro.php","title":"Documentation"}]}